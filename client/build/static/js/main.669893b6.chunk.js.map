{"version":3,"sources":["App/assets/mockUps3.png","App/components/SearchBar.js","App/components/PlayerSearchResult.js","App/components/LoadingSpinner.js","App/pages/Home.js","App/components/ClubSearchResult.js","App/pages/Search.js","App/pages/Stats.js","App/App.js","index.js"],"names":["module","exports","SearchBar","props","state","query","type","handleChange","bind","handleSubmit","event","this","setState","target","value","preventDefault","history","push","containerID","homeButton","to","id","style","color","className","onSubmit","placeholder","autoComplete","onChange","Component","withRouter","PlayerSearchResult","page","name","club","nationality","URL","replace","split","join","all","clubString","i","length","clubLabel","tabIndex","LoadingSpinner","Home","getSamplePlayers","fetch","method","headers","body","JSON","stringify","then","res","json","samplePlayers","isLoading","samplePlayerCards","current","url","href","src","mockUps","alt","backgroundColor","ClubSearchResult","Search","getSearchResults","undefined","searchByClub","ok","Error","searchResults","processSearchResults","catch","error","hideMenu","openMenu","handleInputChange","action","match","params","playerSearchResults","filteredPlayerSearchResults","clubSearchResults","names","clubs","nationalities","reactSelectStyle","control","base","boxShadow","borderColor","reactSelectTheme","theme","colors","primary25","primary","filterByClub","filterByName","nextProps","nextContext","currentResult","currentResultClubs","temp1","label","filter","e","temp2","temp3","selectedOption","console","log","parse","j","includes","toUpperCase","message","playerCards","searchFilter","searchText","clubCards","styles","isMulti","isClearable","options","onInputChange","onBlur","menuIsOpen","components","DropdownIndicator","IndicatorSeparator","marginTop","HighchartsMore","Highcharts","HighchartsParallel","Stats","getStats","response","processStats","allStats","percentiles","allCompetitions","selectedCompetitions","categories","template","isAll","multipleClubs","isMobile","fontSizes","title","subtitle","noData","xAxisLabels","dataLabels","dataLabelsOutline","tooltipHeader","tooltip","credits","yAxisLabels","changeTemplate","changeSelectedCompetitions","selectAllCompetitions","clearAllCompetitions","filterStats","calculateChartInput","percentRank","roundNumbers","insertChartInput","lastUpdated","stats","Object","keys","clickedCompetition","splice","indexOf","setCategories","filteredStats","competition","stat","percentileArrays","statsPer90","key","array","isFinite","someStats","precision","Math","round","chartInput","y","p90","Color","getOptions","setOpacity","get","cards","isIncluded","substring","checked","series","selectedStats","toLocaleString","chart","fontFamily","parallelCoordinates","parallelAxes","labels","enabled","fontSize","gridZIndex","lineWidth","endOnTick","showFirstLabel","showLastLabel","min","max","tickPositions","polar","hideDelay","spacingLeft","spacingRight","marginLeft","marginRight","marginBottom","events","load","element","onclick","window","open","text","plotOptions","inside","fontWeight","textOutline","format","padding","allowOverlap","z","margin","pane","startAngle","lang","headerFormat","pointFormat","legend","borderWidth","align","verticalAlign","layout","xAxis","zIndex","distance","gridLineWidth","gridLineColor","map","set","pointPadding","groupPadding","data","stickyTracking","exporting","scale","sourceWidth","sourceHeight","buttons","contextButton","menuItems","onClick","disabled","constructorType","highcharts","containerProps","width","App","getPercentiles","self","$","css","h","document","documentElement","clientHeight","innerHeight","exact","path","component","render","getElementById"],"mappings":"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","file":"static/js/main.669893b6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mockUps3.f4278b79.png\";","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n\r\nclass SearchBar extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            query: this.props.query,\r\n            type: this.props.type,\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({query: event.target.value});\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        this.props.history.push('/search/' + this.state.query);\r\n    }\r\n\r\n    render() {\r\n\r\n        const { type } = this.state;\r\n        let containerID;\r\n        let homeButton;\r\n        if (type === 1){\r\n            containerID = \"searchbar-container1\";\r\n            homeButton = <Link to={'/'}><div id=\"home-button\"><div>name<span style={{color: '#e1ba00'}}>.com</span></div></div></Link>;\r\n        }\r\n        else if (type === 2) {\r\n            containerID=\"searchbar-container2\";\r\n            homeButton = <Link to={'/'}><div id=\"home-button\"><div>name<span style={{color: '#e1bb00'}}>.com</span></div></div></Link>;\r\n        }\r\n        else {\r\n            containerID = \"searchbar-container3\";\r\n        }\r\n\r\n        return (\r\n            <div className=\"searchbar-container\" id={containerID}>\r\n                <form id=\"searchbar\" onSubmit={this.handleSubmit}>\r\n                    {homeButton}\r\n                    <input type=\"text\" id=\"query\" value={this.state.query} placeholder=\"Search for players, clubs...\" autoComplete=\"off\" onChange={this.handleChange}/>\r\n                </form>\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default withRouter (SearchBar);\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass PlayerSearchResult extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            page: this.props.page,\r\n            name: this.props.name,\r\n            club: this.props.club,\r\n            nationality: this.props.nationality,\r\n            URL: this.props.URL.replace(\"https://www.whoscored.com/\", \"\")\r\n                .replace(\"History\", \"Show\")\r\n                .split(\"/\")\r\n                .join(\"_\"),\r\n            all: this.props.all\r\n        };\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        let { club, page } = this.state;\r\n        let clubString = club[0];\r\n\r\n        for (let i=1; i<club.length; i++){\r\n            clubString += (\", \" + club[i]);\r\n        }\r\n\r\n        let className = page === 'home' ? 'sample-player' : 'search-result';\r\n        let clubLabel = page === 'home' ? '' : 'Club:';\r\n\r\n        return (\r\n            <Link to={\"/stats/\" + this.state.URL}>\r\n                <div tabIndex=\"0\" className={className}>\r\n                    <div className=\"name\">{this.state.name}</div>\r\n                    <div className=\"club\">{clubLabel} {clubString}</div>\r\n                    <div className=\"nationality\">Nationality: {this.state.nationality}</div>\r\n                </div>\r\n            </Link>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default (PlayerSearchResult);\r\n","import React, { Component } from 'react';\r\n\r\nclass LoadingSpinner extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"main\">\r\n                <div className=\"screen\" id=\"loading-screen\">\r\n                    <div className=\"loader\">Loading...</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\nexport default (LoadingSpinner);","import React, { Component } from 'react';\r\n\r\n// import Typist from 'react-typist';\r\nimport SearchBar from \"../components/SearchBar\"\r\nimport PlayerSearchResult from \"../components/PlayerSearchResult\"\r\nimport LoadingSpinner from \"../components/LoadingSpinner\";\r\n\r\nimport mockUps from \"../assets/mockUps3.png\"\r\n\r\n\r\nclass Home extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isLoading: false,\r\n            samplePlayers: [],\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            isLoading: true\r\n        }, () => {\r\n            this.getSamplePlayers();\r\n        });\r\n    }\r\n\r\n    getSamplePlayers = () => {\r\n        fetch('/api/samplePlayers', {\r\n            method: 'post',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({})\r\n        })\r\n        .then(res => res.json())\r\n        .then(samplePlayers => this.setState({samplePlayers: samplePlayers, isLoading: false}))\r\n    };\r\n\r\n    render() {\r\n\r\n        let { isLoading, samplePlayers } = this.state;\r\n\r\n        if (isLoading) {\r\n            return (\r\n                <LoadingSpinner/>\r\n            )\r\n        }\r\n\r\n        else {\r\n\r\n            let samplePlayerCards = [];\r\n            for (let i=0; i<samplePlayers.length; i++){\r\n                let current = samplePlayers[i];\r\n                samplePlayerCards.push(\r\n                    <PlayerSearchResult\r\n                        page = {\"home\"}\r\n                        name = {current.name}\r\n                        club = {current.club}\r\n                        nationality = {current.nationality}\r\n                        URL = {current.url}\r\n                    />\r\n                );\r\n            }\r\n\r\n            return (\r\n                <div id=\"homepage\">\r\n                    {/*<div id=\"menu\">*/}\r\n                    {/*    <a href=\"#home\">Home</a>*/}\r\n                    {/*    <a href=\"#preview\">OrganizedChaos</a>*/}\r\n                    {/*    <a href=\"#faq\">FAQ</a>*/}\r\n                    {/*    <a href=\"#contact\">Contact</a>*/}\r\n                    {/*</div>*/}\r\n                    <div id=\"home\">\r\n                        <h1>name<span style={{color: '#ffd700'}}>.com</span></h1>\r\n                        <SearchBar type={3}/>\r\n                        <br/>\r\n                        <br/>\r\n                        <p>...or try using a sample player</p>\r\n                        <br/>\r\n                        <div id=\"sample-results\">\r\n                            {samplePlayerCards}\r\n                        </div>\r\n                    </div>\r\n                    <div id=\"preview\" className=\"homepage-section-container\">\r\n                        <div id=\"preview-section-container\">\r\n                            <div id=\"preview-text\">\r\n                                <h2>OrganizedChaos</h2>\r\n                                <p>\r\n                                    OrganizedChaos is a football stats visualization tool that is supported by an\r\n                                    entirely automated data retrieval process. It sifts\r\n                                    through <span className=\"accented-p\">tens of thousands</span> of rows of numbers so\r\n                                    you don't have to!\r\n                                </p>\r\n                                <p>\r\n                                    Explore a database of <span className=\"accented-p\">1,900+</span> players from\r\n                                    Europe's top <span className=\"accented-p\">5</span> leagues from this season, and\r\n                                    hopefully much more in the near future.\r\n                                </p>\r\n                                <p>\r\n                                    Simply choose from <span className=\"accented-p\">5</span> positional templates, toggle the\r\n                                    competitions you'd like to include, and you can visualize statistics in seconds with\r\n                                    interactive percentile rank bar charts, powered by <a href=\"https://www.highcharts.com\" >Highcharts.js</a>.\r\n                                </p>\r\n                                <p><span className=\"accented-p\">How should the charts be interpreted?</span></p>\r\n                                <p>\r\n                                    Each chart consists of 12 wedges. The size of each wedge corresponds to the\r\n                                    percentile rank of the selected player with regards to the stat represented by the\r\n                                    wedge. The data labels show the raw (per 90) value.\r\n                                </p>\r\n                                <p>\r\n                                    The colours are meant to help group similar-ish stats together\r\n                                    (as well as improve the charts' visual impact).\r\n                                </p>\r\n                                <ul>\r\n                                    <li><span style={{color: '#f37c98'}}>Red</span> is for goal-scoring & shooting stats,</li>\r\n                                    <li><span style={{color: '#d7c971'}}>Yellow</span> is for passing & chance creation,</li>\r\n                                    <li><span style={{color: '#91d782'}}>Green</span> is for dribbling & ball retention</li>\r\n                                    <li>and <span style={{color: '#95c3ef'}}>Blue</span> is for defensive stats</li>\r\n                                </ul>\r\n                            </div>\r\n                            <div id=\"preview-image\">\r\n                                <img src={mockUps} alt=\"mockups\"/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div id=\"faq\" style={{backgroundColor: '#f0f1f2'}} className=\"homepage-section-container\">\r\n                        <div id=\"faq-section-container\">\r\n                            <h2>F.A.Q.</h2>\r\n                            <div id=\"faq-container\">\r\n                                <div className=\"faq-item\">\r\n                                    <p><span className=\"accented-p\">Where do you get your data from?</span></p>\r\n                                    <p><a href=\"https://www.whoscored.com\" >WhoScored.com</a> and <a href=\"https://www.fbref.com\">FBref.com</a></p>\r\n                                </div>\r\n                                <div className=\"faq-item\">\r\n                                    <p><span className=\"accented-p\">I can't find a player, and he plays in one of the top 5 leagues. Why?</span></p>\r\n                                    <p>\r\n                                        This is likely due to one of two reasons:\r\n                                    </p>\r\n                                    <ol>\r\n                                        <li>\r\n                                            The database only includes players who've made 4 or more league appearances this season.\r\n                                        </li>\r\n                                        <li>\r\n                                            The search function doesn't always detect special characters such as Ø and é like it's\r\n                                            supposed to (I'm working on it). You can try searching by club instead.\r\n                                        </li>\r\n                                    </ol>\r\n                                </div>\r\n                                <div className=\"faq-item\">\r\n                                    <p><span className=\"accented-p\">Can you add a feature to compare players on the same chart?</span></p>\r\n                                    <p>\r\n                                        Yes, that's in the works right now. Stay tuned!\r\n                                    </p>\r\n                                </div>\r\n                                <div className=\"faq-item\">\r\n                                    <p><span className=\"accented-p\">What is a percentile rank? How does the OrganizedChaos Tool calculate them?</span></p>\r\n                                    <p>\r\n                                        The percentile rank of a score is the percentage of scores within a total dataset\r\n                                        that are equal to or lower than the score. This is of course reversed for stats where\r\n                                        a lower value is better, such as the 'fouls committed per 90' stat.\r\n                                    </p>\r\n                                    <p>\r\n                                        The percentile ranks for the OrganizedChaos tool are position-specific. For example,\r\n                                        selecting the 'forward' template compares the selected player only to other forwards in the\r\n                                        dataset. To obtain a list of players who play in each of the 5 template positions,\r\n                                        the tool uses the <a href=\"https://whoscored.com/Statistics\">\r\n                                        WhoScored.com player statistics table</a> to select all top 5 league players\r\n                                        who have accumulated 10 or more starts this season in the said position. Their stats\r\n                                        from all competitions are then recorded in the dataset for their position.\r\n                                    </p>\r\n                                    <p>\r\n                                        For each chart, the percentile ranks of the selected player are then obtained by comparing\r\n                                        the player to all other scores in the dataset of the selected template position.\r\n                                        Note that the percentile ranks are not competition-specific. In other words, the selected\r\n                                        player's stats are always compared to other players' stats from all competitions, regardless\r\n                                        of which competitions are toggled for the selected player.\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div id=\"contact\" className=\"homepage-section-container\">\r\n                        <div id=\"contact-section-container\">\r\n                            <h2>Contact</h2>\r\n                            <p>\r\n                                For any bug reports, suggestions or questions, please feel free to reach out to me on twitter\r\n                                <a href=\"https://twitter.com/DyslexicDdue\" > @DyslexicDdue</a>\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass ClubSearchResult extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            name: this.props.name,\r\n        };\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Link to={\"/search/\" + this.state.name + \"/all\"}>\r\n                <div tabIndex=\"0\" className=\"search-result\">\r\n                    <div className=\"name\">{this.state.name}</div>\r\n                </div>\r\n            </Link>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default (ClubSearchResult);","import React, { Component } from 'react';\r\n\r\nimport SearchBar from \"../components/SearchBar\";\r\nimport LoadingSpinner from \"../components/LoadingSpinner\";\r\nimport PlayerSearchResult from \"../components/PlayerSearchResult\";\r\n\r\nimport Select from 'react-select';\r\nimport ClubSearchResult from \"../components/ClubSearchResult\";\r\n\r\n\r\nclass Search extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        let query = props.match.params.query;\r\n        let searchByClub = props.match.params.searchByClub;\r\n        this.state = {\r\n            isLoading: false,\r\n            error: null,\r\n            query: query,\r\n            searchByClub: searchByClub,\r\n            playerSearchResults: [],\r\n            filteredPlayerSearchResults: [],\r\n            openMenu: false,\r\n            clubSearchResults: [],\r\n            names: [],\r\n            clubs: [],\r\n            nationalities: [],\r\n            reactSelectStyle: {\r\n                control: (base, state) => ({\r\n                    ...base,\r\n                    boxShadow: \"none\",\r\n                    '&:hover': {\r\n                        borderColor: '#B23535'\r\n                    },\r\n                    '&:focus': {\r\n                        borderColor: '#B23535'\r\n                    },\r\n                })\r\n            },\r\n            reactSelectTheme: theme => ({\r\n                ...theme,\r\n                colors: {\r\n                    ...theme.colors,\r\n                    primary25: \"pink\",\r\n                    primary: \"#e75453\"\r\n                }\r\n            })\r\n        };\r\n\r\n        this.filterByClub = this.filterByClub.bind(this);\r\n        this.filterByName = this.filterByName.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            isLoading: true\r\n        }, () => {\r\n            this.getSearchResults();\r\n        });\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps, nextContext) {\r\n        let { query, searchByClub } = nextProps.match.params;\r\n        this.setState({\r\n            isLoading: true,\r\n            query: query,\r\n            searchByClub: searchByClub\r\n        }, () => {\r\n            this.getSearchResults();\r\n        });\r\n    }\r\n\r\n\r\n    getSearchResults = () => {\r\n\r\n        let searchByClub = this.state.searchByClub;\r\n        let type;\r\n        if (searchByClub === undefined){\r\n            type = \"playersAndClubs\"\r\n        }\r\n        else {\r\n            type = \"playersByClub\"\r\n        }\r\n        fetch('/api/search', {\r\n            method: 'post',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                \"query\": this.state.query,\r\n                \"type\": type\r\n            })\r\n        })\r\n        .then(res => {\r\n            if (res.ok) {\r\n                return res.json()\r\n            }\r\n            else {\r\n               throw new Error(\"No results found\")\r\n            }\r\n        })\r\n        .then(searchResults => this.processSearchResults(searchResults))\r\n        .catch(error => this.setState({error, isLoading: false}));\r\n\r\n    };\r\n\r\n    processSearchResults(searchResults){\r\n        let playerSearchResults = searchResults['playerSearchResults'];\r\n        let clubSearchResults = searchResults['clubSearchResults'];\r\n\r\n        let names = [];\r\n        let clubs = [];\r\n        let nationalities = [];\r\n\r\n        for (let i=0; i<playerSearchResults.length; i++){\r\n            let currentResult = playerSearchResults[i];\r\n            let currentResultClubs = currentResult.club;\r\n            for (let i=0; i<currentResultClubs.length; i++){\r\n                let temp1 = {\r\n                    value: currentResult.club[i],\r\n                    label: currentResult.club[i],\r\n                };\r\n                if (!clubs.filter(e => e.value === temp1.value).length > 0){\r\n                    clubs.push(temp1);\r\n                }\r\n            }\r\n            let temp2 = {\r\n                value: currentResult.nationality,\r\n                label: currentResult.nationality,\r\n            };\r\n            let temp3 = {\r\n                value: currentResult.name,\r\n                label: currentResult.name\r\n            };\r\n            names.push(temp3);\r\n            if (!nationalities.filter(e => e.value === temp2.value).length > 0){\r\n                nationalities.push(temp2);\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            playerSearchResults: playerSearchResults,\r\n            filteredPlayerSearchResults: playerSearchResults,\r\n            clubSearchResults: clubSearchResults,\r\n            names: names,\r\n            clubs: clubs,\r\n            nationalities: nationalities,\r\n            isLoading: false,\r\n            error: null\r\n        })\r\n    }\r\n\r\n    filterByClub(selectedOption){\r\n\r\n        console.log(selectedOption);\r\n\r\n        let playerSearchResults = JSON.parse(JSON.stringify(this.state.playerSearchResults));\r\n        let filteredPlayerSearchResults = [];\r\n\r\n        if (selectedOption === null || selectedOption.length === 0){\r\n            filteredPlayerSearchResults = playerSearchResults;\r\n        }\r\n\r\n        else {\r\n            for (let i=0; i<playerSearchResults.length; i++){\r\n                for (let j=0; j<selectedOption.length; j++){\r\n                    if (playerSearchResults[i].club.includes(selectedOption[j].value)\r\n                        && !filteredPlayerSearchResults.includes(playerSearchResults[i])) {\r\n                        filteredPlayerSearchResults.push(playerSearchResults[i]);\r\n                    }\r\n                    // if (selectedOption[j].value === playerSearchResults[i].club){\r\n                    //     filteredPlayerSearchResults.push(playerSearchResults[i]);\r\n                    // }\r\n                }\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            filteredPlayerSearchResults: []\r\n        }, () => {\r\n            this.setState({\r\n                filteredPlayerSearchResults: filteredPlayerSearchResults\r\n            })\r\n        });\r\n\r\n    }\r\n\r\n    filterByName(selectedOption){\r\n\r\n        let playerSearchResults = JSON.parse(JSON.stringify(this.state.playerSearchResults));\r\n        let filteredPlayerSearchResults = [];\r\n\r\n        if (selectedOption === null){\r\n            filteredPlayerSearchResults = playerSearchResults;\r\n        }\r\n\r\n        else {\r\n            for (let i=0; i<playerSearchResults.length; i++){\r\n                if (playerSearchResults[i].name.toUpperCase().includes(selectedOption.value.toUpperCase())){\r\n                    filteredPlayerSearchResults.push(playerSearchResults[i]);\r\n                }\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            filteredPlayerSearchResults: []\r\n        }, () => {\r\n            this.setState({\r\n                filteredPlayerSearchResults: filteredPlayerSearchResults,\r\n                openMenu: false\r\n            })\r\n        });\r\n\r\n    }\r\n\r\n    hideMenu = () => {\r\n        this.setState({ openMenu: false });\r\n    };\r\n\r\n    handleInputChange = (query, { action }) => {\r\n        if (action === \"input-change\") {\r\n            let openMenu;\r\n            openMenu = query.length !== 0;\r\n            this.setState({ openMenu: openMenu });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        let {\r\n            error,\r\n            isLoading,\r\n            filteredPlayerSearchResults,\r\n            clubSearchResults,\r\n            clubs,\r\n            names,\r\n            searchByClub,\r\n            openMenu,\r\n            reactSelectStyle,\r\n            reactSelectTheme\r\n        } = this.state;\r\n\r\n        if (isLoading) {\r\n            return (\r\n                <LoadingSpinner/>\r\n            )\r\n        }\r\n\r\n        else if (error !== null) {\r\n            return (\r\n                <div id=\"main\">\r\n                    <SearchBar type={1} query={this.state.query}/>\r\n                    <div className=\"screen\" id=\"error-screen\">\r\n                        <p>{error.message}</p>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        else {\r\n\r\n            let playerCards = [];\r\n            for (let i=0; i<filteredPlayerSearchResults.length; i++){\r\n                let current = filteredPlayerSearchResults[i];\r\n                playerCards.push(\r\n                    <PlayerSearchResult\r\n                        page={\"search\"}\r\n                        name={current.name}\r\n                        club={current.club}\r\n                        nationality={current.nationality}\r\n                        URL={current.URL}\r\n                        all={current.all}\r\n                    />\r\n                );\r\n            }\r\n\r\n            let clubCards = [];\r\n            for (let i=0; i<clubSearchResults.length; i++){\r\n                let current = clubSearchResults[i];\r\n                clubCards.push(\r\n                    <ClubSearchResult\r\n                        name={current}\r\n                    />\r\n                )\r\n            }\r\n\r\n            let searchFilter;\r\n            let searchText;\r\n            if (searchByClub === undefined){\r\n                searchText = <h3>Search results for <br/>\"{this.state.query}\"</h3>;\r\n                searchFilter =\r\n                    <Select\r\n                        styles={reactSelectStyle}\r\n                        theme={reactSelectTheme}\r\n                        placeholder={\"Filter players by club\"}\r\n                        onChange={this.filterByClub}\r\n                        isMulti\r\n                        isClearable\r\n                        options={clubs}\r\n                    />\r\n            }\r\n\r\n            else {\r\n                searchText = <h3>Search results for <br/>\"player.club = {this.state.query}\"</h3>;\r\n                searchFilter =\r\n                    <Select\r\n                        styles={reactSelectStyle}\r\n                        theme={reactSelectTheme}\r\n                        placeholder={\"Filter players by name\"}\r\n                        onChange={this.filterByName}\r\n                        onInputChange={this.handleInputChange}\r\n                        onBlur={this.hideMenu}\r\n                        isClearable\r\n                        menuIsOpen={openMenu}\r\n                        options={names}\r\n                        components={\r\n                            {\r\n                                DropdownIndicator: () => null,\r\n                                IndicatorSeparator: () => null\r\n                            }\r\n                        }\r\n                    />\r\n            }\r\n\r\n            return (\r\n                <div id=\"main\">\r\n                    <SearchBar type={1} query={this.state.query}/>\r\n                    <div className=\"screen\" id=\"search-screen\">\r\n                        <div className=\"filter\" id=\"search-filters\">\r\n                            {searchText}\r\n                            <div id=\"search-filter-inputs\">\r\n                                {searchFilter}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"result\" id=\"search-results\">\r\n                            {searchByClub === undefined ? <h3>Players</h3> : null}\r\n                            {playerCards.length === 0 && searchByClub === undefined ? <p>No results found</p> : null}\r\n                            <div id=\"player-search-results\">\r\n                                {playerCards}\r\n                            </div>\r\n                            {searchByClub === undefined ? <h3 style={{marginTop: '20px'}}>Clubs</h3> : null}\r\n                            {clubCards.length === 0 && searchByClub === undefined ? <p>No results found</p> : null}\r\n                            <div id=\"club-search-results\">\r\n                                {clubCards}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default Search;\r\n","import React, { Component } from 'react';\r\n\r\nimport SearchBar from \"../components/SearchBar\";\r\nimport LoadingSpinner from \"../components/LoadingSpinner\";\r\nimport Highcharts from 'highcharts/highstock'\r\nimport HighchartsMore from 'highcharts/highcharts-more'\r\nimport HighchartsParallel from 'highcharts/modules/parallel-coordinates'\r\nimport HighchartsReact from 'highcharts-react-official'\r\n\r\nHighchartsMore(Highcharts);\r\nHighchartsParallel(Highcharts);\r\n\r\nclass Stats extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        let categories = [\r\n            'Non-Penalty Goals',\r\n            'Non-Penalty xG',\r\n            'Conversion Rate',\r\n            'Shots on Target %',\r\n            'Assists',\r\n            'xA',\r\n            'Passes into the Penalty Area',\r\n            'Pass Completion %',\r\n            'Successful Dribbles',\r\n            'Dribble Success %',\r\n            'Turnovers',\r\n            'Recoveries',\r\n        ];\r\n        this.state = {\r\n            isLoading: false,\r\n            allStats: {},\r\n            percentiles: this.props.percentiles,\r\n            allCompetitions: [],\r\n            selectedCompetitions: [],\r\n            categories: categories,\r\n            template: \"FW\",\r\n            name: '',\r\n            url: '',\r\n            isAll: false,\r\n            multipleClubs: false,\r\n            isMobile: this.props.isMobile,\r\n            fontSizes: {\r\n                title: this.props.isMobile === true ? '4vw' : '2em',\r\n                subtitle: this.props.isMobile === true ? '2.8vw' : '1.4em',\r\n                noData: this.props.isMobile === true ? '2.7vw' : '1.35em',\r\n                xAxisLabels: this.props.isMobile === true ? '2.3vw' : '1.15em',\r\n                dataLabels: this.props.isMobile === true ? '2.3vw' : '1.25em',\r\n                dataLabelsOutline: this.props.isMobile === true ? '0.3vw' : '0.16em',\r\n                tooltipHeader: this.props.isMobile === true ? '2.3vw' : '1em',\r\n                tooltip: this.props.isMobile === true ? '2.3vw' : '1.25em',\r\n                credits: this.props.isMobile === true ? '2vw' : '1.1em',\r\n                yAxisLabels: this.props.isMobile === true ? '1vw' : '0.5em',\r\n            }\r\n        };\r\n\r\n        this.processStats = this.processStats.bind(this);\r\n        this.changeTemplate = this.changeTemplate.bind(this);\r\n        this.changeSelectedCompetitions = this.changeSelectedCompetitions.bind(this);\r\n        this.selectAllCompetitions = this.selectAllCompetitions.bind(this);\r\n        this.clearAllCompetitions = this.clearAllCompetitions.bind(this);\r\n        this.filterStats = this.filterStats.bind(this);\r\n        this.calculateChartInput = this.calculateChartInput.bind(this);\r\n        this.percentRank = this.percentRank.bind(this);\r\n        this.roundNumbers = this.roundNumbers.bind(this);\r\n        this.insertChartInput = this.insertChartInput.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            isLoading: true\r\n        }, () => {\r\n            this.getStats();\r\n        });\r\n    }\r\n\r\n    getStats = () => {\r\n        const { URL } = this.props.match.params;\r\n\r\n        fetch('/api/stats', {\r\n            method: 'post',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                \"URL\": URL\r\n            })\r\n        })\r\n        .then(res => res.json())\r\n        .then(response => this.processStats(response))\r\n    };\r\n\r\n    processStats(response) {\r\n        let multipleClubs = (response.club.length !== 1);\r\n        this.setState({\r\n            url: response.url,\r\n            name: response.name,\r\n            club: response.club[0],\r\n            lastUpdated: response.lastUpdated,\r\n            allStats: response.stats,\r\n            allCompetitions: Object.keys(response.stats),\r\n            selectedCompetitions: Object.keys(response.stats),\r\n            isLoading: false,\r\n            multipleClubs: multipleClubs\r\n        }, () => {\r\n\r\n        });\r\n    }\r\n\r\n    changeSelectedCompetitions(event){\r\n\r\n        let selectedCompetitions = this.state.selectedCompetitions;\r\n        let clickedCompetition = event.target.value;\r\n\r\n        if (selectedCompetitions.includes(clickedCompetition)){\r\n            selectedCompetitions.splice(selectedCompetitions.indexOf(clickedCompetition), 1);\r\n        }\r\n        else{\r\n            selectedCompetitions.push(clickedCompetition);\r\n        }\r\n\r\n        this.setState({\r\n            selectedCompetitions: selectedCompetitions\r\n        });\r\n\r\n    }\r\n\r\n    selectAllCompetitions(event){\r\n\r\n        let allCompetitions = JSON.parse(JSON.stringify(this.state.allCompetitions));\r\n\r\n        this.setState({\r\n            selectedCompetitions: allCompetitions\r\n        });\r\n\r\n    }\r\n\r\n    clearAllCompetitions(event){\r\n\r\n        this.setState({\r\n            selectedCompetitions: []\r\n        });\r\n\r\n    }\r\n\r\n    changeTemplate(event){\r\n        let template = event.target.value;\r\n\r\n        this.setState({\r\n            template: template\r\n        }, () => {\r\n            this.setCategories();\r\n        });\r\n\r\n    }\r\n\r\n    setCategories() {\r\n        let template = this.state.template;\r\n\r\n        let categories = [];\r\n        switch (template) {\r\n            case \"FW\":\r\n                categories = [\r\n                    'Non-Penalty Goals',\r\n                    'Non-Penalty xG',\r\n                    'Conversion Rate',\r\n                    'Shots on Target %',\r\n                    'Assists',\r\n                    'xA',\r\n                    'Passes into the Penalty Area',\r\n                    'Pass Completion %',\r\n                    'Successful Dribbles',\r\n                    'Dribble Success %',\r\n                    'Turnovers',\r\n                    'Recoveries',\r\n                ];\r\n                break;\r\n            case \"AM\":\r\n                categories = [\r\n                    'Non-Penalty Goals',\r\n                    'Non-Penalty xG',\r\n                    'Assists',\r\n                    'xA',\r\n                    'Passes into the Penalty Area',\r\n                    'Pass Completion %',\r\n                    'Completed Crosses',\r\n                    'Cross Completion %',\r\n                    'Successful Dribbles',\r\n                    'Dribble Success %',\r\n                    'Turnovers',\r\n                    'Recoveries',\r\n                ];\r\n                break;\r\n            case \"CM\":\r\n                categories = [\r\n                    'Non-Penalty Goals + Assists',\r\n                    'Non-Penalty xG + xA',\r\n                    'Passes into the Final 1/3',\r\n                    'Pass Completion %',\r\n                    'Completed Long Passes',\r\n                    'Long Pass Completion %',\r\n                    'Successful Dribbles',\r\n                    'Dribble Success %',\r\n                    'Interceptions',\r\n                    'Tackles Won',\r\n                    'Tackle Win %',\r\n                    'Fouls Committed'\r\n                ];\r\n                break;\r\n            case \"FB\":\r\n                categories = [\r\n                    'Assists',\r\n                    'xA',\r\n                    'Passes into the Final 1/3',\r\n                    'Pass Completion %',\r\n                    'Completed Crosses',\r\n                    'Cross Completion %',\r\n                    'Successful Dribbles',\r\n                    'Dribble Success %',\r\n                    'Interceptions',\r\n                    'Tackles Won',\r\n                    'Tackle Win %',\r\n                    'Fouls Committed'\r\n                ];\r\n                break;\r\n            case \"CB\":\r\n                categories = [\r\n                    'Passes into the Final 1/3',\r\n                    'Pass Completion %',\r\n                    'Completed Long Passes',\r\n                    'Long Pass Completion %',\r\n                    'Interceptions',\r\n                    'Tackles Won',\r\n                    'Tackle Win %',\r\n                    'Fouls Committed',\r\n                    'Aerial Duels Won',\r\n                    'Aerial Duel Win %',\r\n                    'Blocks',\r\n                    'Clearances'\r\n                ];\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            categories: categories\r\n        })\r\n\r\n    }\r\n\r\n    filterStats(stats){\r\n        let filteredStats = {};\r\n        let selectedCompetitions = this.state.selectedCompetitions;\r\n        for (let competition in stats){\r\n            if (selectedCompetitions.includes(competition)) {\r\n                for (let stat in stats[competition]) {\r\n                    if (!(stat in filteredStats)) {\r\n                        filteredStats[stat] = stats[competition][stat];\r\n                    } else {\r\n                        filteredStats[stat] += stats[competition][stat];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return filteredStats;\r\n    }\r\n\r\n    calculateChartInput(filteredStats, percentileArrays){\r\n        let template = this.state.template;\r\n        let statsPer90 = {};\r\n        let percentiles = {};\r\n        switch (template){\r\n            case \"FW\":\r\n                statsPer90['goals'] = filteredStats['goals'] / (filteredStats['minutes']/90);\r\n                // statsPer90['shots'] = (filteredStats['shots']  - filteredStats['penaltiesTaken']) / (filteredStats['minutes']/90);\r\n                statsPer90['xG'] = filteredStats['xG'] / (filteredStats['minutes']/90);\r\n                statsPer90['conversionRate'] = (filteredStats['goals'] / (filteredStats['shots']  - filteredStats['penaltiesTaken'])) * 100;\r\n                statsPer90['shotsOnTarget'] = ((filteredStats['shotsOnTarget'] - filteredStats['penaltiesTaken']) / (filteredStats['shots'] - filteredStats['penaltiesTaken'])) * 100;\r\n                statsPer90['assists'] = filteredStats['assists'] / (filteredStats['minutes']/90);\r\n                // statsPer90['keyPasses'] = filteredStats['keyPasses'] / (filteredStats['minutes']/90);\r\n                statsPer90['xA'] = filteredStats['xA'] / (filteredStats['minutes']/90);\r\n                // statsPer90['succPasses'] = filteredStats['succPasses'] / (filteredStats['minutes']/90);\r\n                statsPer90['PPA'] = filteredStats['PPA'] / (filteredStats['minutes']/90);\r\n                statsPer90['passingRate'] = (filteredStats['succPasses'] / filteredStats['totalPasses']) * 100;\r\n                statsPer90['succDribbles'] = filteredStats['succDribbles'] / (filteredStats['minutes']/90);\r\n                statsPer90['dribbleRate'] = (filteredStats['succDribbles'] / filteredStats['totalDribbles']) * 100;\r\n                statsPer90['possessionLosses'] = filteredStats['possessionLosses'] / (filteredStats['minutes']/90);\r\n                statsPer90['recoveries'] = (filteredStats['tackles'] / (filteredStats['minutes']/90)) + (filteredStats['interceptions'] / (filteredStats['minutes']/90));\r\n                for (let key in statsPer90){\r\n                    percentiles[key] = this.percentRank(percentileArrays['fw'][key], statsPer90[key]) * 100\r\n                }\r\n                percentiles['possessionLosses'] = 100 - percentiles['possessionLosses'];\r\n                break;\r\n            case \"AM\":\r\n                statsPer90['goals'] = filteredStats['goals'] / (filteredStats['minutes']/90);\r\n                // statsPer90['shots'] = (filteredStats['shots']  - filteredStats['penaltiesTaken']) / (filteredStats['minutes']/90);\r\n                statsPer90['xG'] = filteredStats['xG'] / (filteredStats['minutes']/90);\r\n                statsPer90['assists'] = filteredStats['assists'] / (filteredStats['minutes']/90);\r\n                // statsPer90['keyPasses'] = filteredStats['keyPasses'] / (filteredStats['minutes']/90);\r\n                statsPer90['xA'] = filteredStats['xA'] / (filteredStats['minutes']/90);\r\n                // statsPer90['succPasses'] = filteredStats['succPasses'] / (filteredStats['minutes']/90);\r\n                statsPer90['PPA'] = filteredStats['PPA'] / (filteredStats['minutes']/90);\r\n                statsPer90['passingRate'] = (filteredStats['succPasses'] / filteredStats['totalPasses']) * 100;\r\n                statsPer90['succCrosses'] = filteredStats['succCrosses'] / (filteredStats['minutes']/90);\r\n                statsPer90['crossRate'] = (filteredStats['succCrosses'] / filteredStats['totalCrosses']) * 100;\r\n                statsPer90['succDribbles'] = filteredStats['succDribbles'] / (filteredStats['minutes']/90);\r\n                statsPer90['dribbleRate'] = (filteredStats['succDribbles'] / filteredStats['totalDribbles']) * 100;\r\n                statsPer90['possessionLosses'] = filteredStats['possessionLosses'] / (filteredStats['minutes']/90);\r\n                statsPer90['recoveries'] = (filteredStats['tackles'] / (filteredStats['minutes']/90)) + (filteredStats['interceptions'] / (filteredStats['minutes']/90));\r\n                for (let key in statsPer90){\r\n                    percentiles[key] = this.percentRank(percentileArrays['am'][key], statsPer90[key]) * 100\r\n                }\r\n                percentiles['possessionLosses'] = 100 - percentiles['possessionLosses'];\r\n                break;\r\n            case \"CM\":\r\n                statsPer90['goalsPlusAssists'] = (filteredStats['goals'] + filteredStats['assists']) / (filteredStats['minutes']/90);\r\n                // statsPer90['keyPasses'] = filteredStats['keyPasses'] / (filteredStats['minutes']/90);\r\n                // statsPer90['xA'] = filteredStats['xA'] / (filteredStats['minutes']/90);\r\n                statsPer90['xGPlusxA'] = (filteredStats['xG'] + filteredStats['xA']) / (filteredStats['minutes']/90);\r\n                // statsPer90['succPasses'] = filteredStats['succPasses'] / (filteredStats['minutes']/90);\r\n                statsPer90['PFT'] = filteredStats['PFT'] / (filteredStats['minutes']/90);\r\n                statsPer90['passingRate'] = (filteredStats['succPasses'] / filteredStats['totalPasses']) * 100;\r\n                statsPer90['succLongPasses'] = filteredStats['succLongPasses'] / (filteredStats['minutes']/90);\r\n                statsPer90['longPassingRate'] = (filteredStats['succLongPasses'] / filteredStats['totalLongPasses']) * 100;\r\n                statsPer90['succDribbles'] = filteredStats['succDribbles'] / (filteredStats['minutes']/90);\r\n                statsPer90['dribbleRate'] = (filteredStats['succDribbles'] / filteredStats['totalDribbles']) * 100;\r\n                statsPer90['interceptions'] = (filteredStats['interceptions'] / (filteredStats['minutes']/90));\r\n                statsPer90['tackles'] = (filteredStats['tackles'] / (filteredStats['minutes']/90));\r\n                statsPer90['tackleRate'] = (filteredStats['tackles'] / (filteredStats['tackles'] + filteredStats['dribbledPast'])) *100;\r\n                statsPer90['fouls'] = filteredStats['fouls'] / (filteredStats['minutes']/90);\r\n                for (let key in statsPer90){\r\n                    percentiles[key] = this.percentRank(percentileArrays['cm'][key], statsPer90[key]) * 100\r\n                }\r\n                percentiles['fouls'] = 100 - percentiles['fouls'];\r\n                break;\r\n            case \"FB\":\r\n                statsPer90['assists'] = filteredStats['assists'] / (filteredStats['minutes']/90);\r\n                // statsPer90['keyPasses'] = filteredStats['keyPasses'] / (filteredStats['minutes']/90);\r\n                statsPer90['xA'] = filteredStats['xA'] / (filteredStats['minutes']/90);\r\n                // statsPer90['succPasses'] = filteredStats['succPasses'] / (filteredStats['minutes']/90);\r\n                statsPer90['PFT'] = filteredStats['PFT'] / (filteredStats['minutes']/90);\r\n                statsPer90['passingRate'] = (filteredStats['succPasses'] / filteredStats['totalPasses']) * 100;\r\n                statsPer90['succCrosses'] = filteredStats['succCrosses'] / (filteredStats['minutes']/90);\r\n                statsPer90['crossRate'] = (filteredStats['succCrosses'] / filteredStats['totalCrosses']) * 100;\r\n                statsPer90['succDribbles'] = filteredStats['succDribbles'] / (filteredStats['minutes']/90);\r\n                statsPer90['dribbleRate'] = (filteredStats['succDribbles'] / filteredStats['totalDribbles']) * 100;\r\n                statsPer90['interceptions'] = (filteredStats['interceptions'] / (filteredStats['minutes']/90));\r\n                statsPer90['tackles'] = (filteredStats['tackles'] / (filteredStats['minutes']/90));\r\n                statsPer90['tackleRate'] = (filteredStats['tackles'] / (filteredStats['tackles'] + filteredStats['dribbledPast'])) *100;\r\n                statsPer90['fouls'] = filteredStats['fouls'] / (filteredStats['minutes']/90);\r\n                for (let key in statsPer90){\r\n                    percentiles[key] = this.percentRank(percentileArrays['fb'][key], statsPer90[key]) * 100\r\n                }\r\n                percentiles['fouls'] = 100 - percentiles['fouls'];\r\n                break;\r\n            case \"CB\":\r\n                // statsPer90['succPasses'] = filteredStats['succPasses'] / (filteredStats['minutes']/90);\r\n                statsPer90['PFT'] = filteredStats['PFT'] / (filteredStats['minutes']/90);\r\n                statsPer90['passingRate'] = (filteredStats['succPasses'] / filteredStats['totalPasses']) * 100;\r\n                statsPer90['succLongPasses'] = filteredStats['succLongPasses'] / (filteredStats['minutes']/90);\r\n                statsPer90['longPassingRate'] = (filteredStats['succLongPasses'] / filteredStats['totalLongPasses']) * 100;\r\n                statsPer90['interceptions'] = (filteredStats['interceptions'] / (filteredStats['minutes']/90));\r\n                statsPer90['tackles'] = (filteredStats['tackles'] / (filteredStats['minutes']/90));\r\n                statsPer90['tackleRate'] = (filteredStats['tackles'] / (filteredStats['tackles'] + filteredStats['dribbledPast'])) *100;\r\n                statsPer90['fouls'] = filteredStats['fouls'] / (filteredStats['minutes']/90);\r\n                statsPer90['succAerialDuels'] = filteredStats['succAerialDuels'] / (filteredStats['minutes']/90);\r\n                statsPer90['aerialDuelRate'] = (filteredStats['succAerialDuels'] / filteredStats['totalAerialDuels']) * 100;\r\n                statsPer90['blocks'] = (filteredStats['blocks'] / (filteredStats['minutes']/90));\r\n                statsPer90['clearances'] = filteredStats['clearances'] / (filteredStats['minutes']/90);\r\n                for (let key in statsPer90){\r\n                    percentiles[key] = this.percentRank(percentileArrays['cb'][key], statsPer90[key]) * 100\r\n                }\r\n                percentiles['fouls'] = 100 - percentiles['fouls'];\r\n                break;\r\n        }\r\n        return this.insertChartInput(statsPer90, percentiles);\r\n    }\r\n\r\n    percentRank(array, value) {\r\n        if (!isFinite(value)){\r\n            value = 0;\r\n        }\r\n        for (let i = 0, length = array.length; i < length; i++) {\r\n            if (value < array[i]) {\r\n                while (i < length && value === array[i]) i++;\r\n                if (i === 0) return 0;\r\n                if (value !== array[i-1]) {\r\n                    i += (value - array[i-1]) / (array[i] - array[i-1]);\r\n                }\r\n                return i / length;\r\n            }\r\n        }\r\n        return 1;\r\n    }\r\n\r\n    roundNumbers(someStats, precision){\r\n        for (let stat in someStats){\r\n            if (isFinite(someStats[stat])) {\r\n                someStats[stat] = Math.round(someStats[stat] * (10**precision)) / (10**precision);\r\n            }\r\n            else {\r\n                someStats[stat] = 0;\r\n            }\r\n        }\r\n        return someStats;\r\n    }\r\n\r\n    insertChartInput(statsPer90, percentiles) {\r\n        let template = this.state.template;\r\n        let colors = [];\r\n        if (template === \"FW\"){\r\n            colors = [5, 5, 5, 5, 6, 6, 6, 6, 2, 2, 2, 0];\r\n        }\r\n        else if (template === \"AM\"){\r\n            colors = [5, 5, 6, 6, 6, 6, 6, 6, 2, 2, 2, 0];\r\n        }\r\n        else if (template === \"CM\"){\r\n            colors = [8, 8, 6, 6, 6, 6, 2, 2, 0, 0, 0, 0];\r\n        }\r\n        else if (template === \"FB\"){\r\n            colors = [6, 6, 6, 6, 6, 6, 2, 2, 0, 0, 0, 0];\r\n        }\r\n        else {\r\n            colors = [6, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0, 0];\r\n        }\r\n        statsPer90 = this.roundNumbers(statsPer90, 2);\r\n        percentiles = this.roundNumbers(percentiles, 0);\r\n        let chartInput = [];\r\n        let i = 0;\r\n        for (let key in percentiles){\r\n            chartInput[i] = {y: percentiles[key], p90: statsPer90[key], color: Highcharts.Color(Highcharts.getOptions().colors[colors[i]]).setOpacity(0.8).get()};\r\n            i++;\r\n        }\r\n        return chartInput;\r\n    }\r\n\r\n    render() {\r\n\r\n        let {\r\n            name,\r\n            url,\r\n            club,\r\n            lastUpdated,\r\n            selectedCompetitions,\r\n            template,\r\n            categories,\r\n            allStats,\r\n            percentiles,\r\n            isLoading,\r\n            multipleClubs,\r\n            fontSizes,\r\n            isMobile\r\n        } = this.state;\r\n\r\n        if (isLoading) {\r\n            return (\r\n                <LoadingSpinner/>\r\n            )\r\n        }\r\n\r\n        else {\r\n            let allCompetitions = this.state.allCompetitions;\r\n            let cards = [];\r\n            for (let i=0; i<allCompetitions.length; i++){\r\n                let current = allCompetitions[i];\r\n                let isIncluded = selectedCompetitions.includes(current);\r\n                let label = current;\r\n                if (!multipleClubs){\r\n                    label = label.substring(0, label.indexOf(\"|\")-1)\r\n                }\r\n                cards.push(\r\n                    <label className={isIncluded ? \"selected-label\" : null}>\r\n                        <input className=\"competition\"\r\n                               type=\"checkbox\"\r\n                               value={current}\r\n                               onChange={this.changeSelectedCompetitions}\r\n                               checked={isIncluded}\r\n                        /> {\"  \" + label}\r\n                    </label>\r\n                )\r\n            }\r\n\r\n            if (percentiles.length !== 0 && Object.keys(allStats).length !== 0 && categories !== []) {\r\n\r\n                let selectedStats = this.filterStats(allStats);\r\n                let series;\r\n                let subtitle = \"\";\r\n                if (selectedCompetitions.length !== 0){\r\n                    let chartInput = this.calculateChartInput(selectedStats, percentiles);\r\n                    series = [chartInput];\r\n                    // subtitle = \"Percentile Rank Bars (w/ p90 Raw Values)<br>\";\r\n                    switch (template) {\r\n                        case \"FW\":\r\n                            subtitle += \"vs Top-5 League Players with 10+ Starts as Forwards<br/>\";\r\n                            break;\r\n                        case \"AM\":\r\n                            subtitle += \"vs Top-5 League Players with 10+ Starts as Attacking Midfielders / Wingers<br/>\";\r\n                            break;\r\n                        case \"CM\":\r\n                            subtitle += \"vs Top-5 League Players with 10+ Starts as Central / Defensive Midfielders<br/>\";\r\n                            break;\r\n                        case \"FB\":\r\n                            subtitle += \"vs Top-5 League Players with 10+ Starts as Full-backs<br/>\";\r\n                            break;\r\n                        case \"CB\":\r\n                            subtitle += \"vs Top-5 League Players with 10+ Starts as Center-backs<br/>\";\r\n                            break;\r\n                    }\r\n\r\n                    subtitle += (\"Percentile Rank Bars (with per 90 Raw Values)<br/>Minutes Played: \" + selectedStats['minutes'].toLocaleString());\r\n                    subtitle += \"<br>Last Updated: \" + lastUpdated + \" UTC\";\r\n                }\r\n\r\n                else {\r\n                    series = [];\r\n                    subtitle = \"-<br>-<br>-<br>-\";\r\n                }\r\n\r\n                var options = {\r\n                    chart: {\r\n                        backgroundColor: 'rgba(0, 0, 0, 0)',\r\n                        style: {\r\n                            fontFamily: 'sans-serif'\r\n                        },\r\n                        parallelCoordinates: true,\r\n                        parallelAxes: {\r\n                            labels: {\r\n                                enabled: false,\r\n                                style: {\r\n                                    color: '#444444',\r\n                                    fontSize: fontSizes['yAxisLabels'],\r\n                                }\r\n                            },\r\n                            gridZIndex: 5,\r\n                            lineWidth: 0,\r\n                            endOnTick: true,\r\n                            showFirstLabel: false,\r\n                            showLastLabel: true,\r\n                            min: -15,\r\n                            max: 100,\r\n                            tickPositions: [-15, 0, 25, 50, 75, 100]\r\n                        },\r\n                        polar: true,\r\n                        type: 'column',\r\n                        // plotBackgroundColor: '#F5F6F7',\r\n                        // plotShadow: true,\r\n                        hideDelay: 0,\r\n                        spacingLeft: 0,\r\n                        spacingRight: 0,\r\n                        marginLeft: 90,\r\n                        marginRight: 90,\r\n                        marginBottom: 30,\r\n                        events: {\r\n                            load: function() {\r\n                                this.title.element.onclick = function() {\r\n                                    window.open(url, '_blank');\r\n                                }\r\n                            },\r\n                        }\r\n                    },\r\n                    credits: {\r\n                        text: \"Data sources: Opta (via WhoScored.com) & Statsbomb (via FBref.com)\",\r\n                        style: {\r\n                            fontSize: fontSizes['credits']\r\n                        },\r\n                        href: ''\r\n                    },\r\n                    plotOptions: {\r\n                        series: {\r\n                            color: Highcharts.Color(Highcharts.getOptions().colors[0]).setOpacity(0.6).get(),\r\n                            dataLabels: {\r\n                                enabled: true,\r\n                                inside: true,\r\n                                style: {\r\n                                    color: \"black\",\r\n                                    fontWeight: '600',\r\n                                    fontSize: fontSizes['dataLabels'],\r\n                                    textOutline: fontSizes['dataLabelsOutline'] + \" #fafbfc\"\r\n                                },\r\n                                format: '{point.p90}',\r\n                                padding: 0,\r\n                                allowOverlap: true,\r\n                                z: 7\r\n                            },\r\n                            // shadow: true\r\n                        },\r\n                    },\r\n                    title: {\r\n                        text: name + \", 19/20\",\r\n                        style: {\r\n                            color: '#e75453',\r\n                            fontSize: fontSizes['title'],\r\n                            fontWeight: 'bold',\r\n                        },\r\n                        margin: 35\r\n                    },\r\n                    pane: {\r\n                        startAngle: -16.3636363636363636363\r\n                    },\r\n                    lang: {\r\n                        noData: \"Select a competition\"\r\n                    },\r\n                    noData: {\r\n                        style: {\r\n                            fontWeight: 'bold',\r\n                            fontSize: fontSizes['noData'],\r\n                            color: '#303030'\r\n                        }\r\n                    },\r\n                    subtitle: {\r\n                        text: subtitle,\r\n                        style: {\r\n                            // color: 'black',\r\n                            fontSize: fontSizes['subtitle']\r\n                        }\r\n                    },\r\n                    tooltip: {\r\n                        headerFormat: '<span style=\"font-size: ' + fontSizes['tooltipHeader'] + '\">{point.key}</span><br/>',\r\n                        pointFormat: '<span style=\"color:{point.color}\">\\u25CF</span>' +\r\n                            ' {series.name}<br>Raw Value: <b>{point.p90}</b><br/>Percentile Rank: <b>{point.formattedValue}</b>',\r\n                        style: {\r\n                            fontSize: fontSizes['tooltip']\r\n                        }\r\n                    },\r\n                    legend: {\r\n                        enabled: false,\r\n                        borderWidth: 1,\r\n                        align: 'center',\r\n                        verticalAlign: 'bottom',\r\n                        layout: 'horizontal'\r\n                    },\r\n                    xAxis: {\r\n                        categories: categories,\r\n                        labels: {\r\n                            zIndex: 1,\r\n                            distance: isMobile === true ? 60 : 40,\r\n                            style: {\r\n                                fontSize: fontSizes['xAxisLabels'],\r\n                            },\r\n                            padding: 31\r\n                        },\r\n                        gridLineWidth: 1.5,\r\n                        gridLineColor: '#333333',\r\n                        gridZIndex: 4\r\n                    },\r\n                    series:\r\n                        series.map(function (set, i) {\r\n                            return {\r\n                                pointPadding: 0,\r\n                                groupPadding: 0,\r\n                                name: name,\r\n                                data: set,\r\n                                stickyTracking: false,\r\n                                zIndex: 0\r\n                            };\r\n                        }),\r\n                    exporting: {\r\n                        scale: 1,\r\n                        sourceWidth: 1920,\r\n                        sourceHeight: 1080,\r\n                        buttons: {\r\n                            contextButton: {\r\n                                menuItems: [\"viewFullscreen\", \"printChart\"]\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            }\r\n\r\n            return (\r\n                <div id=\"main2\">\r\n                    <SearchBar type={2}/>\r\n                    <div className=\"screen2\" id=\"content-screen\">\r\n                        <div className=\"filter\" id=\"chart-filters\">\r\n                            <div className=\"chart-filter-inputs\" id=\"chart-filter-inputs-laptop\">\r\n                                <h3>Template</h3>\r\n                                <form id=\"templates\" onChange={this.changeTemplate}>\r\n                                    <label><input type=\"radio\" name=\"template\" value=\"FW\" checked={template === \"FW\" ? true: null}/> Forward </label>\r\n                                    <label><input type=\"radio\" name=\"template\" value=\"AM\" checked={template === \"AM\" ? true: null}/> Attacking Midfielder / Winger</label>\r\n                                    <label><input type=\"radio\" name=\"template\" value=\"CM\" checked={template === \"CM\" ? true: null}/> Central / Defensive Midfielder</label>\r\n                                    <label><input type=\"radio\" name=\"template\" value=\"FB\" checked={template === \"FB\" ? true: null}/> Full-back </label>\r\n                                    <label><input type=\"radio\" name=\"template\" value=\"CB\" checked={template === \"CB\" ? true: null}/> Center-back </label>\r\n                                </form>\r\n                                <h3>Competitions</h3>\r\n                                <h4 style={{marginBottom: '10px'}}>19/20 {multipleClubs === false ? ' | ' + club : null}</h4>\r\n                                <form id=\"competitions\">\r\n                                    {cards}\r\n                                </form>\r\n                            </div>\r\n                            <div className=\"chart-filter-inputs\" id=\"chart-filter-inputs-mobile\">\r\n                                <div id=\"templates-container\">\r\n                                    <h3>Template</h3>\r\n                                    <form id=\"templates\" onChange={this.changeTemplate}>\r\n                                        <label className={template === \"FW\" ? \"selected-label\" : null}>\r\n                                            <input type=\"radio\" name=\"template\" value=\"FW\" checked={template === \"FW\" ? true: null}/> <span>Forward</span>\r\n                                        </label>\r\n                                        <label className={template === \"AM\" ? \"selected-label\" : null}>\r\n                                            <input type=\"radio\" name=\"template\" value=\"AM\" checked={template === \"AM\" ? true: null}/> <span>Attacking Midfielder / Winger</span>\r\n                                        </label>\r\n                                        <label className={template === \"CM\" ? \"selected-label\" : null}>\r\n                                            <input type=\"radio\" name=\"template\" value=\"CM\" checked={template === \"CM\" ? true: null}/> <span>Central / Defensive Midfielder</span>\r\n                                        </label>\r\n                                        <label className={template === \"FB\" ? \"selected-label\" : null}>\r\n                                            <input type=\"radio\" name=\"template\" value=\"FB\" checked={template === \"FB\" ? true: null}/> <span>Full-back</span>\r\n                                        </label>\r\n                                        <label className={template === \"CB\" ? \"selected-label\" : null}>\r\n                                            <input type=\"radio\" name=\"template\" value=\"CB\" checked={template === \"CB\" ? true: null}/> <span>Center-back</span>\r\n                                        </label>\r\n                                    </form>\r\n                                </div>\r\n                                <div id=\"competitions-container\">\r\n                                    <h3 style={{marginBottom: '0px'}}>Competitions</h3>\r\n                                    <h4 style={{marginBottom: '20px'}}>19/20 {multipleClubs === false ? ' | ' + club : null}</h4>\r\n                                    <form id=\"competitions\">\r\n                                        {cards}\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                            <div id=\"filter-buttons\">\r\n                                <div className=\"filter-button\">\r\n                                    <button id=\"selectAllButton\" type=\"button\" onClick={this.selectAllCompetitions}>Select All Competitions</button>\r\n                                </div>\r\n                                <div className=\"filter-button\">\r\n                                    <button id=\"clearAllButton\" type=\"button\" onClick={this.clearAllCompetitions}>Clear All Competitions</button>\r\n                                </div>\r\n                                <div className=\"filter-button\">\r\n                                    <button id=\"compareButton\" type=\"button\" disabled={true}>Compare To...</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"result\" id=\"chart\">\r\n                            <HighchartsReact\r\n                                constructorType={\"chart\"}\r\n                                highcharts={Highcharts}\r\n                                containerProps={{style: {width: '100%'}}}\r\n                                options={options}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default Stats;\r\n","import React, { Component } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport './App.css';\r\nimport Home from './pages/Home';\r\nimport Search from './pages/Search';\r\nimport Stats from './pages/Stats';\r\n\r\nimport $ from 'jquery';\r\n\r\nclass App extends Component {\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n        this.state = {\r\n            percentiles: {},\r\n            isMobile: false\r\n        };\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        var isMobile = false;\r\n        var self = this;\r\n\r\n        $(function() {\r\n\r\n            if ($('body').css('background-color') === 'rgb(250, 251, 253)') {\r\n                isMobile = true;\r\n            }\r\n\r\n            if (isMobile){\r\n\r\n                var h = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\r\n\r\n                $(\"html, body, #root, #root-container\").css({\"height\":h});\r\n                $(\"#home\").css({\"height\":h});\r\n\r\n                self.setState({\r\n                    isMobile: isMobile\r\n                })\r\n\r\n            }\r\n\r\n        });\r\n\r\n        this.getPercentiles()\r\n\r\n    }\r\n\r\n    getPercentiles = () => {\r\n\r\n        fetch('/api/percentiles', {\r\n            method: 'post',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n\r\n            })\r\n        })\r\n        .then(res => {\r\n            return res.json()\r\n        })\r\n        .then(percentiles => this.setState({percentiles: percentiles}))\r\n        .catch();\r\n\r\n    };\r\n\r\n    render() {\r\n\r\n        const App = () => (\r\n            <div id=\"root-container\">\r\n                <Switch>\r\n                    <Route exact path='/' component={Home}/>\r\n                    <Route path='/search/:query/:searchByClub?' component={Search}/>\r\n                    <Route path='/stats/:URL' render={(props) => <Stats {...props} percentiles={this.state.percentiles} isMobile={this.state.isMobile} />}/>\r\n                </Switch>\r\n            </div>\r\n        );\r\n        return (\r\n            <Switch>\r\n              <App/>\r\n            </Switch>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport './index.css';\r\nimport App from './App/App';\r\n\r\nrender((\r\n    <BrowserRouter>\r\n        <App/>\r\n    </BrowserRouter>\r\n), document.getElementById('root'));"],"sourceRoot":""}