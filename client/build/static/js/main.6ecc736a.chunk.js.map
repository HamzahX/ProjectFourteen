{"version":3,"sources":["App/assets/mockups.png","App/components/SearchBar.js","App/components/PlayerSearchResult.js","App/components/LoadingSpinner.js","App/pages/Home.js","App/components/ClubSearchResult.js","App/pages/Search.js","App/components/SliceOptions.js","App/components/Slice.js","App/pages/Stats.js","App/App.js","index.js"],"names":["module","exports","SearchBar","props","handleChange","event","setState","query","target","value","handleSubmit","preventDefault","history","push","state","page","containerID","homeButton","this","to","id","style","color","display","className","onSubmit","type","placeholder","autoComplete","onChange","Component","withRouter","PlayerSearchResult","clubs","seasons","season","length","code","name","nationality","clubLabel","tabIndex","join","LoadingSpinner","Home","_isMounted","getSamplePlayers","isMobile","fetch","method","headers","body","JSON","stringify","then","res","json","samplePlayers","isLoading","height","Math","max","document","documentElement","clientHeight","window","innerHeight","navbarHeight","$","css","addClass","toggleNavbar","responsiveNavbar","attr","removeClass","hideNavbar","samplePlayerButtons","i","current","key","href","onClick","rel","fontWeight","src","mockUps","alt","backgroundColor","ClubSearchResult","Search","getSearchResults","undefined","searchByClub","ok","Error","searchResults","processSearchResults","catch","error","playerSearchResults","clubSearchResults","filteredPlayerSearchResults","filterByName","parse","input","normalize","replace","toUpperCase","includes","filterValue","match","params","nextProps","nextContext","message","playerCards","searchText","clubCards","marginTop","SliceOptions","positions","competitions","labelTypes","template","selectedCompetitions","labelType","templateLabels","mobileTemplateLabels","position","mobileClassName","disabled","checked","changeTemplate","templatesForm","mobileTemplatesForm","competitionsForms","counter","competitionLabels","multipleClubs","marginBottom","currentCompetition","isIncluded","label","substring","indexOf","changeSelectedCompetitions","labelTypeLabels","changeLabelType","labelTypeForm","toggleCreditsPosition","exportChart","HighchartsMore","Highcharts","Slice","isForExport","fontSizes","title","subtitle","noData","xAxisLabels","dataLabels","dataLabelsOutline","tooltipHeader","tooltip","credits","yAxisLabels","categories","subtitles","chartOptions","text","fontSize","margin","pane","startAngle","chart","fontFamily","animation","polar","marginLeft","marginRight","events","xAxis","labels","zIndex","distance","padding","gridLineWidth","gridLineColor","gridZIndex","yAxis","enabled","lineWidth","endOnTick","showFirstLabel","showLastLabel","min","tickPositions","series","plotOptions","states","hover","textOutline","format","allowOverlap","z","headerFormat","pointFormat","legend","align","y","lang","age","minutes","toLocaleString","isAnimated","creditsPosition","url","load","element","onclick","open","map","data","pointPadding","groupPadding","stickyTracking","isAnimatedInitial","hasTooltip","lastUpdated","constructorType","highcharts","containerProps","width","options","dateFormat","require","cookies","Cookies","Stats","getStats","percentileArrays","response","processStats","playerStats","newPercentileArrays","updatePercentileArrays","stats","competition","fbrefCode","percentileEntries","filterStats","filteredStats","stat","calculateStats","percentileSeason","includedSeasons","percentileArrayOccurrences","statsPer90","percentiles","isFinite","percentileRank","array","occurrences","constructChartInput","colors","p90_labels","truncate","percentile_labels","roundNumbers","chartInput","p90_label","percentile_label","ordinalSuffix","Color","setOpacity","get","someStats","threeDigitStats","precision","parseFloat","round","toFixed","roundedStats","aNumber","j","k","clickedValues","split","clickedSeason","clickedCompetition","splice","set","path","newPosition","a","async","isSafari","alert","node","getElementById","backgroundWidth","backgroundSize","offsetWidth","backgroundHeightRatio","offsetHeight","nodeAspectRatio","domtoimage","toPng","bgcolor","opacity","transform","blob","saveAs","console","log","null","labelTypeCookie","creditsPositionCookie","Object","keys","calculatedStats","isMobileOnly","test","App","getPercentileArrays","exact","render","component"],"mappings":"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","file":"static/js/main.6ecc736a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mockups.7dea4274.png\";","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n\r\n\r\n/**\r\n * Component to render a div containing a searchbar\r\n */\r\nclass SearchBar extends Component {\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n\r\n        this.state = {\r\n            page: this.props.page,\r\n            query: this.props.query || \"\",\r\n        };\r\n\r\n    }\r\n\r\n    /**\r\n     * Function to change the value of the searchbar query\r\n     * @param {Object} event - the input event from the searchbar input\r\n     */\r\n    handleChange = (event) => {\r\n        this.setState({query: event.target.value});\r\n    };\r\n\r\n\r\n    /**\r\n     * Function to handle submit events from the searchbar input\r\n     * Redirects to the search URL with the correct URL params\r\n     * @param {Object} event - the submit event from the searchbar input\r\n     */\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.history.push('/search/' + this.state.query);\r\n    };\r\n\r\n\r\n    /**\r\n     * render function\r\n     * modifies searchbar based on the page it is to be displayed on\r\n     * @return {*} - JSX code for the searchbar and its container\r\n     */\r\n    render() {\r\n\r\n        const { page, query } = this.state;\r\n\r\n        let containerID;\r\n        let homeButton;\r\n\r\n        //change the searchbar container id based on the page so that the CSS rules modify it accordingly\r\n        switch (page) {\r\n            case \"home\":\r\n                containerID = \"searchbar-container1\";\r\n                break;\r\n            case \"search\":\r\n                containerID = \"searchbar-container2\";\r\n                break;\r\n            case \"stats\":\r\n                containerID = \"searchbar-container3\";\r\n                break;\r\n            default:\r\n                containerID = \"searchbar-container1\";\r\n        }\r\n\r\n        //attach a home button to the searchbar if it is not being displayed on the homepage\r\n        if (page !== \"home\"){\r\n            homeButton =\r\n                <Link to={'/'}>\r\n                    <div id=\"home-button\">\r\n                        <div>\r\n                            Football\r\n                            <span style={{color: '#e4c000', display: 'block'}}>Slices\r\n                            <span style={{color: 'black'}}>.com</span></span>\r\n                        </div>\r\n                    </div>\r\n                </Link>;\r\n        }\r\n\r\n        //return JSX code for the searchbar\r\n        return (\r\n            <div className=\"searchbar-container\" id={containerID}>\r\n                <form id=\"searchbar-form\" onSubmit={this.handleSubmit}>\r\n                    {homeButton}\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"searchbar-input\"\r\n                        value={query}\r\n                        placeholder=\"Search for players, clubs...\"\r\n                        autoComplete=\"off\"\r\n                        onChange={this.handleChange}\r\n                    />\r\n                </form>\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default withRouter (SearchBar);\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n/**\r\n * Component to render a player search result\r\n */\r\nclass PlayerSearchResult extends Component {\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n\r\n        //set the player clubs entry to their most recent season's clubs\r\n        let clubs = this.props.clubs;\r\n        let seasons = [];\r\n        for (let season in clubs){\r\n            seasons.push(season);\r\n        }\r\n        clubs = clubs[seasons[seasons.length-1]];\r\n\r\n        this.state = {\r\n            page: this.props.page,\r\n            code: this.props.code,\r\n            name: this.props.name,\r\n            clubs: clubs,\r\n            nationality: this.props.nationality,\r\n        };\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * render function\r\n     * @return {*} - JSX code for a player search result\r\n     */\r\n    render() {\r\n\r\n        let {\r\n            page,\r\n            code,\r\n            name,\r\n            clubs,\r\n            nationality\r\n        } = this.state;\r\n\r\n        //change the div class name based on the page so that the CSS rules modify it accordingly\r\n        let className = page === 'home' ? 'sample-player' : 'search-result';\r\n\r\n        //remove the \"Club: \" label for home page, and modify it to \"Clubs\" if there are more than 1\r\n        let clubLabel = page === 'home' ? '' : clubs.length === 1 ? 'Club:' : 'Clubs:';\r\n\r\n        return (\r\n            <Link to={\"/stats/\" + code}>\r\n                <div tabIndex=\"0\" className={className}>\r\n                    <div className=\"name\">{name}</div>\r\n                    <div className=\"club\">{clubLabel} {clubs.join(\", \")}</div>\r\n                    <div className=\"nationality\">Nationality: {nationality}</div>\r\n                </div>\r\n            </Link>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default (PlayerSearchResult);\r\n","import React, { Component } from 'react';\r\n\r\n\r\n/**\r\n * Renders a pure CSS loading spinner\r\n * taken from: https://projects.lukehaas.me/css-loaders/\r\n */\r\nclass LoadingSpinner extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"main\">\r\n                <div className=\"screen\" id=\"loading-screen\">\r\n                    <div className=\"loader\">Loading...</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\nexport default (LoadingSpinner);\r\n","import React, { Component } from 'react';\r\nimport $ from \"jquery\";\r\n\r\n//import components\r\nimport SearchBar from \"../components/SearchBar\"\r\nimport PlayerSearchResult from \"../components/PlayerSearchResult\"\r\nimport LoadingSpinner from \"../components/LoadingSpinner\";\r\n\r\n//import assets\r\nimport mockUps from \"../assets/mockups.png\"\r\n\r\n\r\n/**\r\n * Homepage component\r\n */\r\nclass Home extends Component {\r\n\r\n    //class variable to track if the component is mounted\r\n    _isMounted = false;\r\n\r\n    /**\r\n     * Constructor\r\n     * @param props\r\n     */\r\n    constructor(props) {\r\n\r\n        super(props);\r\n        this.state = {\r\n            isMobile: this.props.isMobile,\r\n            isLoading: true,\r\n            samplePlayers: [],\r\n        };\r\n        this.getSamplePlayers();\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * Called after component has mounted\r\n     */\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n    }\r\n\r\n\r\n    /**\r\n     * Function to send a post request to the server to retrieve 3 sample players to be displayed on the homepage\r\n     */\r\n    getSamplePlayers = () => {\r\n\r\n        let isMobile = this.state.isMobile;\r\n\r\n        //retrieve sample players\r\n        fetch('/api/samplePlayers', {\r\n            method: 'post',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({})\r\n        })\r\n        .then(res => res.json())\r\n        .then(samplePlayers => {\r\n            //only set state if the component is mounter\r\n            if (this._isMounted){\r\n                this.setState({samplePlayers: samplePlayers, isLoading: false});\r\n                //hard code the height of home and the navbar container if it is a mobile device\r\n                //this is done because the soft keyboards on mobile devices affect the view-height\r\n                if (isMobile){\r\n                    var height = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\r\n                    var navbarHeight = 0.06 * height;\r\n                    $(\"#home\").css({\"height\": height});\r\n                    $(\"#navbar-container\").css({\"height\": navbarHeight});\r\n                }\r\n                //add preload class to the hidden menu to disable the first animation\r\n                $(\"#navbar-hidden\").addClass('preload');\r\n            }\r\n        })\r\n\r\n    };\r\n\r\n\r\n    /**\r\n     * Called just before the component un-mounts\r\n     */\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n\r\n\r\n    /**\r\n     * Function to display/hide the responsive navbar\r\n     */\r\n    toggleNavbar = () => {\r\n\r\n        //select the responsive navbar element\r\n        let responsiveNavbar = $(\".responsive-navbar\");\r\n\r\n        //expand or hide based on current state\r\n        if (responsiveNavbar.attr(\"id\") === \"navbar-hidden\"){\r\n            responsiveNavbar.attr(\"id\", \"navbar-expanded\");\r\n        }\r\n        else {\r\n            //remove preload class when expanding to re-enable animations\r\n            $(\"#navbar-expanded\").removeClass('preload');\r\n            responsiveNavbar.attr(\"id\", \"navbar-hidden\");\r\n        }\r\n\r\n    };\r\n\r\n\r\n    /**\r\n     * Function to hide the navbar (called after one of the menu options is clicked)\r\n     */\r\n    hideNavbar = () => {\r\n\r\n        $(\"#navbar-expanded\").removeClass('preload');\r\n        $(\".responsive-navbar\").attr(\"id\", \"navbar-hidden\");\r\n\r\n    };\r\n\r\n\r\n    /**\r\n     * render function\r\n     * @return {*} - JSX code for the homepage\r\n     */\r\n    render() {\r\n\r\n        let { isLoading, samplePlayers } = this.state;\r\n\r\n        //display loading spinner while the server responds to POST request for the sample players\r\n        if (isLoading) {\r\n            return (\r\n                <LoadingSpinner/>\r\n            )\r\n        }\r\n\r\n        //return homepage code otherwise\r\n        else {\r\n\r\n            //construct the sample player buttons\r\n            let samplePlayerButtons = [];\r\n            for (let i=0; i<samplePlayers.length; i++){\r\n                let current = samplePlayers[i];\r\n                samplePlayerButtons.push(\r\n                    <PlayerSearchResult\r\n                        page = \"home\"\r\n                        code = {current.code}\r\n                        name = {current.name}\r\n                        clubs = {current.clubs}\r\n                        nationality = {current.nationality}\r\n                        key = {i}\r\n                    />\r\n                );\r\n            }\r\n\r\n            //static JSX code for the homepage\r\n            return (\r\n                <div id=\"homepage\">\r\n                    <div id=\"navbar-container\">\r\n                        <div className=\"navbar\" id=\"navbar-normal\">\r\n                            <a href=\"#home\">\r\n                                <div>Home</div>\r\n                            </a>\r\n                            <a href=\"#preview\">\r\n                                <div>Preview</div>\r\n                            </a>\r\n                            <a href=\"#glossary\">\r\n                                <div>Glossary</div>\r\n                            </a>\r\n                            <a href=\"#faq\">\r\n                                <div>F.A.Q.</div>\r\n                            </a>\r\n                            <a href=\"#contact\">\r\n                                <div>Contact</div>\r\n                            </a>\r\n                            <button onClick={this.toggleNavbar} id=\"burger-icon-container\">\r\n                                <div id=\"burgerIcon\"><i className=\"fa fa-bars\"/></div>\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"navbar responsive-navbar\" id=\"navbar-hidden\">\r\n                            <a onClick={this.hideNavbar} href=\"#preview\">\r\n                                <div>Preview</div>\r\n                            </a>\r\n                            <a onClick={this.hideNavbar} href=\"#glossary\">\r\n                                <div>Glossary</div>\r\n                            </a>\r\n                            <a onClick={this.hideNavbar} href=\"#faq\">\r\n                                <div>F.A.Q.</div>\r\n                            </a>\r\n                            <a onClick={this.hideNavbar} href=\"#contact\">\r\n                                <div>Contact</div>\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                    <div id=\"home\">\r\n                        <h1>Football<span style={{color: '#e4c000'}}>Slices</span></h1>\r\n                        <SearchBar page=\"home\"/>\r\n                        <br/>\r\n                        <br/>\r\n                        <p>...or try using a sample player</p>\r\n                        <br/>\r\n                        <div id=\"sample-results\">\r\n                            {samplePlayerButtons}\r\n                        </div>\r\n                    </div>\r\n                    <div id=\"preview\" className=\"homepage-section-container\">\r\n                        <div id=\"preview-section-container\">\r\n                            <div id=\"preview-text\">\r\n                                <h2>Preview</h2>\r\n                                <p>\r\n                                    FootballSlices are stats visualizations that are supported by an\r\n                                    entirely automated data retrieval process. The tool sifts through mountains of\r\n                                    numbers so you don't have to!\r\n                                </p>\r\n                                <p>\r\n                                    Explore a database of more than <b>2,700 players</b> from <b>Europe's top 5 leagues</b>,\r\n                                    with stats from the <b>2018/19</b> and <b>2019/20</b> seasons.\r\n                                </p>\r\n                                <p>\r\n                                    Simply choose a positional template, toggle the competitions you'd like to include,\r\n                                    and visualize statistics in seconds with interactive percentile rank bar\r\n                                    charts, powered by <a href=\"https://www.highcharts.com\" target=\"_blank\" rel=\"noopener noreferrer\">Highcharts.js</a>.\r\n                                </p>\r\n                                <p><span className=\"accented-p\">Interpreting FootballSlices</span></p>\r\n                                <p>\r\n                                    Each slice is made up of wedges. The size of each wedge corresponds to the\r\n                                    percentile rank of the selected player with regards to the stat represented by the\r\n                                    wedge. The data labels show the raw values.\r\n                                </p>\r\n                                <p>\r\n                                    The colours help to group similar-ish stats together (as well as improve the charts'\r\n                                    visual impact).\r\n                                </p>\r\n                                <ul>\r\n                                    <li><span style={{color: '#f15c80', fontWeight: 'bold'}}>Red</span> is for goal-scoring & shooting stats,</li>\r\n                                    <li><span style={{color: '#e4c000', fontWeight: 'bold'}}>Yellow</span> is for passing, chance creation & ball progression</li>\r\n                                    <li><span style={{color: '#87e179', fontWeight: 'bold'}}>Green</span> is for dribbling & ball retention</li>\r\n                                    <li><span style={{color: '#7db9f0', fontWeight: 'bold'}}>Blue</span> is for defending</li>\r\n                                    <li>and <span style={{color: '#787ccd', fontWeight: 'bold'}}>Purple</span> is for goalkeeping stats</li>\r\n                                </ul>\r\n                            </div>\r\n                            <div id=\"preview-image\">\r\n                                <img src={mockUps} alt=\"Mock-ups\"/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div id=\"glossary\" style={{backgroundColor: '#f5f6f7'}} className=\"homepage-section-container\">\r\n                        <div id=\"glossary-section-container\">\r\n                            <h2>Glossary</h2>\r\n                            <ul>\r\n                                <li>\r\n                                    <span style={{color: '#f15c80', fontWeight: 'bold'}}>Non-Penalty Goal</span>&nbsp;\r\n                                    A goal that did not stem directly from a penalty kick.\r\n                                </li>\r\n                                <li>\r\n                                    <span style={{color: '#f15c80', fontWeight: 'bold'}}>Non-Penalty xG (Expected Goals)</span>&nbsp;\r\n                                    Expected goals that did not stem directly from penalty kicks.*\r\n                                </li>\r\n                                <li>\r\n                                    <span style={{color: '#f15c80', fontWeight: 'bold'}}>Non-Penalty xG/Shot</span>&nbsp;\r\n                                    The average expected goal value of shots taken, excluding penalty kicks.\r\n                                </li>\r\n                                <li>\r\n                                    <span style={{color: '#f15c80', fontWeight: 'bold'}}>Conversion Rate</span>&nbsp;\r\n                                    The percentage of shots that resulted in goals, excluding penalty kicks.\r\n                                </li>\r\n                                <li>\r\n                                    <span style={{color: '#f15c80', fontWeight: 'bold'}}>Aerial Win %</span>&nbsp;\r\n                                    The percentage of aerials duels contested that were won.\r\n                                </li>\r\n                                <li>\r\n                                    <span style={{color: '#e4c000', fontWeight: 'bold'}}>Touch in Box</span>&nbsp;\r\n                                    Having possession of the ball in the opposition's penalty area.\r\n                                    (Note: Receiving a pass, then dribbling, then sending a pass counts as one touch)\r\n                                </li>\r\n                                <li>\r\n                                    <span style={{color: '#e4c000', fontWeight: 'bold'}}>xA (Expected Assists)</span>&nbsp;\r\n                                    Expected goals that resulted from shot assists, including set pieces.*\r\n                                </li>\r\n                                <li>\r\n                                    <span style={{color: '#e4c000', fontWeight: 'bold'}}>OP (Open Play) Shot-Creating Action</span>&nbsp;\r\n                                    Excluding set pieces, one of the last two offensive actions that directly\r\n                                    led to a shot; such as a pass, dribble or a drawn foul.\r\n                                    (Note: A single player can receive credit for multiple actions and the shot-taker can also receive credit)\r\n                                </li>\r\n                                <li>\r\n                                    <span style={{color: '#e4c000', fontWeight: 'bold'}}>Pass into Box</span>&nbsp;\r\n                                    A completed pass that entered the opposition's penalty area, excluding set pieces.\r\n                                </li>\r\n                                <li>\r\n                                    <span style={{color: '#e4c000', fontWeight: 'bold'}}>Pass into Final 1/3</span>&nbsp;\r\n                                    A completed pass that entered the third of the pitch that is closest to the opposition's goal, excluding set pieces.\r\n                                </li>\r\n                                <li>\r\n                                    <span style={{color: '#e4c000', fontWeight: 'bold'}}>Progressive Distance</span>&nbsp;\r\n                                    Distance, in yards, that the ball was moved towards the oppositions's goal\r\n                                    with passes and carries.\r\n                                    (Note: Passes and carries away from the oppositions's goal are counted as zero progressive yards)\r\n                                </li>\r\n                                <li>\r\n                                    <span style={{color: '#e4c000', fontWeight: 'bold'}}>Pass Completion %</span>&nbsp;\r\n                                    The percentage of attempted passes that successfully found a teammate.\r\n                                </li>\r\n                                <li>\r\n                                    <span style={{color: '#e4c000', fontWeight: 'bold'}}>Long Pass Completion %</span>&nbsp;\r\n                                    The percentage of attempted passes of 25 yards or more that successfully found a teammate.\r\n                                </li>\r\n                                <li>\r\n                                    <span style={{color: '#e4c000', fontWeight: 'bold'}}>Launched Pass Completion %</span>&nbsp;\r\n                                    The percentage of attempted passes of 40 yards or more that successfully found a teammate, including goal kicks.\r\n                                </li>\r\n                                <li>\r\n                                    <span style={{color: '#87e179', fontWeight: 'bold'}}>Successful Dribble</span>&nbsp;\r\n                                    A successful attempt at taking on a player and making it past them whilst retaining possession.\r\n                                </li>\r\n                                <li>\r\n                                    <span style={{color: '#87e179', fontWeight: 'bold'}}>Dribble Success %</span>&nbsp;\r\n                                    The percentage of attempted dribbles that were successful.\r\n                                </li>\r\n                                <li>\r\n                                    <span style={{color: '#87e179', fontWeight: 'bold'}}>Dispossessed</span>&nbsp;\r\n                                    Being tackled by an opponent and losing control of the ball without attempting a dribble.\r\n                                </li>\r\n                                <li>\r\n                                    <span style={{color: '#7db9f0', fontWeight: 'bold'}}>pAdj</span>&nbsp;\r\n                                    Possession Adjusted (using the StatsBomb sigmoid function).**\r\n                                </li>\r\n                                <li>\r\n                                    <span style={{color: '#7db9f0', fontWeight: 'bold'}}>Successful Pressure</span>&nbsp;\r\n                                    A pressing action that led to the team regaining possession within the next 5 seconds.\r\n                                </li>\r\n                                <li>\r\n                                    <span style={{color: '#7db9f0', fontWeight: 'bold'}}>Interception</span>&nbsp;\r\n                                    A prevention of an opponent's pass from reaching another opponent by moving into the line of the pass.\r\n                                </li>\r\n                                <li>\r\n                                    <span style={{color: '#7db9f0', fontWeight: 'bold'}}>Tackle Won</span>&nbsp;\r\n                                    A dispossession of an opponent such that the tackling player's team won possession of the ball.\r\n                                </li>\r\n                                <li>\r\n                                    <span style={{color: '#7db9f0', fontWeight: 'bold'}}>Tackle/Dribbled Past %</span>&nbsp;\r\n                                    The percentage of dribblers faced that were tackled.\r\n                                </li>\r\n                                <li>\r\n                                    <span style={{color: '#7db9f0', fontWeight: 'bold'}}>Aerial Win</span>&nbsp;\r\n                                    Winning the ball in a duel that was challenged in the air.\r\n                                </li>\r\n                                <li>\r\n                                    <span style={{color: '#7db9f0', fontWeight: 'bold'}}>Aerial Win %</span>&nbsp;\r\n                                    The percentage of aerials duels contested that were won.\r\n                                </li>\r\n                                <li>\r\n                                    <span style={{color: '#7db9f0', fontWeight: 'bold'}}>Clearance</span>&nbsp;\r\n                                    An action where a player kicked/headed the ball away from their own goal.\r\n                                </li>\r\n                                <li>\r\n                                    <span style={{color: '#787ccd', fontWeight: 'bold'}}>GSAA (Goals Saved Above Average) %</span>&nbsp;\r\n                                    (Post-Shot xG − Goals Conceded) ÷ Shots on Target Faced.***\r\n                                </li>\r\n                                <li>\r\n                                    <span style={{color: '#787ccd', fontWeight: 'bold'}}>Cross Stopping %</span>&nbsp;\r\n                                    The percentage of attempted crosses into the penalty area that were stopped by the goalkeeper.\r\n                                </li>\r\n                            </ul>\r\n                            <div id=\"glossary-links\">\r\n                                <span>\r\n                                    * <a href=\"https://fbref.com/en/expected-goals-model-explained/\" target=\"_blank\" rel=\"noopener noreferrer\">Expected goals/assists model explanation</a>\r\n                                </span>\r\n                                <span>\r\n                                    ** <a href=\"https://statsbomb.com/2014/06/introducing-possession-adjusted-player-stats/\" target=\"_blank\" rel=\"noopener noreferrer\">Possession adjustment explanation</a>\r\n                                </span>\r\n                                <span>\r\n                                    *** <a href=\"https://statsbomb.com/2018/12/introducing-goalkeeper-radars/\" target=\"_blank\" rel=\"noopener noreferrer\">GSAA % explanation</a>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div id=\"faq\" className=\"homepage-section-container\">\r\n                        <div id=\"faq-section-container\">\r\n                            <h2>F.A.Q.</h2>\r\n                            <div id=\"faq-container\">\r\n                                <div className=\"faq-item\">\r\n                                    <p><span className=\"accented-p\">Where does the data come from?</span></p>\r\n                                    <p>The metadata is from <a href=\"https://www.whoscored.com\" target=\"_blank\" rel=\"noopener noreferrer\">WhoScored.com</a>, and\r\n                                        the stats are from <a href=\"https://www.fbref.com\" target=\"_blank\" rel=\"noopener noreferrer\">FBref.com</a>.</p>\r\n                                </div>\r\n                                <div className=\"faq-item\">\r\n                                    <p><span className=\"accented-p\">Who's included in the database? How often is it updated?</span></p>\r\n                                    <p>\r\n                                        The database includes all top 5 league players who've made 4 or more league appearances\r\n                                        in the 2018/19 or 2019/20 seasons. It's updated after every top 5 league, Champions League\r\n                                        or Europa League matchday.\r\n                                    </p>\r\n                                </div>\r\n                                <div className=\"faq-item\">\r\n                                    <p><span className=\"accented-p\">\r\n                                        Will the database be expanded to include seasons before 2018/19 and players outside the top 5 leagues?\r\n                                    </span></p>\r\n                                    <p>\r\n                                        Probably not. At present, <a href=\"https://www.fbref.com\" target=\"_blank\" rel=\"noopener noreferrer\">FBref.com</a>'s advanced statistics\r\n                                        are only available for a few seasons and leagues.\r\n                                    </p>\r\n                                </div>\r\n                                <div className=\"faq-item\">\r\n                                    <p><span className=\"accented-p\">Will a feature be added to compare players on the same chart?</span></p>\r\n                                    <p>\r\n                                        Still working on that.\r\n                                    </p>\r\n                                </div>\r\n                                <div className=\"faq-item\">\r\n                                    <p><span className=\"accented-p\">What is a percentile rank? How are they calculated for FootballSlices?</span></p>\r\n                                    <p>\r\n                                        The percentile rank of a score is the percentage of scores within a dataset\r\n                                        that are equal to or lower than the score. This is of course reversed for stats where\r\n                                        a lower value is better, such as the 'fouls committed per 90' stat.\r\n                                    </p>\r\n                                    <p>\r\n                                        The percentile ranks for FootballSlices are position-specific. For example,\r\n                                        selecting the 'forward' template compares the selected player only to other forwards in the\r\n                                        database. The percentile ranks are also season-specific. For example, selecting competitions\r\n                                        from the 2018/19 season will only compare the selected player to the 2018/19 dataset. Selecting\r\n                                        competitions from multiple seasons will compare the selected player to the combined dataset.\r\n                                    </p>\r\n                                    <p>\r\n                                        Please note however that the percentile ranks are not competition-specific. In other words,\r\n                                        the selected player's stats are always compared to other players' stats from all competitions, regardless\r\n                                        of which competitions are toggled for the selected player.\r\n                                    </p>\r\n                                </div>\r\n                                <div className=\"faq-item\">\r\n                                    <p><span className=\"accented-p\">How are the player positions decided?</span></p>\r\n                                    <p>\r\n                                        Position data is obtained using the 'detailed' tab of the <a href=\"https://whoscored.com/Statistics\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                        WhoScored.com player statistics table</a> to find all players who've made 10 or more\r\n                                        league starts in each of the template positions during a particular season.\r\n                                    </p>\r\n                                    <p>\r\n                                        Disclaimer: This method has some small quirks. For example, it classifies Martin Ødegaard as a\r\n                                        central midfielder, whereas I feel he's more of an attacking midfielder. It's\r\n                                        not perfect but it's the best way I've found to automate the process.\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div id=\"contact\" style={{backgroundColor: '#f5f6f7'}} className=\"homepage-section-container\">\r\n                        <div id=\"contact-section-container\">\r\n                            <h2>Contact</h2>\r\n                            <p>\r\n                                For any bug reports, suggestions or questions, please feel free to reach out to me\r\n                                at either of the following:\r\n                            </p>\r\n                            <ul>\r\n                                <li>Twitter: <a href=\"https://twitter.com/FootballSlices\" target=\"_blank\" rel=\"noopener noreferrer\">@FootballSlices</a></li>\r\n                                <li>Email: <a href=\"mailto:footballslices@gmail.com\" target=\"_blank\" rel=\"noopener noreferrer\">FootballSlices@gmail.com</a></li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n/**\r\n * Component to render a club search result\r\n */\r\nclass ClubSearchResult extends Component {\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n\r\n        this.state = {\r\n            name: this.props.name,\r\n        };\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * render function\r\n     * @return {*} - JSX code for a club search result\r\n     */\r\n    render() {\r\n\r\n        let { name } = this.state;\r\n\r\n        return (\r\n            <Link to={\"/search/\" + name + \"/all\"}>\r\n                <div tabIndex=\"0\" className=\"search-result\">\r\n                    <div className=\"name\">{name}</div>\r\n                </div>\r\n            </Link>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default (ClubSearchResult);\r\n","import React, { Component } from 'react';\r\n\r\n//import components\r\nimport SearchBar from \"../components/SearchBar\";\r\nimport LoadingSpinner from \"../components/LoadingSpinner\";\r\nimport PlayerSearchResult from \"../components/PlayerSearchResult\";\r\nimport ClubSearchResult from \"../components/ClubSearchResult\";\r\n\r\n\r\n/**\r\n * Search page component\r\n */\r\nclass Search extends Component {\r\n\r\n    //class variable to track if the component is mounted\r\n    _isMounted = false;\r\n\r\n    /**\r\n     * Constructor\r\n     * @param props\r\n     */\r\n    constructor(props){\r\n\r\n        super(props);\r\n\r\n        let query = props.match.params.query;\r\n        let searchByClub = props.match.params.searchByClub;\r\n        this.state = {\r\n            isLoading: true,\r\n            error: null,\r\n            query: query,\r\n            searchByClub: searchByClub,\r\n            playerSearchResults: [],\r\n            filteredPlayerSearchResults: [],\r\n            clubSearchResults: [],\r\n            filterValue: \"\"\r\n        };\r\n\r\n        this.getSearchResults();\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * Called after component has mounted\r\n     */\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n    }\r\n\r\n\r\n    /**\r\n     * Called just before the component receives new props. This is done to ensure that new props trigger a setState()\r\n     * @param nextProps\r\n     * @param nextContext\r\n     */\r\n    //TODO: re-factor because componentWillReceiveProps has been deprecated\r\n    UNSAFE_componentWillReceiveProps(nextProps, nextContext) {\r\n        let { query, searchByClub } = nextProps.match.params;\r\n        this.setState({\r\n            isLoading: true,\r\n            query: query,\r\n            searchByClub: searchByClub\r\n        }, () => {\r\n            this.getSearchResults();\r\n        });\r\n    }\r\n\r\n\r\n    /**\r\n     * Function to send a post request to the server to retrieve the search results matching the query\r\n     */\r\n    getSearchResults = () => {\r\n\r\n        let searchByClub = this.state.searchByClub;\r\n        let type = searchByClub === undefined ? \"playersAndClubs\" : \"playersByClub\";\r\n\r\n        //retrieve search results\r\n        fetch('/api/search', {\r\n            method: 'post',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                \"query\": this.state.query,\r\n                \"type\": type\r\n            })\r\n        })\r\n        .then(res => {\r\n            if (res.ok) {\r\n                return res.json()\r\n            }\r\n            else {\r\n               throw new Error(\"Failed to fetch search results. Please refresh the page and try again.\")\r\n            }\r\n        })\r\n        .then(searchResults => this.processSearchResults(searchResults))\r\n        .catch(error => this.setState({error, isLoading: false}));\r\n\r\n    };\r\n\r\n\r\n    /**\r\n     * Function to process the search results and save to state\r\n     * @param {Object} searchResults - object containing search results\r\n     */\r\n    processSearchResults = (searchResults) => {\r\n\r\n        let playerSearchResults = searchResults['playerSearchResults'];\r\n        let clubSearchResults = searchResults['clubSearchResults'];\r\n\r\n        if (this._isMounted){\r\n            this.setState({\r\n                error: null,\r\n                isLoading: false,\r\n                playerSearchResults: playerSearchResults,\r\n                filteredPlayerSearchResults: playerSearchResults,\r\n                clubSearchResults: clubSearchResults,\r\n            })\r\n        }\r\n    };\r\n\r\n\r\n    /**\r\n     * Called just before the component un-mounts\r\n     */\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n\r\n\r\n    /**\r\n     * Function to filter player search results\r\n     * @param {Object} event - the input event from the search result filter\r\n     */\r\n    filterByName = (event) => {\r\n\r\n        //create a deep-copy of playerSearchResults to avoid modifying the original\r\n        let playerSearchResults = JSON.parse(JSON.stringify(this.state.playerSearchResults));\r\n        let filteredPlayerSearchResults = [];\r\n\r\n        let input;\r\n        if (event === null) {\r\n            filteredPlayerSearchResults = playerSearchResults;\r\n        }\r\n        else {\r\n            //retrieve the input text and remove diacritics\r\n            let input = event.target.value\r\n                .normalize(\"NFD\")\r\n                .replace(/[\\u0300-\\u036f]/g, \"\")\r\n                .replace(\"Ø\", \"O\")\r\n                .replace(\"ø\", \"o\");\r\n            for (let i=0; i<playerSearchResults.length; i++){\r\n                //remove diacritics from each search result\r\n                let name = playerSearchResults[i].name.normalize(\"NFD\")\r\n                    .replace(/[\\u0300-\\u036f]/g, \"\")\r\n                    .replace(\"Ø\", \"O\")\r\n                    .replace(\"ø\", \"o\");\r\n                //push matches to filteredSearchResults\r\n                if (name.toUpperCase().includes(input.toUpperCase())){\r\n                    filteredPlayerSearchResults.push(playerSearchResults[i]);\r\n                }\r\n            }\r\n        }\r\n\r\n        //set state by clearing filteredSearchResults first, and the re-populating it on callback\r\n        this.setState({\r\n            filteredPlayerSearchResults: []\r\n        }, () => {\r\n            this.setState({\r\n                filteredPlayerSearchResults: filteredPlayerSearchResults,\r\n                filterValue: input\r\n            })\r\n        });\r\n\r\n    };\r\n\r\n\r\n    /**\r\n     * render function\r\n     * @return {*} - JSX code for the search page\r\n     */\r\n    render() {\r\n\r\n        let {\r\n            isLoading,\r\n            error,\r\n            filteredPlayerSearchResults,\r\n            clubSearchResults,\r\n            searchByClub,\r\n            filterValue\r\n        } = this.state;\r\n\r\n        //display loading spinner while the server responds to POST request for the search results\r\n        if (isLoading) {\r\n            return (\r\n                <LoadingSpinner/>\r\n            )\r\n        }\r\n\r\n        //display the error message screen if an error is caught\r\n        else if (error !== null) {\r\n            return (\r\n                <div id=\"main\">\r\n                    <SearchBar page=\"search\" query={this.state.query}/>\r\n                    <div className=\"screen\" id=\"error-screen\">\r\n                        <p>{error.message}</p>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        //build search page otherwise\r\n        else {\r\n\r\n            //construct the player cards\r\n            let playerCards = [];\r\n            for (let i=0; i<filteredPlayerSearchResults.length; i++){\r\n                let current = filteredPlayerSearchResults[i];\r\n                playerCards.push(\r\n                    <PlayerSearchResult\r\n                        page=\"search\"\r\n                        code={current.code}\r\n                        name={current.name}\r\n                        clubs={current.clubs}\r\n                        nationality={current.nationality}\r\n                        key={i}\r\n                    />\r\n                );\r\n            }\r\n\r\n            //construct the club cards\r\n            let clubCards = [];\r\n            for (let i=0; i<clubSearchResults.length; i++){\r\n                let current = clubSearchResults[i];\r\n                clubCards.push(\r\n                    <ClubSearchResult\r\n                        name={current}\r\n                        key={i}\r\n                    />\r\n                )\r\n            }\r\n\r\n            //build header for search results\r\n            let searchText;\r\n            if (searchByClub === undefined){\r\n                searchText = <h3>Search results for <br/>\"{this.state.query}\"</h3>;\r\n            }\r\n            else {\r\n                searchText = <h3>Search results for <br/>\"player.club[19-20] = {this.state.query}\"</h3>;\r\n            }\r\n\r\n            //return JSX code for the search page\r\n            return (\r\n                <div id=\"main\">\r\n                    <SearchBar page=\"search\" query={this.state.query}/>\r\n                    <div className=\"screen\" id=\"search-screen\">\r\n                        <div className=\"filter\" id=\"search-filters\">\r\n                            {searchText}\r\n                            <br />\r\n                            <div id=\"search-filter-inputs\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={filterValue}\r\n                                    placeholder={\"Filter players by name\"}\r\n                                    onChange={this.filterByName}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"result\" id=\"search-results\">\r\n                            {searchByClub === undefined ? <h3>Players</h3> : null}\r\n                            {playerCards.length === 0 && searchByClub === undefined ? <p>No results found</p> : null}\r\n                            <div id=\"player-search-results\">\r\n                                {playerCards}\r\n                            </div>\r\n                            {searchByClub === undefined ? <h3 style={{marginTop: '20px'}}>Clubs</h3> : null}\r\n                            {clubCards.length === 0 && searchByClub === undefined ? <p>No results found</p> : null}\r\n                            <div id=\"club-search-results\">\r\n                                {clubCards}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Search;\r\n","import React, { Component } from 'react';\r\nimport Collapsible from 'react-collapsible';\r\n\r\n/**\r\n * Component to render the options for the displayed slice\r\n */\r\nclass SliceOptions extends Component {\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n\r\n        this.positions = {\r\n            \"FW\": \"Forward\",\r\n            \"AM\": \"Attacking Midfielder / Winger\",\r\n            \"CM\": \"Central / Defensive Midfielder\",\r\n            \"FB\": \"Full-back\",\r\n            \"CB\": \"Center-back\",\r\n            \"GK\": \"Goalkeeper\"\r\n        };\r\n\r\n        this.competitions = this.props.competitions;\r\n        this.clubs = this.props.clubs;\r\n\r\n        this.labelTypes = {\r\n            \"raw\": \"Raw Value\",\r\n            \"percentiles\": \"Percentile Ranks\"\r\n        };\r\n\r\n        this.state = {\r\n        };\r\n\r\n    }\r\n\r\n    /**\r\n     * render function\r\n     * @return {*} - JSX code for the slice options\r\n     */\r\n    render() {\r\n\r\n        let isMobile = this.props.isMobile;\r\n\r\n        let template = this.props.template;\r\n        let selectedCompetitions = this.props.selectedCompetitions;\r\n        let labelType = this.props.labelType;\r\n\r\n        //construct templates form\r\n        let templateLabels = [];\r\n        let mobileTemplateLabels = [];\r\n        for (let position in this.positions){\r\n            let className;\r\n            let mobileClassName;\r\n            let disabled;\r\n            if (position !== \"GK\"){\r\n                className = template !== \"GK\" ? \"selectable-label\" : \"blocked-label\";\r\n                mobileClassName = `${template === position ? \"selected-label\" : null} ${template !== \"GK\" ? \"selectable-label\" : null}`;\r\n                disabled = template === \"GK\";\r\n            }\r\n            else {\r\n                className = template === \"GK\" ? \"selectable-label\" : \"blocked-label\";\r\n                mobileClassName = `${template === position ? \"selected-label\" : null} ${template === \"GK\" ? \"selectable-label\" : null}`;\r\n                disabled = template !== \"GK\";\r\n            }\r\n            templateLabels.push(\r\n                <label\r\n                    className={className}\r\n                    key={`${position}_label`}\r\n                >\r\n                    <input type=\"radio\"\r\n                           name=\"template\"\r\n                           value={position}\r\n                           checked={template === position}\r\n                           disabled={disabled}\r\n                           onChange={this.props.changeTemplate}\r\n                    /> {this.positions[position]}\r\n                </label>\r\n            );\r\n            mobileTemplateLabels.push(\r\n                <label\r\n                    className={mobileClassName}\r\n                    key={`${position}_label_mobile`}\r\n                >\r\n                    <input type=\"radio\"\r\n                           name=\"template\"\r\n                           value={position}\r\n                           checked={template === position}\r\n                           disabled={disabled}\r\n                           onChange={this.props.changeTemplate}\r\n                    /> {this.positions[position]}\r\n                </label>\r\n            );\r\n        }\r\n        let templatesForm = <form id=\"templates\">{templateLabels}</form>;\r\n        let mobileTemplatesForm = <form id=\"templates\">{mobileTemplateLabels}</form>;\r\n\r\n        //construct competitions forms\r\n        let competitionsForms = [];\r\n        let counter = 0;\r\n        for (let season in this.competitions){\r\n            let competitionLabels = [];\r\n            let multipleClubs = this.clubs[season].length !== 1;\r\n            competitionsForms.push(\r\n                <h4\r\n                    key={`${season}_header`}\r\n                    style={{\r\n                        marginBottom: isMobile ? '20px' : '10px',\r\n                        marginTop: (counter !== 0 && !isMobile) ? '15px' : '20px'\r\n                    }}\r\n                >\r\n                    {season.replace(\"-\", \"/\")} {multipleClubs === false ? ' | ' + this.clubs[season][0] : null}\r\n                </h4>\r\n            );\r\n            for (let i=0; i<this.competitions[season].length; i++){\r\n                let currentCompetition = this.competitions[season][i];\r\n                let isIncluded = selectedCompetitions[season].includes(currentCompetition);\r\n                let label = currentCompetition;\r\n                if (this.clubs[season].length === 1){\r\n                    label = label.substring(0, label.indexOf(\"|\")-1)\r\n                }\r\n                competitionLabels.push(\r\n                    <label\r\n                        className={`${isIncluded ? \"selected-label\" : null} selectable-label`}\r\n                        key={`${season}_${currentCompetition}`}\r\n                    >\r\n                        <input className=\"competition\"\r\n                               type=\"checkbox\"\r\n                               value={`${season}_${currentCompetition}`}\r\n                               onChange={this.props.changeSelectedCompetitions}\r\n                               checked={isIncluded}\r\n                        /> {label}\r\n                    </label>\r\n                )\r\n            }\r\n            competitionsForms.push(<form key={`${season}_form`} className=\"competitions\">{competitionLabels}</form>);\r\n            counter++;\r\n        }\r\n\r\n        //construct label type form\r\n        let labelTypeLabels = [];\r\n        for (let type in this.labelTypes){\r\n            labelTypeLabels.push(\r\n                <label\r\n                    className=\"selectable-label\"\r\n                    key={type}\r\n                >\r\n                    <input\r\n                        type=\"radio\"\r\n                        name=\"labelType\"\r\n                        value={type}\r\n                        checked={labelType === type}\r\n                        onChange={this.props.changeLabelType}\r\n                    /> {this.labelTypes[type]}\r\n                </label>\r\n            )\r\n        }\r\n        let labelTypeForm = <form id=\"data-labels\">{labelTypeLabels}</form>;\r\n\r\n        return (\r\n            <div className=\"filter\" id=\"chart-filters\">\r\n                <div className=\"chart-filter-inputs\" id=\"chart-filter-inputs-laptop\">\r\n                    {/*<Collapsible trigger=\"Template\">*/}\r\n                    {/*    {templatesForm}*/}\r\n                    {/*</Collapsible>*/}\r\n                    {/*<Collapsible trigger=\"Competitions\">*/}\r\n                    {/*    {competitionsForms}*/}\r\n                    {/*</Collapsible>*/}\r\n                    {/*<Collapsible trigger=\"Label Types\">*/}\r\n                    {/*    {labelTypeForm}*/}\r\n                    {/*</Collapsible>*/}\r\n                    <h3>Template</h3>\r\n                    {templatesForm}\r\n                    <h3>Competitions</h3>\r\n                    {competitionsForms}\r\n                    <h3>Data Labels</h3>\r\n                    {labelTypeForm}\r\n                </div>\r\n                <div className=\"chart-filter-inputs\" id=\"chart-filter-inputs-mobile\">\r\n                    <h3>Template</h3>\r\n                    {mobileTemplatesForm}\r\n                    <h3>Competitions</h3>\r\n                    {competitionsForms}\r\n                    <h3>Data Labels</h3>\r\n                    {labelTypeForm}\r\n                </div>\r\n                <div id=\"filter-buttons\">\r\n                    <div className=\"filter-button\">\r\n                        <button id=\"toggleCreditsButton\" type=\"button\" onClick={this.props.toggleCreditsPosition}>Toggle Credits Position</button>\r\n                    </div>\r\n                    <div className=\"filter-button\">\r\n                        <button id=\"exportButton\" type=\"button\" onClick={this.props.exportChart}>Export Chart</button>\r\n                    </div>\r\n                    <div className=\"filter-button\">\r\n                        <button id=\"compareButton\" type=\"button\" disabled={true}>Compare To...</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default (SliceOptions);\r\n","import React, {Component} from 'react';\r\n\r\n//import dependencies\r\nimport Highcharts from 'highcharts/highstock'\r\nimport HighchartsReact from 'highcharts-react-official'\r\nimport HighchartsMore from 'highcharts/highcharts-more'\r\nHighchartsMore(Highcharts);\r\n\r\n\r\n/**\r\n * Component to render Slices (charts)\r\n */\r\nclass Slice extends Component {\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n\r\n        this.isMobile = this.props.isMobile;\r\n        this.isForExport = this.props.isForExport;\r\n\r\n        //set font size constants\r\n        this.fontSizes = null;\r\n        if (this.isForExport){\r\n            this.fontSizes =  {\r\n                title: '3.3em',\r\n                subtitle: '2em',\r\n                noData: '1.76em',\r\n                xAxisLabels: '1.95em',\r\n                dataLabels: '1.95em',\r\n                dataLabelsOutline: '0.13em',\r\n                tooltipHeader: '1.3em',\r\n                tooltip: '0em',\r\n                credits: '1.65em',\r\n                yAxisLabels: '0.65em'\r\n            };\r\n        }\r\n        else {\r\n            this.fontSizes =  {\r\n                title: this.props.isMobile ? '4.6vw' : '2.3em',\r\n                subtitle: this.props.isMobile ? '2.7vw' : '1.4em',\r\n                noData: this.props.isMobile ? '2.7vw' : '1.35em',\r\n                xAxisLabels: this.props.isMobile ? '2.3vw' : '1.15em',\r\n                dataLabels: this.props.isMobile ? '2.3vw' : '1.15em',\r\n                dataLabelsOutline: this.props.isMobile ? '0.3vw' : '0.18em',\r\n                tooltipHeader: this.props.isMobile ? '2.3vw' : '1em',\r\n                tooltip: this.props.isMobile ? '2.3vw' : '1.25em',\r\n                credits: this.props.isMobile ? '2.3vw' : '1.2em',\r\n                yAxisLabels: this.props.isMobile ? '1vw' : '0.5em'\r\n            };\r\n        }\r\n\r\n        //set categories (x-axis labels) constants\r\n        this.categories = {\r\n            \"FW\": [\r\n                'Non-Penalty Goals',\r\n                'Non-Penalty xG',\r\n                'Non-Penalty xG/Shot',\r\n                `${this.isMobile && !this.isForExport ? \"Conver-<br>sion Rate\" : \"Conversion Rate\"}`,\r\n                'Aerial Win %',\r\n                'Touches in Box',\r\n                'xA',\r\n                'Passes into Box',\r\n                'Successful Dribbles',\r\n                'Dribble Success %',\r\n                'Times Dispossessed',\r\n                '(pAdj) Successful Pressures',\r\n            ],\r\n            \"AM\": [\r\n                'Non-Penalty Goals',\r\n                'Non-Penalty xG',\r\n                'Non-Penalty xG/Shot',\r\n                'xA',\r\n                'OP Shot-Creating Actions',\r\n                'Passes into Box',\r\n                'Progressive Distance',\r\n                `${this.isMobile && !this.isForExport ? \"Pass Comp. %\" : \"Pass Completion %\"}`,\r\n                'Successful Dribbles',\r\n                'Dribble Success %',\r\n                'Times Dispossessed',\r\n                '(pAdj) Successful Pressures',\r\n            ],\r\n            \"CM\": [\r\n                'xA',\r\n                'OP Shot-Creating Actions',\r\n                'Passes into Final 1/3',\r\n                `${this.isMobile && !this.isForExport ? \"Prog-<br>ressive Distance\" : \"Progressive Distance\"}`,\r\n                `${this.isMobile && !this.isForExport ? \"Pass Comp. %\" : \"Pass Completion %\"}`,\r\n                'Successful Dribbles',\r\n                'Dribble Success %',\r\n                'Times Dispossessed',\r\n                '(pAdj) Successful Pressures',\r\n                `${this.isMobile && !this.isForExport ? \"(pAdj) Inter-<br>ceptions\" : \"(pAdj) Interceptions\"}`,\r\n                '(pAdj) Tackles Won',\r\n                `${this.isForExport ? \"Tackle/Dribbled Past %\" : \"Tackle/ Dribbled Past %\"}`\r\n            ],\r\n            \"FB\": [\r\n                'xA',\r\n                'Passes into Final 1/3',\r\n                'Progressive Distance',\r\n                `${this.isMobile && !this.isForExport ? \"Pass Comp. %\" : \"Pass Completion %\"}`,\r\n                'Successful Dribbles',\r\n                'Dribble Success %',\r\n                'Times Dispossessed',\r\n                '(pAdj) Successful Pressures',\r\n                '(pAdj) Interceptions',\r\n                \"(pAdj) Tackles Won\",\r\n                `${this.isForExport ? \"Tackle/Dribbled Past %\" : \"Tackle/ Dribbled Past %\"}`,\r\n                'Aerial Win %'\r\n            ],\r\n            \"CB\": [\r\n                'Passes into Final 1/3',\r\n                'Progressive Distance',\r\n                `${this.isMobile && !this.isForExport ? \"Pass Comp. %\" : \"Pass Completion %\"}`,\r\n                `${this.isMobile && !this.isForExport ? \"Long Pass Comp. %\" : \"Long Pass Completion %\"}`,\r\n                '(pAdj) Successful Pressures',\r\n                '(pAdj) Interceptions',\r\n                '(pAdj) Tackles Won',\r\n                `${this.isForExport ? \"Tackle/Dribbled Past %\" : \"Tackle/ Dribbled Past %\"}`,\r\n                '(pAdj) Fouls Committed',\r\n                'Aerials Won',\r\n                'Aerial Win %',\r\n                '(pAdj) Clearances'\r\n            ],\r\n            \"GK\": [\r\n                \"GSAA %\",\r\n                \"Cross Stopping %\",\r\n                \"Launched Pass Completion %\"\r\n            ],\r\n            \"N/A\": [\r\n                \"-\",\r\n                \"-\",\r\n                \"-\",\r\n                \"-\",\r\n                \"-\",\r\n                \"-\",\r\n                \"-\",\r\n                \"-\",\r\n                \"-\",\r\n                \"-\",\r\n                \"-\",\r\n                \"-\"\r\n            ]\r\n        };\r\n\r\n        //set subtitle constants\r\n        this.subtitles = {\r\n            \"FW\": \"vs Top-5 League Players with 10+ Starts as Forwards<br/>\",\r\n            \"AM\": \"vs Top-5 League Players with 10+ Starts as Attacking Midfielders / Wingers<br/>\",\r\n            \"CM\": \"vs Top-5 League Players with 10+ Starts as Central / Defensive Midfielders<br/>\",\r\n            \"FB\": \"vs Top-5 League Players with 10+ Starts as Full-backs<br/>\",\r\n            \"CB\": \"vs Top-5 League Players with 10+ Starts as Center-backs<br/>\",\r\n            \"GK\": \"vs Top-5 League Players with 10+ Starts as Goalkeepers<br/>\",\r\n            \"N/A\": \"No Template Selected\"\r\n        };\r\n\r\n        //Highcharts chart options\r\n        //variable options are initialized to null, and then modified on render using props\r\n        //consult the Highcharts API reference for detailed explanations of each option\r\n        //https://api.highcharts.com/highcharts/\r\n        this.chartOptions = {\r\n            title: {\r\n                text: null,\r\n                style: {\r\n                    color: '#e75453',\r\n                    fontSize: this.fontSizes['title'],\r\n                    fontWeight: 'bold',\r\n                },\r\n                margin: 35\r\n            },\r\n            subtitle: {\r\n                text: null,\r\n                style: {\r\n                    fontSize: this.fontSizes['subtitle']\r\n                }\r\n            },\r\n            pane: {\r\n                startAngle: null\r\n            },\r\n            chart: {\r\n                backgroundColor: 'rgba(0, 0, 0, 0)',\r\n                style: {\r\n                    fontFamily: 'sans-serif'\r\n                },\r\n                animation: null,\r\n                polar: true,\r\n                type: 'column',\r\n                marginLeft: 90,\r\n                marginRight: 90,\r\n                marginTop: null,\r\n                marginBottom: null,\r\n                events: null\r\n            },\r\n            xAxis: {\r\n                categories: null,\r\n                labels: {\r\n                    zIndex: 1,\r\n                    distance: null,\r\n                    style: {\r\n                        color: 'black',\r\n                        fontSize: this.fontSizes['xAxisLabels'],\r\n                    },\r\n                    padding: 31\r\n                },\r\n                gridLineWidth: 2,\r\n                gridLineColor: '#555555',\r\n                gridZIndex: 4\r\n            },\r\n            yAxis: {\r\n                labels: {\r\n                    enabled: false,\r\n                    // style: {\r\n                    //     color: '#444444',\r\n                    //     fontSize: this.fontSizes['yAxisLabels'],\r\n                    // }\r\n                },\r\n                gridZIndex: 5,\r\n                lineWidth: 0,\r\n                endOnTick: true,\r\n                showFirstLabel: false,\r\n                showLastLabel: true,\r\n                min: -15,\r\n                max: 100,\r\n                tickPositions: [-15, 0, 25, 50, 75, 100]\r\n            },\r\n            series: null,\r\n            plotOptions: {\r\n                series: {\r\n                    states: {\r\n                        hover: {\r\n                            enabled: null\r\n                        }\r\n                    },\r\n                    dataLabels: {\r\n                        enabled: null,\r\n                        style: {\r\n                            fontWeight: 'bold',\r\n                            fontSize: this.fontSizes['dataLabels'],\r\n                            textOutline: this.fontSizes['dataLabelsOutline'] + \" #fafbfc\",\r\n                        },\r\n                        format: null,\r\n                        padding: 0,\r\n                        allowOverlap: true,\r\n                        z: 7\r\n                    },\r\n                },\r\n            },\r\n            tooltip: {\r\n                headerFormat: '<span style=\"font-size: ' + this.fontSizes['tooltipHeader'] + '\"><b>{point.key}</b></span><br/>',\r\n                pointFormat: null,\r\n                style: {\r\n                    fontSize: this.fontSizes['tooltip']\r\n                }\r\n            },\r\n            legend: {\r\n                enabled: false,\r\n                // borderWidth: 1,\r\n                // align: 'center',\r\n                // verticalAlign: 'bottom',\r\n                // layout: 'horizontal'\r\n            },\r\n            credits: {\r\n                text: null,\r\n                position: {\r\n                    align: null,\r\n                    y: null\r\n                },\r\n                style: {\r\n                    fontSize: this.fontSizes['credits']\r\n                },\r\n            },\r\n            lang: {\r\n                noData: \"Select a competition\"\r\n            },\r\n            noData: {\r\n                attr: {\r\n                    zIndex: 6\r\n                },\r\n                style: {\r\n                    fontWeight: 'bold',\r\n                    fontSize: this.fontSizes['noData'],\r\n                    color: '#303030'\r\n                }\r\n            },\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * render function\r\n     * configures chart options based on props and draws the slice charts\r\n     * @return {*} - JSX code for the slice charts\r\n     */\r\n    render() {\r\n\r\n        let chartOptions = this.chartOptions;\r\n\r\n        //set the title\r\n        let title = chartOptions.title;\r\n        title.text = this.props.name;\r\n        title.text += !this.isForExport ? \" <span style='font-size: 0.4em; transform: translateY(-50%)'>🔗</span>\" : \"\";\r\n\r\n        //build the subtitle\r\n        let subtitle = \"\";\r\n        if (this.props.series.length !== 0){\r\n            subtitle = `Age: ${this.props.age} ║ Minutes Played: ${this.props.minutes.toLocaleString()}<br/>`;\r\n            subtitle += this.subtitles[this.props.template];\r\n            if (this.props.template !== \"N/A\"){\r\n                subtitle += \"Percentile Rank Bars w/ Per 90 Stats<br/>\";\r\n            }\r\n            else {\r\n                subtitle += \"<br/>-\"\r\n            }\r\n        }\r\n        else {\r\n            subtitle = \"-<br>-<br>-\";\r\n        }\r\n        //set the subtitle\r\n        chartOptions.subtitle.text = subtitle;\r\n\r\n        //calculate the start angle based on the number of wedges\r\n        chartOptions.pane.startAngle = -((360/this.categories[this.props.template].length)/2);\r\n\r\n        let chart = chartOptions.chart;\r\n        //set animation (on update) to true or false\r\n        chart.animation = this.props.isAnimated;\r\n        //set chart margins\r\n        if (this.isForExport){\r\n            chart.marginTop = 230;\r\n            chart.marginBottom = (this.props.creditsPosition === \"right\") ? 100 : 120;\r\n        }\r\n        else {\r\n            chart.marginBottom = (this.props.creditsPosition === \"right\" && !this.props.isMobile) ? 30 : 60;\r\n            let url = this.props.url;\r\n            //add links to title and credits if the chart is not for export\r\n            chart.events = {\r\n                load: function() {\r\n                    this.title.element.onclick = function() {\r\n                        window.open(url, '_blank');\r\n                    };\r\n                    this.credits.element.onclick = function() {\r\n                        window.open('https://fbref.com', '_blank');\r\n                    }\r\n                },\r\n            };\r\n        }\r\n\r\n        let xAxis = chartOptions.xAxis;\r\n        //set x-axis labels\r\n        xAxis.categories = this.categories[this.props.template];\r\n        if (this.isForExport){\r\n            xAxis.labels.distance = 75;\r\n        }\r\n        else {\r\n            xAxis.labels.distance = this.isMobile ? 60 : 40;\r\n        }\r\n\r\n        //set data points\r\n        chartOptions.series = this.props.series.map(function (data) {\r\n            return {\r\n                pointPadding: 0,\r\n                groupPadding: 0,\r\n                // name: name,\r\n                data: data,\r\n                stickyTracking: false,\r\n                zIndex: 0\r\n            };\r\n        });\r\n\r\n        //disable initial animation and hover effects for charts that are for export\r\n        let series = chartOptions.plotOptions.series;\r\n        if (!this.props.isAnimatedInitial){\r\n            series.animation = this.props.isAnimatedInitial;\r\n        }\r\n        series.states.hover.enabled = this.props.isAnimatedInitial;\r\n\r\n        //set data labels\r\n        let dataLabels = series.dataLabels;\r\n        dataLabels.enabled = this.props.template !== \"N/A\";\r\n        dataLabels.format = this.props.labelType === \"raw\" ? '{point.p90_label}' : '{point.percentile_label}';\r\n\r\n        //disable tooltip for charts that for export\r\n        chartOptions.tooltip.enabled = this.props.hasTooltip;\r\n        chartOptions.tooltip.pointFormat = '<br>Raw Value: <b>{point.p90_label}</b><br/>Percentile Rank: <b>{point.percentile_label}</b>';\r\n\r\n        //set credits text and position\r\n        let credits = chartOptions.credits;\r\n        credits.text = `Data Source: FBref.com ${this.isMobile || this.isForExport ? '<br/>.<br/>' : '<br/>'} Last Updated: ${this.props.lastUpdated} UTC`;\r\n        credits.position = {\r\n            align: this.props.creditsPosition,\r\n            y: this.isMobile || this.isForExport ? -40 : -20\r\n        };\r\n\r\n        //pass chart options to the Highcharts component and render\r\n        return (\r\n            <div className=\"result\" id=\"chart\">\r\n                <HighchartsReact\r\n                    constructorType={\"chart\"}\r\n                    highcharts={Highcharts}\r\n                    containerProps={{style: {width: '100%', height: '100%'}}}\r\n                    options={chartOptions}\r\n                />\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default (Slice);\r\n","import React, { Component } from 'react';\r\n\r\n//import dependencies\r\nimport Cookies from 'universal-cookie';\r\nimport Highcharts from 'highcharts'\r\nimport domtoimage from 'dom-to-image';\r\nimport saveAs from 'file-saver';\r\n\r\n//import components\r\nimport LoadingSpinner from \"../components/LoadingSpinner\";\r\nimport SearchBar from \"../components/SearchBar\";\r\nimport SliceOptions from \"../components/SliceOptions\";\r\nimport Slice from \"../components/Slice\";\r\n\r\n//initialize helpers\r\nconst dateFormat = require('dateformat');\r\nconst cookies = new Cookies();\r\n\r\n\r\n/**\r\n * Stats page component\r\n */\r\nclass Stats extends Component {\r\n\r\n    //class variable to track if the component is mounted\r\n    _isMounted = false;\r\n\r\n    /**\r\n     * Constructor\r\n     * @param props\r\n     */\r\n    constructor(props){\r\n\r\n        super(props);\r\n\r\n        //colors used in the Slices\r\n        this.colors = {\r\n            \"FW\": ['#f15c80', '#f15c80', '#f15c80', '#f15c80', '#f15c80', '#e4d354',\r\n                '#e4d354', '#e4d354', '#90ed7d', '#90ed7d', '#90ed7d', '#7cb5ec'],\r\n            \"AM\": ['#f15c80', '#f15c80', '#f15c80', '#e4d354', '#e4d354', '#e4d354',\r\n                '#e4d354', '#e4d354', '#90ed7d', '#90ed7d', '#90ed7d', '#7cb5ec'],\r\n            \"CM\": ['#e4d354', '#e4d354', '#e4d354', '#e4d354', '#e4d354', '#90ed7d',\r\n                '#90ed7d', '#90ed7d', '#7cb5ec', '#7cb5ec', '#7cb5ec', '#7cb5ec'],\r\n            \"FB\": ['#e4d354', '#e4d354', '#e4d354', '#e4d354', '#90ed7d', '#90ed7d',\r\n                '#90ed7d', '#7cb5ec', '#7cb5ec', '#7cb5ec', '#7cb5ec', '#7cb5ec'],\r\n            \"CB\": ['#e4d354', '#e4d354', '#e4d354', '#e4d354', '#7cb5ec', '#7cb5ec',\r\n                '#7cb5ec', '#7cb5ec', '#7cb5ec', '#7cb5ec', '#7cb5ec', '#7cb5ec'],\r\n            \"GK\": ['#9499ff', '#9499ff', '#e4d354'],\r\n            \"N/A\": ['#7cb5ec', '#7cb5ec', '#7cb5ec', '#7cb5ec', '#7cb5ec', '#7cb5ec',\r\n                '#7cb5ec', '#7cb5ec', '#7cb5ec', '#7cb5ec', '#7cb5ec', '#7cb5ec'],\r\n            null: ['#7cb5ec', '#7cb5ec', '#7cb5ec', '#7cb5ec', '#7cb5ec', '#7cb5ec',\r\n                '#7cb5ec', '#7cb5ec', '#7cb5ec', '#7cb5ec', '#7cb5ec', '#7cb5ec']\r\n        };\r\n\r\n        //cookies\r\n        let labelTypeCookie = cookies.get('labelType');\r\n        let creditsPositionCookie = cookies.get('creditsPosition');\r\n\r\n        this.state = {\r\n            isLoading: true,\r\n            error: null,\r\n            isMobile: this.props.isMobile,\r\n            isSafari: this.props.isSafari,\r\n            percentileArrays: this.props.percentileArrays,\r\n            name: '',\r\n            url: '',\r\n            age: 0,\r\n            clubs: {},\r\n            positions: {},\r\n            percentileEntries: {},\r\n            stats: {},\r\n            lastUpdated: null,\r\n            template: \"N/A\",\r\n            competitions: {},\r\n            selectedCompetitions: {},\r\n            labelType: labelTypeCookie === undefined ? \"raw\" : labelTypeCookie,\r\n            creditsPosition: creditsPositionCookie === undefined ? \"right\" : creditsPositionCookie,\r\n            isAnimated: true\r\n        };\r\n\r\n        this.getStats();\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * Called after component has mounted\r\n     */\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n    }\r\n\r\n\r\n    /**\r\n     * Function to send a post request to the server to retrieve the stats of the player\r\n     */\r\n    getStats = () => {\r\n\r\n        const { code } = this.props.match.params;\r\n\r\n        //retrieve stats\r\n        fetch('/api/stats', {\r\n            method: 'post',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                \"code\": code,\r\n                \"percentilesTimestamp\": this.state.percentileArrays['lastUpdated']\r\n            })\r\n        })\r\n        .then(res => {\r\n            if (res.ok) {\r\n                return res.json()\r\n            }\r\n            else {\r\n                throw new Error(\"Failed to fetch. This is likely due to a malformed URL. Please try searching for the player again.\")\r\n            }\r\n        })\r\n        .then(response => this.processStats(response))\r\n        .catch(error => this.setState({error, isLoading: false}));\r\n\r\n    };\r\n\r\n\r\n    /**\r\n     *\r\n     * @param {Object} playerStats - object containing the player metadata and stats, as well as new percentile arrays\r\n     * in the event that the server needs to update a client's percentile arrays.\r\n     */\r\n    processStats = (playerStats) => {\r\n\r\n        //check if the stats object contains new percentile arrays\r\n        if (playerStats.newPercentileArrays !== undefined){\r\n            //update percentile arrays in parent component as required\r\n            this.props.updatePercentileArrays(playerStats.newPercentileArrays);\r\n            playerStats = playerStats.stats;\r\n        }\r\n\r\n        //process player position entry and set template. template is set to the most recent non-\"N/A\" position\r\n        //in the player's position entries\r\n        let template = \"N/A\";\r\n        for (let season in playerStats.positions){\r\n            let position = playerStats.positions[season];\r\n            if (position !== \"N/A\"){\r\n                template = position;\r\n            }\r\n        }\r\n\r\n        //retrieve player competitions. stored in an object where the keys are seasons and the values are arrays\r\n        //of the competitions for the season\r\n        let competitions = {};\r\n        for (let season in playerStats.stats){\r\n            competitions[season] = [];\r\n            for (let competition in playerStats.stats[season]){\r\n                competitions[season].push(competition);\r\n            }\r\n        }\r\n\r\n        if (this._isMounted){\r\n            this.setState({\r\n                isLoading: false,\r\n                name: playerStats.name,\r\n                url: \"https://fbref.com/en/players/\" + playerStats.fbrefCode,\r\n                age: playerStats.age,\r\n                clubs: playerStats.clubs,\r\n                percentileEntries: playerStats.percentileEntries,\r\n                stats: playerStats.stats,\r\n                lastUpdated: dateFormat(playerStats.lastUpdated, \"dd/mm/yyyy, h:MM TT\", true),\r\n                template: template,\r\n                competitions: JSON.parse(JSON.stringify(competitions)),\r\n                selectedCompetitions: JSON.parse(JSON.stringify(competitions)),\r\n            }, () => {\r\n\r\n            });\r\n        }\r\n\r\n    };\r\n\r\n\r\n    /**\r\n     * Called just before the component un-mounts\r\n     */\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n\r\n\r\n    /**\r\n     * Function to filter the complete stats based on the selected competitions\r\n     * @param {Object} stats - object containing the complete stats of the player\r\n     * @return {Object} filteredStats - object containing aggregated totals of the filtered stats\r\n     */\r\n    filterStats = (stats) => {\r\n\r\n        let filteredStats = {};\r\n        let selectedCompetitions = this.state.selectedCompetitions;\r\n\r\n        //iterate through complete stats, check if a competition is selected, and add the stats for said competition\r\n        //to the aggregated stats if so\r\n        for (let season in stats){\r\n            for (let competition in stats[season]){\r\n                if (selectedCompetitions[season].includes(competition)) {\r\n                    for (let stat in stats[season][competition]) {\r\n                        if (!(stat in filteredStats)) {\r\n                            filteredStats[stat] = stats[season][competition][stat];\r\n                        }\r\n                        else {\r\n                            filteredStats[stat] += stats[season][competition][stat];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return filteredStats;\r\n\r\n    };\r\n\r\n\r\n    /**\r\n     * Function to calculate the 'per90' stats and percentile ranks of the filtered stats\r\n     * @param {Object} filteredStats - object containing the aggregated totals from the selected competitions\r\n     * @return {{statsPer90, percentiles}} - object containing the per90 stats and percentile ranks\r\n     */\r\n    calculateStats = (filteredStats) => {\r\n\r\n        let percentileArrays = this.state.percentileArrays;\r\n        let percentileEntries = this.state.percentileEntries;\r\n        let selectedCompetitions = this.state.selectedCompetitions;\r\n        let template = this.state.template;\r\n\r\n        let includedSeasons = [];\r\n        let percentileSeason;\r\n        let percentileArrayOccurrences = 0;\r\n\r\n        //iterate through selected competitions and list the seasons they span\r\n        for (let season in selectedCompetitions) {\r\n            if (selectedCompetitions[season].length !== 0) {\r\n                includedSeasons.push(season);\r\n            }\r\n        }\r\n        //if only one season is selected, set the percentile season to that season\r\n        if (includedSeasons.length === 1) {\r\n            percentileSeason = includedSeasons[0];\r\n        }\r\n        //set the percentile season to the combined dataset otherwise\r\n        else {\r\n            percentileSeason = \"combined\";\r\n        }\r\n\r\n        //count how many of the entries in the percentile array belong to the player\r\n        //this is done so that the percentile rank can be adjusted in order not to double count a player's entries\r\n        for (let season in percentileEntries) {\r\n            if (percentileSeason === season || percentileSeason === \"combined\") {\r\n                if (percentileEntries[season].includes(template)) {\r\n                    percentileArrayOccurrences = 1;\r\n                }\r\n            }\r\n        }\r\n\r\n        let statsPer90 = {};\r\n        let percentiles = {};\r\n\r\n        //calculate per90 stats\r\n        let minutes = filteredStats['minutes'];\r\n        switch (template) {\r\n            case \"FW\":\r\n                statsPer90[\"npg\"] = filteredStats[\"npg\"] / (minutes / 90);\r\n                statsPer90[\"npxg\"] = filteredStats[\"npxg\"] / (minutes / 90);\r\n                statsPer90[\"npxgPerShot\"] = filteredStats[\"npxg\"] / filteredStats[\"shots\"];\r\n                statsPer90[\"conversionRate\"] = (filteredStats[\"npg\"] / filteredStats[\"shots\"]) * 100;\r\n                statsPer90[\"aerialSuccRate\"] = (filteredStats[\"succAerials\"] / filteredStats[\"attAerials\"]) * 100;\r\n                statsPer90[\"boxTouches\"] = filteredStats[\"boxTouches\"] / (minutes / 90);\r\n                statsPer90[\"xa\"] = filteredStats[\"xa\"] / (minutes / 90);\r\n                statsPer90[\"ppa\"] = filteredStats[\"ppa\"] / (minutes / 90);\r\n                statsPer90[\"succDribbles\"] = filteredStats[\"succDribbles\"] / (minutes / 90);\r\n                statsPer90[\"dribbleSuccRate\"] = (filteredStats[\"succDribbles\"] / filteredStats[\"attDribbles\"]) * 100;\r\n                statsPer90[\"timesDispossessed\"] = filteredStats[\"timesDispossessed\"] / (minutes / 90);\r\n                // statsPer90[\"succPressures\"] = filteredStats[\"succPressures\"] / (minutes/90);\r\n                statsPer90[\"padjSuccPressures\"] = filteredStats[\"padjSuccPressures\"] / (minutes / 90);\r\n                break;\r\n            case \"AM\":\r\n                statsPer90[\"npg\"] = filteredStats[\"npg\"] / (minutes / 90);\r\n                statsPer90[\"npxg\"] = filteredStats[\"npxg\"] / (minutes / 90);\r\n                statsPer90[\"npxgPerShot\"] = filteredStats[\"npxg\"] / filteredStats[\"shots\"];\r\n                statsPer90[\"xa\"] = filteredStats[\"xa\"] / (minutes / 90);\r\n                statsPer90[\"sca\"] = filteredStats[\"sca\"] / (minutes / 90);\r\n                statsPer90[\"ppa\"] = filteredStats[\"ppa\"] / (minutes / 90);\r\n                statsPer90[\"progDistance\"] = filteredStats[\"progDistance\"] / (minutes / 90);\r\n                statsPer90[\"passSuccRate\"] = (filteredStats[\"succPasses\"] / filteredStats[\"attPasses\"]) * 100;\r\n                statsPer90[\"succDribbles\"] = filteredStats[\"succDribbles\"] / (minutes / 90);\r\n                statsPer90[\"dribbleSuccRate\"] = (filteredStats[\"succDribbles\"] / filteredStats[\"attDribbles\"]) * 100;\r\n                statsPer90[\"timesDispossessed\"] = filteredStats[\"timesDispossessed\"] / (minutes / 90);\r\n                // statsPer90[\"succPressures\"] = filteredStats[\"succPressures\"] / (minutes/90);\r\n                statsPer90[\"padjSuccPressures\"] = filteredStats[\"padjSuccPressures\"] / (minutes / 90);\r\n                break;\r\n            case \"CM\":\r\n                statsPer90[\"xa\"] = filteredStats[\"xa\"] / (minutes / 90);\r\n                statsPer90[\"sca\"] = filteredStats[\"sca\"] / (minutes / 90);\r\n                statsPer90[\"pft\"] = filteredStats[\"pft\"] / (minutes / 90);\r\n                statsPer90[\"progDistance\"] = filteredStats[\"progDistance\"] / (minutes / 90);\r\n                statsPer90[\"passSuccRate\"] = (filteredStats[\"succPasses\"] / filteredStats[\"attPasses\"]) * 100;\r\n                statsPer90[\"succDribbles\"] = filteredStats[\"succDribbles\"] / (minutes / 90);\r\n                statsPer90[\"dribbleSuccRate\"] = (filteredStats[\"succDribbles\"] / filteredStats[\"attDribbles\"]) * 100;\r\n                statsPer90[\"timesDispossessed\"] = filteredStats[\"timesDispossessed\"] / (minutes / 90);\r\n                // statsPer90[\"succPressures\"] = filteredStats[\"succPressures\"] / (minutes/90);\r\n                statsPer90[\"padjSuccPressures\"] = filteredStats[\"padjSuccPressures\"] / (minutes / 90);\r\n                // statsPer90[\"interceptions\"] = filteredStats[\"interceptions\"] / (minutes/90);\r\n                statsPer90[\"padjInterceptions\"] = filteredStats[\"padjInterceptions\"] / (minutes / 90);\r\n                // statsPer90[\"tacklesWon\"] = filteredStats[\"tacklesWon\"] / (minutes/90);\r\n                statsPer90[\"padjTacklesWon\"] = filteredStats[\"padjTacklesWon\"] / (minutes / 90);\r\n                statsPer90[\"dribbleTackleRate\"] = (filteredStats[\"succDribbleTackles\"] / filteredStats[\"attDribbleTackles\"]) * 100;\r\n                break;\r\n            case \"FB\":\r\n                statsPer90[\"xa\"] = filteredStats[\"xa\"] / (minutes / 90);\r\n                statsPer90[\"pft\"] = filteredStats[\"pft\"] / (minutes / 90);\r\n                statsPer90[\"progDistance\"] = filteredStats[\"progDistance\"] / (minutes / 90);\r\n                statsPer90[\"passSuccRate\"] = (filteredStats[\"succPasses\"] / filteredStats[\"attPasses\"]) * 100;\r\n                statsPer90[\"succDribbles\"] = filteredStats[\"succDribbles\"] / (minutes / 90);\r\n                statsPer90[\"dribbleSuccRate\"] = (filteredStats[\"succDribbles\"] / filteredStats[\"attDribbles\"]) * 100;\r\n                statsPer90[\"timesDispossessed\"] = filteredStats[\"timesDispossessed\"] / (minutes / 90);\r\n                // statsPer90[\"succPressures\"] = filteredStats[\"succPressures\"] / (minutes/90);\r\n                statsPer90[\"padjSuccPressures\"] = filteredStats[\"padjSuccPressures\"] / (minutes / 90);\r\n                // statsPer90[\"interceptions\"] = filteredStats[\"interceptions\"] / (minutes/90);\r\n                statsPer90[\"padjInterceptions\"] = filteredStats[\"padjInterceptions\"] / (minutes / 90);\r\n                // statsPer90[\"tacklesWon\"] = filteredStats[\"tacklesWon\"] / (minutes/90);\r\n                statsPer90[\"padjTacklesWon\"] = filteredStats[\"padjTacklesWon\"] / (minutes / 90);\r\n                statsPer90[\"dribbleTackleRate\"] = (filteredStats[\"succDribbleTackles\"] / filteredStats[\"attDribbleTackles\"]) * 100;\r\n                statsPer90[\"aerialSuccRate\"] = (filteredStats[\"succAerials\"] / filteredStats[\"attAerials\"]) * 100;\r\n                break;\r\n            case \"CB\":\r\n                statsPer90[\"pft\"] = filteredStats[\"pft\"] / (minutes / 90);\r\n                statsPer90[\"progDistance\"] = filteredStats[\"progDistance\"] / (minutes / 90);\r\n                statsPer90[\"passSuccRate\"] = (filteredStats[\"succPasses\"] / filteredStats[\"attPasses\"]) * 100;\r\n                statsPer90[\"longPassSuccRate\"] = (filteredStats[\"succLongPasses\"] / filteredStats[\"attLongPasses\"]) * 100;\r\n                // statsPer90[\"succPressures\"] = filteredStats[\"succPressures\"] / (minutes/90);\r\n                statsPer90[\"padjSuccPressures\"] = filteredStats[\"padjSuccPressures\"] / (minutes / 90);\r\n                // statsPer90[\"interceptions\"] = filteredStats[\"interceptions\"] / (minutes/90);\r\n                statsPer90[\"padjInterceptions\"] = filteredStats[\"padjInterceptions\"] / (minutes / 90);\r\n                // statsPer90[\"tacklesWon\"] = filteredStats[\"tacklesWon\"] / (minutes/90);\r\n                statsPer90[\"padjTacklesWon\"] = filteredStats[\"padjTacklesWon\"] / (minutes / 90);\r\n                statsPer90[\"dribbleTackleRate\"] = (filteredStats[\"succDribbleTackles\"] / filteredStats[\"attDribbleTackles\"]) * 100;\r\n                // statsPer90[\"fouls\"] = filteredStats[\"fouls\"] / (minutes/90);\r\n                statsPer90[\"padjFouls\"] = filteredStats[\"padjFouls\"] / (minutes / 90);\r\n                statsPer90[\"succAerials\"] = filteredStats[\"succAerials\"] / (minutes / 90);\r\n                statsPer90[\"aerialSuccRate\"] = (filteredStats[\"succAerials\"] / filteredStats[\"attAerials\"]) * 100;\r\n                // statsPer90[\"clearances\"] = filteredStats[\"clearances\"] / (minutes/90);\r\n                statsPer90[\"padjClearances\"] = filteredStats[\"padjClearances\"] / (minutes / 90);\r\n                break;\r\n            case \"GK\":\r\n                statsPer90[\"gsaa\"] = ((filteredStats[\"psxg\"] - filteredStats[\"goalsAgainst\"]) / filteredStats[\"sota\"]) * 100;\r\n                statsPer90[\"crossStopRate\"] = (filteredStats[\"stoppedCrosses\"] / filteredStats[\"attCrosses\"]) * 100;\r\n                statsPer90[\"launchedPassSuccRate\"] = (filteredStats[\"succLaunchedPasses\"] / filteredStats[\"attLaunchedPasses\"]) * 100;\r\n                break;\r\n            default:\r\n                statsPer90[\"npg\"] = 0;\r\n                statsPer90[\"npxg\"] = 0;\r\n                statsPer90[\"npxgPerShot\"] = 0;\r\n                statsPer90[\"conversionRate\"] = 0;\r\n                statsPer90[\"succAerials\"] = 0;\r\n                statsPer90[\"boxTouches\"] = 0;\r\n                statsPer90[\"xa\"] = 0;\r\n                statsPer90[\"ppa\"] = 0;\r\n                statsPer90[\"succDribbles\"] = 0;\r\n                statsPer90[\"dribbleSuccRate\"] = 0;\r\n                statsPer90[\"timesDispossessed\"] = 0;\r\n                // statsPer90[\"succPressures\"] = 0;\r\n                statsPer90[\"padjSuccPressures\"] = 0;\r\n        }\r\n\r\n        // for (let stat in statsPer90){\r\n        //     percentiles[stat] = 100;\r\n        // }\r\n\r\n        //calculate percentile ranks\r\n        if (template !== \"N/A\") {\r\n            for (let stat in statsPer90) {\r\n                if (isFinite(statsPer90[stat])) {\r\n                    percentiles[stat] = this.percentileRank(percentileArrays[percentileSeason][template][stat], statsPer90[stat], percentileArrayOccurrences) * 100;\r\n                }\r\n                //handle cases where the per 90 value is NaN (e.g.: as a result of divide by 0 error)\r\n                else {\r\n                    statsPer90[stat] = 0;\r\n                    percentiles[stat] = 0;\r\n                }\r\n                //reverse percentile ranks for \"less is better\" stats\r\n                if (stat === \"padjFouls\" || stat === \"timesDispossessed\") {\r\n                    percentiles[stat] = 100 - percentiles[stat];\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            for (let stat in statsPer90) {\r\n                percentiles[stat] = 0;\r\n            }\r\n        }\r\n\r\n        return {\r\n            statsPer90: statsPer90,\r\n            percentiles: percentiles\r\n        };\r\n\r\n    };\r\n\r\n\r\n    /**\r\n     * Function to calculate the percentile rank of a given value within a given array\r\n     * @param {Array} array - the array of values\r\n     * @param {number} value - the value for which the percentile rank is being calculated\r\n     * @param {Integer} occurrences - the number of occurrences of the player's numbers within the percentile array\r\n     * @return {number} the percentile rank of the value in the array (adjusted for the double-counting problem)\r\n     */\r\n    percentileRank = (array, value, occurrences) => {\r\n\r\n        //taken from: https://gist.github.com/IceCreamYou/6ffa1b18c4c8f6aeaad2\r\n        if (!isFinite(value)){\r\n            value = 0;\r\n        }\r\n        for (let i = 0, length = array.length; i < length; i++) {\r\n            if (value < array[i]) {\r\n                while (i < length && value === array[i]) i++;\r\n                if (i === 0) return 0;\r\n                if (value !== array[i-1]) {\r\n                    i += (value - array[i-1]) / (array[i] - array[i-1]);\r\n                }\r\n                //adjust the returned percentile by disregarding the entries that belong to the player\r\n                return (i / length) - (occurrences/array.length);\r\n            }\r\n        }\r\n        return 1;\r\n\r\n    };\r\n\r\n\r\n    /**\r\n     * Function to construct the input given to the Highcharts component\r\n     * @param {Object} statsPer90 - object containing the per90 stats\r\n     * @param {Object} percentiles - object containing the percentile ranks\r\n     * @return {Array} chartInput - array containing information for each data point in the Highcharts plot\r\n     */\r\n    constructChartInput = (statsPer90, percentiles) => {\r\n\r\n        let template = this.state.template;\r\n        let colors = this.colors[template];\r\n\r\n        //remove unnecessary precision from the per90 labels and the percentile ranks\r\n        let p90_labels = this.truncate(statsPer90);\r\n        let percentile_labels = this.roundNumbers(percentiles, 0);\r\n\r\n        //iterate through per90 stats and percentile ranks and construct objects for each point on the Highcharts plot\r\n        let chartInput = [];\r\n        let i = 0;\r\n        for (let key in percentiles){\r\n            chartInput[i] = {\r\n                y: percentiles[key],\r\n                p90_label: p90_labels[key],\r\n                percentile_label: this.ordinalSuffix(percentile_labels[key]),\r\n                color: Highcharts.Color(colors[i]).setOpacity(0.85).get()\r\n            };\r\n            i++;\r\n        }\r\n        return chartInput;\r\n\r\n    };\r\n\r\n\r\n    /**\r\n     * Function to truncate all values in an object to 3 digits\r\n     * @param {Object} someStats - object containing the values that need to be reduced to 3 digits\r\n     * @return {Object} threeDigitStats - object containing value of someStats reduced to 3 digits\r\n     */\r\n    truncate = (someStats) => {\r\n\r\n        let threeDigitStats = {};\r\n\r\n        for (let stat in someStats){\r\n            let precision;\r\n            if (\r\n                stat === \"npxgPerShot\"\r\n            ){\r\n                precision = 3;\r\n            }\r\n            else if (\r\n                stat === \"conversionRate\" ||\r\n                stat === \"aerialSuccRate\" ||\r\n                stat === \"dribbleSuccRate\" ||\r\n                stat === \"passSuccRate\" ||\r\n                stat === \"dribbleTackleRate\" ||\r\n                stat === \"longPassSuccRate\" ||\r\n                stat === \"launchedPassSuccRate\"\r\n            ) {\r\n                precision = 1;\r\n            }\r\n            else if (\r\n                stat === \"progDistance\"\r\n            ) {\r\n                precision = 0;\r\n            }\r\n            else {\r\n                precision = 2;\r\n            }\r\n            threeDigitStats[stat] = parseFloat(Math.round(someStats[stat] * (10**precision)) / (10**precision)).toFixed(precision);\r\n        }\r\n        return threeDigitStats;\r\n\r\n    };\r\n\r\n\r\n    /**\r\n     * Function to round all values in an object to a specified precision\r\n     * @param {Object} someStats - object containing the values that need to be rounded\r\n     * @param {number} precision - the number of decimal places each number should be rounded to\r\n     * @return {Object}\r\n     */\r\n    roundNumbers = (someStats, precision) => {\r\n\r\n        let roundedStats = {};\r\n\r\n        for (let stat in someStats){\r\n            roundedStats[stat] = Math.round(someStats[stat] * (10**precision)) / (10**precision);\r\n        }\r\n\r\n        return roundedStats;\r\n\r\n    };\r\n\r\n\r\n    /**\r\n     * Function to append an ordinal suffix (-st, -nd, -rd, -th) to numbers\r\n     * @param {number} aNumber - the number to which the ordinal suffix is being appended\r\n     * @return {string} - the number with the ordinal suffix appended to it\r\n     */\r\n    ordinalSuffix = (aNumber) => {\r\n\r\n        //taken from: https://stackoverflow.com/questions/13627308/add-st-nd-rd-and-th-ordinal-suffix-to-a-number\r\n        let j = aNumber % 10,\r\n            k = aNumber % 100;\r\n        if (j === 1 && k !== 11) {\r\n            return aNumber + \"st\";\r\n        }\r\n        if (j === 2 && k !== 12) {\r\n            return aNumber + \"nd\";\r\n        }\r\n        if (j === 3 && k !== 13) {\r\n            return aNumber + \"rd\";\r\n        }\r\n        return aNumber + \"th\";\r\n\r\n    };\r\n\r\n\r\n    /**\r\n     * Function to change the selected template\r\n     * @param {Object} event - the input event from the template form\r\n     */\r\n    changeTemplate = (event) => {\r\n\r\n        let template = event.target.value;\r\n\r\n        this.setState({\r\n            template: template,\r\n            isAnimated: true\r\n        }, () => {\r\n\r\n        });\r\n\r\n    };\r\n\r\n\r\n    /**\r\n     * Function to change the list of selected competitions\r\n     * @param {Object} event - the input event from the competitions form\r\n     */\r\n    changeSelectedCompetitions = (event) => {\r\n\r\n        let selectedCompetitions = this.state.selectedCompetitions;\r\n        let clickedValues = event.target.value.split(\"_\");\r\n\r\n        let clickedSeason = clickedValues[0];\r\n        let clickedCompetition = clickedValues[1];\r\n\r\n        if (selectedCompetitions[clickedSeason].includes(clickedCompetition)){\r\n            selectedCompetitions[clickedSeason].splice(selectedCompetitions[clickedSeason].indexOf(clickedCompetition), 1);\r\n        }\r\n        else {\r\n            selectedCompetitions[clickedSeason].push(clickedCompetition);\r\n        }\r\n\r\n        this.setState({\r\n            selectedCompetitions: selectedCompetitions,\r\n            isAnimated: true\r\n        });\r\n\r\n    };\r\n\r\n\r\n    /**\r\n     * Function to change the type of data labels\r\n     * @param {Object} event - the input event from the data labels form\r\n     */\r\n    changeLabelType = (event) => {\r\n\r\n        let labelType = event.target.value;\r\n\r\n        cookies.set('labelType', labelType, {path: '/'});\r\n\r\n        this.setState({\r\n            labelType: labelType,\r\n            isAnimated: false\r\n        })\r\n\r\n    };\r\n\r\n\r\n    /**\r\n     * Function to change the position of the credits at the bottom of the Slice container\r\n     */\r\n    toggleCreditsPosition = () => {\r\n\r\n        let oldPosition = this.state.creditsPosition;\r\n        let newPosition = oldPosition === \"right\" ? \"center\" : \"right\";\r\n\r\n        cookies.set('creditsPosition', newPosition, {path: '/'});\r\n        this.setState({\r\n            isAnimated: false,\r\n            creditsPosition: newPosition\r\n        })\r\n\r\n    };\r\n\r\n\r\n    /**\r\n     * Function to export the chart in a standardized 2400 * 2000 PNG format\r\n     * Exports the second slice that is rendered to the \"#export\" div, which has fixed height and width\r\n     * Adds the FootballSlices watermark to the exported image\r\n     * @return {Promise<void>}\r\n     */\r\n    //TODO: re-factor this functionality so that the second slice is only rendered when an export is required\r\n    exportChart = async () => {\r\n\r\n        const isSafari = this.state.isSafari;\r\n        if (isSafari){\r\n            alert(\"Sorry, this feature is not supported in Safari.\");\r\n            return;\r\n        }\r\n\r\n        const name = this.state.name;\r\n        const node = document.getElementById('export');\r\n        const scale = 2;\r\n\r\n        //scale the background (the watermark)\r\n        let backgroundSize = 18/scale;\r\n\r\n        //get the width and height of the background in pixels\r\n        let backgroundWidth = (backgroundSize/100) * node.offsetWidth;\r\n        let backgroundHeight = (791/2070) * backgroundWidth; //height = inverted aspect ratio * width\r\n\r\n        //get the height of the background as a percentage of the total height of the chart\r\n        let backgroundHeightRatio = (backgroundHeight / node.offsetHeight) * 100;\r\n\r\n        //get the aspect ratio of the export div\r\n        let nodeAspectRatio = node.offsetWidth / node.offsetHeight;\r\n\r\n        domtoimage.toPng(node, {\r\n            bgcolor: '#fafbfc',\r\n            width: 1200 * scale,\r\n            height: 1100 * scale,\r\n            style: {\r\n                //make the export div visible\r\n                opacity: '1',\r\n                //scale up 4x to improve the resolution of the exported chart\r\n                transform: `scale(${scale}) translate(${node.offsetWidth / 2 / scale}px, ${node.offsetHeight / 2 / scale}px)`,\r\n                //set the background position after the 4x scaling\r\n                //for the Y position, we start with 50% (bottom left),\r\n                //and then adjust based on the height of the watermark to achieve 0.3% bottom pading\r\n                'background-position': `0.3% ${(100/scale)-(0.3*nodeAspectRatio)-((backgroundHeightRatio+(0.3*nodeAspectRatio))/scale)}%`,\r\n                'background-size': `${backgroundSize}%`\r\n            }\r\n        })\r\n        .then(function (blob) {\r\n            saveAs(blob, `${name.replace(\" \", \"-\")}.png`);\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n            alert(\"An error occurred while exporting. Please refresh the page and try again.\")\r\n        });\r\n\r\n    };\r\n\r\n\r\n    /**\r\n     * render function\r\n     * @return {*} - JSX code for the stats page\r\n     */\r\n    render() {\r\n\r\n        let {\r\n            isLoading,\r\n            error,\r\n            url,\r\n            name,\r\n            age,\r\n            clubs,\r\n            stats,\r\n            lastUpdated,\r\n            competitions,\r\n            selectedCompetitions,\r\n            template,\r\n            labelType,\r\n            creditsPosition,\r\n            isAnimated,\r\n            isMobile\r\n        } = this.state;\r\n\r\n        //display loading spinner while the server responds to POST request for the stats\r\n        if (isLoading) {\r\n            return (\r\n                <LoadingSpinner/>\r\n            )\r\n        }\r\n\r\n        //display the error message screen if an error is caught\r\n        else if (error !== null) {\r\n            return (\r\n                <div id=\"main2\">\r\n                    <SearchBar page=\"stats\" query={this.state.query}/>\r\n                    <div className=\"screen\" id=\"error-screen\">\r\n                        <p>{error.message}</p>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        //build stats page otherwise\r\n        else {\r\n\r\n            //calculate stats and construct chart input\r\n            let filteredStats = {};\r\n            let series = [];\r\n            if (template !== null) {\r\n                filteredStats = this.filterStats(stats);\r\n                if (Object.keys(filteredStats).length !== 0){\r\n                    let calculatedStats = this.calculateStats(filteredStats);\r\n                    let chartInput = this.constructChartInput(calculatedStats.statsPer90, calculatedStats.percentiles);\r\n                    series = [chartInput];\r\n\r\n                }\r\n            }\r\n\r\n            //return JSX code for the stats page\r\n            return (\r\n                <div id=\"main2\">\r\n                    <SearchBar page=\"stats\"/>\r\n                    <div className=\"screen2\" id=\"stats-screen\">\r\n                        <SliceOptions\r\n                            isMobile={isMobile}\r\n                            template={template}\r\n                            competitions={competitions}\r\n                            clubs={clubs}\r\n                            selectedCompetitions={selectedCompetitions}\r\n                            labelType={labelType}\r\n                            changeTemplate={this.changeTemplate}\r\n                            changeSelectedCompetitions={this.changeSelectedCompetitions}\r\n                            changeLabelType={this.changeLabelType}\r\n                            toggleCreditsPosition={this.toggleCreditsPosition}\r\n                            exportChart={this.exportChart}\r\n                        />\r\n                        <Slice\r\n                            isMobile={isMobile}\r\n                            isForExport={false}\r\n                            isAnimated={isAnimated}\r\n                            isAnimatedInitial={true}\r\n                            hasTooltip={true}\r\n                            creditsPosition={creditsPosition}\r\n                            url={url}\r\n                            lastUpdated={lastUpdated}\r\n                            template={template}\r\n                            labelType={labelType}\r\n                            name={name}\r\n                            age={age}\r\n                            minutes={filteredStats['minutes']}\r\n                            series={series}\r\n                        />\r\n                    </div>\r\n                    {/*extra div which contains the Slice used in exports. Not displayed*/}\r\n                    <div id=\"export\">\r\n                        <Slice\r\n                            isMobile={isMobile}\r\n                            isForExport={true}\r\n                            isAnimated={false}\r\n                            isAnimatedInitial={false}\r\n                            hasTooltip={false}\r\n                            creditsPosition={creditsPosition}\r\n                            url={null}\r\n                            lastUpdated={lastUpdated}\r\n                            template={template}\r\n                            labelType={labelType}\r\n                            name={name}\r\n                            age={age}\r\n                            minutes={filteredStats['minutes']}\r\n                            series={series}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            );\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Stats;\r\n","import React, { Component } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport {isMobileOnly, isSafari} from 'react-device-detect';\r\nimport $ from 'jquery';\r\n\r\n//import pages\r\nimport Home from './pages/Home';\r\nimport Search from './pages/Search';\r\nimport Stats from './pages/Stats';\r\n\r\n//import stylesheets, including mobile stylesheet if it is a mobile device\r\nrequire('./stylesheets/App.css');\r\nif (isMobileOnly){\r\n    import('./stylesheets/Mobile.css')\r\n    .then(test => {\r\n        console.log(\"Mobile device detected\")\r\n    });\r\n}\r\n\r\n\r\n/**\r\n * Main app component. Handles routing, and the retrieval of percentile arrays.\r\n */\r\nclass App extends Component {\r\n\r\n\r\n    /**\r\n     * Constructor\r\n     * @param props\r\n     */\r\n    constructor(props) {\r\n\r\n        super(props);\r\n        this.state = {\r\n            isLoading: true,\r\n            percentileArrays: {},\r\n        };\r\n        this.getPercentileArrays();\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * Called after component has mounted\r\n     */\r\n    componentDidMount() {\r\n\r\n        //hard code the height of html, body, root and root-container if it is a mobile device\r\n        //this is done because the soft keyboards on mobile devices affect the vh\r\n        if (isMobileOnly){\r\n            var height = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\r\n            $(\"html, body, #root, #root-container\").css({\"height\": height});\r\n        }\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * Function to send a POST request to the server to retrieve the percentile arrays\r\n     */\r\n    getPercentileArrays = () => {\r\n\r\n        //retrieve percentile arrays and set isLoading to false\r\n        fetch('/api/percentiles', {\r\n            method: 'post',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({})\r\n        })\r\n        .then(res => {\r\n            return res.json()\r\n        })\r\n        .then(percentileArrays => this.setState({percentileArrays: percentileArrays, isLoading: false}))\r\n        .catch();\r\n\r\n    };\r\n\r\n\r\n    /**\r\n     * Function to update percentile arrays (called from Stats page)\r\n     * @param {Object} newPercentileArrays - the object representing the new percentile arrays\r\n     */\r\n    updatePercentileArrays = (newPercentileArrays) => {\r\n\r\n        this.setState({\r\n            percentileArrays: newPercentileArrays\r\n        })\r\n\r\n    };\r\n\r\n\r\n    /**\r\n     * render function\r\n     * @return {*} - JSX code for the website routing\r\n     */\r\n    render() {\r\n\r\n        let { isLoading } = this.state;\r\n\r\n        //display loading message while server responds to POST request for the percentile arrays\r\n        if (isLoading) {\r\n            return (\r\n                <div id=\"main\">\r\n                    <div className=\"screen\" id=\"loading-screen\">\r\n                        Connecting to server...\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        //return routing code otherwise\r\n        else {\r\n\r\n            const App = () => (\r\n                <div id=\"root-container\">\r\n                    <Switch>\r\n                        <Route exact path='/' render={(props) =>\r\n                            <Home {...props}\r\n                                  isMobile={isMobileOnly}\r\n                            />}\r\n                        />\r\n                        <Route path='/search/:query/:searchByClub?' component={Search}/>\r\n                        <Route path='/stats/:code' render={(props) =>\r\n                            <Stats {...props}\r\n                                 percentileArrays={this.state.percentileArrays}\r\n                                 isMobile={isMobileOnly}\r\n                                 isSafari={isSafari}\r\n                                 updatePercentileArrays={this.updatePercentileArrays}\r\n                            />}\r\n                        />\r\n                        <Route path='*' component={Home}/>\r\n                    </Switch>\r\n                </div>\r\n            );\r\n\r\n            return (\r\n                <Switch>\r\n                    <App/>\r\n                </Switch>\r\n            );\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport './index.css';\r\nimport App from './App/App';\r\n\r\nrender((\r\n    <BrowserRouter>\r\n        <App/>\r\n    </BrowserRouter>\r\n), document.getElementById('root'));"],"sourceRoot":""}