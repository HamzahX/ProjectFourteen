{"version":3,"sources":["App/assets/mockUps.png","App/components/SearchBar.js","App/pages/Home.js","App/components/LoadingSpinner.js","App/components/ClubSearchResult.js","App/pages/ClubSearch.js","App/components/PlayerSearchResult.js","App/pages/PlayerSearch.js","App/pages/Stats.js","App/App.js","index.js"],"names":["module","exports","SearchBar","props","state","query","type","searchType","undefined","handleChange1","bind","handleChange2","handleSubmit","event","this","setState","target","value","preventDefault","history","push","id","placeholder","onSubmit","onChange","autoComplete","Component","withRouter","Home","href","cursor","show","avgTypingDelay","style","color","className","src","mockUps","alt","backgroundColor","LoadingSpinner","ClubSearchResult","name","to","tabIndex","ClubSearch","getSearchResults","fetch","method","headers","body","JSON","stringify","then","res","ok","json","Error","searchResults","isLoading","catch","error","match","params","nextProps","nextContext","message","cards","i","length","current","PlayerSearchResult","club","nationality","URL","replace","split","join","all","PlayerSearch","searchByClub","processSearchResults","filteredSearchResults","names","clubs","nationalities","filterByClub","filterByName","currentResult","temp1","label","temp2","temp3","filter","e","selectedOption","parse","toUpperCase","includes","searchFilter","searchText","reactSelectStyle","control","base","boxShadow","borderColor","reactSelectTheme","theme","colors","primary25","primary","styles","isClearable","options","HighchartsMore","Highcharts","HighchartsParallel","Stats","getStats","response","processStats","allStats","percentiles","allCompetitions","selectedCompetitions","categories","template","url","isAll","multipleLeagues","isMobile","fontSizes","title","subtitle","noData","xAxisLabels","dataLabels","tooltipHeader","tooltip","credits","yAxisLabels","changeTemplate","changeSelectedCompetitions","selectAllCompetitions","clearAllCompetitions","filterStats","calculateChartInput","percentRank","roundNumbers","insertChartInput","x","startsWith","lastUpdated","stats","Object","keys","clickedCompetition","splice","indexOf","setCategories","filteredStats","competition","stat","percentileArrays","statsPer90","key","array","isFinite","l","someStats","precision","Math","round","chartInput","y","p90","Color","getOptions","setOpacity","get","isIncluded","substring","checked","series","selectedStats","toLocaleString","chart","fontFamily","parallelCoordinates","parallelAxes","labels","enabled","fontSize","gridZIndex","lineWidth","endOnTick","showFirstLabel","showLastLabel","min","max","tickPositions","polar","hideDelay","spacingLeft","spacingRight","marginLeft","marginRight","marginBottom","events","load","element","onclick","window","open","text","plotOptions","inside","fontWeight","textOutline","format","padding","allowOverlap","margin","pane","startAngle","lang","headerFormat","pointFormat","legend","borderWidth","align","verticalAlign","layout","xAxis","distance","gridLineWidth","gridLineColor","map","set","pointPadding","groupPadding","data","stickyTracking","zIndex","exporting","scale","sourceWidth","sourceHeight","buttons","contextButton","menuItems","onClick","disabled","constructorType","highcharts","containerProps","width","App","getPercentiles","self","$","css","h","document","documentElement","clientHeight","innerHeight","exact","path","component","render","getElementById"],"mappings":"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","file":"static/js/main.87cb6d57.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mockUps.db2323f6.png\";","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass SearchBar extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            query: this.props.query,\r\n            type: this.props.type,\r\n            searchType: this.props.searchType === undefined ? \"byName\" : this.props.searchType\r\n        };\r\n\r\n        this.handleChange1 = this.handleChange1.bind(this);\r\n        this.handleChange2 = this.handleChange2.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange1(event) {\r\n        this.setState({searchType: event.target.value});\r\n    }\r\n\r\n    handleChange2(event) {\r\n        this.setState({query: event.target.value});\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        const { searchType } = this.state;\r\n        if (searchType === \"byName\"){\r\n            this.props.history.push('/playerSearch/' + this.state.query);\r\n        }\r\n        else {\r\n            this.props.history.push('/clubSearch/' + this.state.query);\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const { type, searchType } = this.state;\r\n        let id;\r\n        if (type === 1){\r\n            id=\"searchbar-container\";\r\n        }\r\n        else if (type === 2) {\r\n            id=\"searchbar-container2\";\r\n        }\r\n        else {\r\n            id=\"searchbar-container3\";\r\n        }\r\n\r\n        let placeholder;\r\n        if (searchType === \"byName\"){\r\n            placeholder = \"Search for a player...\"\r\n        }\r\n        else {\r\n            placeholder = \"Search for a club...\"\r\n        }\r\n\r\n        return (\r\n            <div id={id}>\r\n                <form id=\"searchbar\" onSubmit={this.handleSubmit}>\r\n                    <select value={this.state.searchType} onChange={this.handleChange1}>\r\n                        <option value=\"byName\">By Name</option>\r\n                        <option value=\"byClub\">By Club</option>\r\n                    </select>\r\n                    {/*<Select*/}\r\n                    {/*    placeholder={\"Filter by club\"}*/}\r\n                    {/*    onChange={this.filterByClub}*/}\r\n                    {/*    isClearable*/}\r\n                    {/*/>*/}\r\n                    <input type=\"text\" id=\"query\" value={this.state.query} placeholder={placeholder} autoComplete=\"off\" onChange={this.handleChange2}/>\r\n                </form>\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default withRouter (SearchBar);","import React, { Component } from 'react';\r\n\r\nimport Typist from 'react-typist';\r\n\r\nimport SearchBar from \"../components/SearchBar\"\r\n\r\nimport mockUps from \"../assets/mockUps.png\"\r\n\r\n\r\nclass Home extends Component {\r\n    render() {\r\n        return (\r\n            <div id=\"homepage\">\r\n                <div id=\"menu\">\r\n                    <a href=\"#home\">Home</a>\r\n                    <a href=\"#preview\">OrganizedChaos</a>\r\n                    <a href=\"#faq\">FAQ</a>\r\n                    <a href=\"#contact\">Contact</a>\r\n                </div>\r\n                <div id=\"home\">\r\n                    <Typist cursor={{show: false}} avgTypingDelay={120}>\r\n                        {/*<Typist.Delay ms={500}/>*/}\r\n                        <h1>[name]<span style={{color: '#ffd700'}}>.com</span></h1>\r\n                    </Typist>\r\n                    <SearchBar type={3}/>\r\n                </div>\r\n                <div className=\"homepage-section-container\">\r\n                    <div id=\"preview\">\r\n                        <div id=\"preview-text\">\r\n                            <h2>OrganizedChaos</h2>\r\n                            <p>\r\n                                The OrganizedChaos tool is all about automation. It sifts through mounds of tables\r\n                                and numbers so you don't have to!\r\n                            </p>\r\n                            <br/>\r\n                            <p>\r\n                                Explore a database of <span className=\"accented-p\">2,500+</span> players from\r\n                                Europe's top <span className=\"accented-p\">5</span> leagues as well the UEFA Champions League and Europa League.\r\n                            </p>\r\n                            <br/>\r\n                            <p>\r\n                                Simply choose from <span className=\"accented-p\">5</span> positional templates, toggle the\r\n                                competitions you'd like to include, and you can visualize statistics in seconds with\r\n                                interactive percentile rank bar charts, powered by <a href=\"https://www.highcharts.com\" >Highcharts.js</a>.\r\n                            </p>\r\n                        </div>\r\n                        <div id=\"preview-image\">\r\n                            <img src={mockUps} alt=\"mockups\"/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div style={{backgroundColor: '#f0f1f2'}} className=\"homepage-section-container\">\r\n                    <div id=\"faq\">\r\n                        <h2>F.A.Q.</h2>\r\n                        <div id=\"faq-container\">\r\n                            <div className=\"faq-item\">\r\n                                <p><span className=\"accented-p\">Where do you get your data from?</span></p>\r\n                                <p><a href=\"https://www.whoscored.com\" >whoscored.com</a></p>\r\n                            </div>\r\n                            <div className=\"faq-item\">\r\n                                <p><span className=\"accented-p\">Do you plan on adding xG data to the charts?</span></p>\r\n                                <p>\r\n                                    Absolutely! I actually started this project mainly to learn and practice using browser\r\n                                    automation tools. <a href=\"https://www.whoscored.com\" >whoscored.com</a> was a fun\r\n                                    playground to practice on, and so I used it as my primary data source.\r\n                                    However, I definitely plan on incorporating some more advanced data from other\r\n                                    sources such as <a href=\"https://fbref.com\" >FBREF.com</a> and/or the <a href=\"https://github.com/statsbomb\" >Statsbomb API</a> in the future.\r\n                                </p>\r\n                            </div>\r\n                            <div className=\"faq-item\">\r\n                                <p><span className=\"accented-p\">How should the charts be interpreted?</span></p>\r\n                                <p>\r\n                                    Each chart consists of 12 bars. The size of the bar for each stat corresponds to\r\n                                    the percentile rank of the selected player with regards to the stat in question. The data labels attached to\r\n                                    each bar show the raw (per 90) value.\r\n                                </p>\r\n                                <br/>\r\n                                <p>\r\n                                    **Please note that the position of a stat on the chart can change between different\r\n                                    position templates.**\r\n                                </p>\r\n                            </div>\r\n                            <div className=\"faq-item\">\r\n                                <p><span className=\"accented-p\">What do the colors on the charts mean?</span></p>\r\n                                <p>\r\n                                    The colours are meant to help group similar statistics together\r\n                                    (as well as improve the charts' visual impact).\r\n                                </p>\r\n                                <ul>\r\n                                    <li><span style={{color: '#f37c98'}}>Red</span> is for goal-scoring & shooting stats,</li>\r\n                                    <li><span style={{color: '#d7c971'}}>Yellow</span> is for passing & chance creation,</li>\r\n                                    <li><span style={{color: '#91d782'}}>Green</span> is for dribbling & ball retention</li>\r\n                                    <li>and <span style={{color: '#95c3ef'}}>Blue</span> is for defensive stats</li>\r\n                                </ul>\r\n                            </div>\r\n                            <div className=\"faq-item\">\r\n                                <p><span className=\"accented-p\">How are the percentile ranks calculated?</span></p>\r\n                                <p>\r\n                                    Although the OrganizedChaos tool contains data for the Champions League and the Europa\r\n                                    League, the percentile ranks are based only on top 5 league data.\r\n                                </p>\r\n                                <br/>\r\n                                <p>\r\n                                    For each of the 5 position templates, my script uses the <a href=\"https://whoscored.com/Statistics\" >\r\n                                    whoscored.com player statistics table</a> to select all top 5 league players\r\n                                    who have accumulated more than 10 starts this season in the said position.\r\n                                    Their stats are then recorded in my dataset (and updated after each top 5 league\r\n                                    matchday).\r\n                                </p>\r\n                                <br/>\r\n                                <p>\r\n                                    For each player's chart, the percentile ranks are then obtained by determining the percentage\r\n                                    of scores within the total dataset for the selected template position that are equal\r\n                                    to or lower than the player's score. This is of course reversed for stats where a\r\n                                    lower value is better, such as the 'fouls committed per 90' stat.\r\n                                </p>\r\n                            </div>\r\n                            <div className=\"faq-item\">\r\n                                <p><span className=\"accented-p\">Can you add a feature to compare players on the same chart?</span></p>\r\n                                <p>\r\n                                    Yes, player comparison is definitely a feature I plan on implementing,\r\n                                    although I don't have a concrete timeline for that as of right now. Stay tuned!\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"homepage-section-container\">\r\n                    <div id=\"contact\">\r\n                        <h2>Contact</h2>\r\n                        <p>\r\n                            For any comments, bug reports, suggestions or questions, please feel free to reach out to me on twitter\r\n                            <a href=\"https://twitter.com/DyslexicDdue\" > @DyslexicDdue</a>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Home;","import React, { Component } from 'react';\r\n\r\nclass LoadingSpinner extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"main\">\r\n                <div className=\"screen\" id=\"loading-screen\">\r\n                    <div className=\"loader\">Loading...</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\nexport default (LoadingSpinner);","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass ClubSearchResult extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            name: this.props.name,\r\n        };\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Link to={\"/playerSearch/\" + this.state.name + \"/all\"}>\r\n                <div tabIndex=\"0\" className=\"search-result\">\r\n                    <div className=\"name\">{this.state.name}</div>\r\n                </div>\r\n            </Link>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default (ClubSearchResult);","import React, { Component } from 'react';\r\n\r\nimport SearchBar from \"../components/SearchBar\";\r\nimport LoadingSpinner from \"../components/LoadingSpinner\";\r\nimport ClubSearchResult from \"../components/ClubSearchResult\";\r\n\r\n\r\nclass ClubSearch extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        let { query } = props.match.params;\r\n        this.state = {\r\n            isLoading: false,\r\n            error: null,\r\n            query: query,\r\n            searchResults: [],\r\n        };\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            isLoading: true\r\n        }, () => {\r\n            this.getSearchResults();\r\n        });\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps, nextContext) {\r\n        let { query } = nextProps.match.params;\r\n        this.setState({\r\n            isLoading: true,\r\n            query: query\r\n        }, () => {\r\n            this.getSearchResults();\r\n        });\r\n    }\r\n\r\n    getSearchResults = () => {\r\n\r\n        fetch('/api/search', {\r\n            method: 'post',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                \"query\": this.state.query,\r\n                \"type\": \"club\"\r\n            })\r\n        })\r\n        .then(res => {\r\n            if (res.ok) {\r\n                return res.json()\r\n            }\r\n            else {\r\n               throw new Error(\"No results found\")\r\n            }\r\n        })\r\n        .then(searchResults => this.setState({searchResults: searchResults, isLoading: false}))\r\n        .catch(error => this.setState({error, isLoading: false}));\r\n\r\n    };\r\n\r\n    render() {\r\n        let {error, isLoading, searchResults} = this.state;\r\n\r\n        if (isLoading) {\r\n            return (\r\n                <LoadingSpinner/>\r\n            )\r\n        }\r\n\r\n        else if (error !== null) {\r\n            return (\r\n                <div id=\"main\">\r\n                    <SearchBar type={1} query={this.state.query}/>\r\n                    <div className=\"screen\" id=\"error-screen\">\r\n                        <p>{error.message}</p>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        else {\r\n\r\n            let cards = [];\r\n            for (let i=0; i<searchResults.length; i++){\r\n                let current = searchResults[i];\r\n                cards.push(\r\n                    <ClubSearchResult\r\n                        name={current}\r\n                    />\r\n                )\r\n            }\r\n\r\n            return (\r\n                <div id=\"main\">\r\n                    <SearchBar searchType={\"byClub\"} type={1} query={this.state.query}/>\r\n                    <div className=\"screen\" id=\"search-screen\">\r\n                        <div className=\"filter\" id=\"search-filters\">\r\n                            <h2>Search results for <br/>\"club.name ⊇ {this.state.query}\"</h2>\r\n                        </div>\r\n                        <div className=\"result\" id=\"search-results\">\r\n                            {cards}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default ClubSearch;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass PlayerSearchResult extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            name: this.props.name,\r\n            club: this.props.club,\r\n            nationality: this.props.nationality,\r\n            URL: this.props.URL.replace(\"https://www.whoscored.com/\", \"\")\r\n                .replace(\"History\", \"Show\")\r\n                .split(\"/\")\r\n                .join(\"_\"),\r\n            all: this.props.all\r\n        };\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Link to={\"/stats/\" + this.state.URL}>\r\n                <div tabIndex=\"0\" className=\"search-result\">\r\n                    <div className=\"name\">{this.state.name}</div>\r\n                    <div className=\"club\">Club: {this.state.club}</div>\r\n                    <div className=\"nationality\">Nationality: {this.state.nationality}</div>\r\n                </div>\r\n            </Link>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default (PlayerSearchResult);","import React, { Component } from 'react';\r\n\r\nimport SearchBar from \"../components/SearchBar\";\r\nimport LoadingSpinner from \"../components/LoadingSpinner\";\r\nimport PlayerSearchResult from \"../components/PlayerSearchResult\";\r\n\r\nimport Select from 'react-select';\r\n\r\n\r\nclass PlayerSearch extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        let query = props.match.params.query;\r\n        let searchByClub = props.match.params.searchByClub;\r\n        this.state = {\r\n            isLoading: false,\r\n            error: null,\r\n            query: query,\r\n            searchByClub: searchByClub,\r\n            searchResults: [],\r\n            filteredSearchResults: [],\r\n            names: [],\r\n            clubs: [],\r\n            nationalities: [],\r\n        };\r\n\r\n        this.filterByClub = this.filterByClub.bind(this);\r\n        this.filterByName = this.filterByName.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            isLoading: true\r\n        }, () => {\r\n            this.getSearchResults();\r\n        });\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps, nextContext) {\r\n        let { query } = nextProps.match.params;\r\n        this.setState({\r\n            isLoading: true,\r\n            query: query\r\n        }, () => {\r\n            this.getSearchResults();\r\n        });\r\n    }\r\n\r\n    processSearchResults(searchResults){\r\n        let names = [];\r\n        let clubs = [];\r\n        let nationalities = [];\r\n        for (let i=0; i<searchResults.length; i++){\r\n            let currentResult = searchResults[i];\r\n            let temp1 = {\r\n                value: currentResult.club,\r\n                label: currentResult.club,\r\n            };\r\n            let temp2 = {\r\n                value: currentResult.nationality,\r\n                label: currentResult.nationality,\r\n            };\r\n            let temp3 = {\r\n                value: currentResult.name,\r\n                label: currentResult.name\r\n            };\r\n            if (!clubs.filter(e => e.value === temp1.value).length > 0){\r\n                clubs.push(temp1);\r\n            }\r\n            if (!nationalities.filter(e => e.value === temp2.value).length > 0){\r\n                nationalities.push(temp2);\r\n            }\r\n            names.push(temp3);\r\n        }\r\n        this.setState({\r\n            searchResults: searchResults,\r\n            filteredSearchResults: searchResults,\r\n            names: names,\r\n            clubs: clubs,\r\n            nationalities: nationalities,\r\n            isLoading: false,\r\n            error: null\r\n        })\r\n    }\r\n\r\n    getSearchResults = () => {\r\n\r\n        let searchByClub = this.state.searchByClub;\r\n        // alert(searchByClub);\r\n        let type;\r\n        if (searchByClub === undefined){\r\n            type = \"playerByName\"\r\n        }\r\n        else {\r\n            type = \"playerByClub\"\r\n        }\r\n        fetch('/api/search', {\r\n            method: 'post',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                \"query\": this.state.query,\r\n                \"type\": type\r\n            })\r\n        })\r\n        .then(res => {\r\n            if (res.ok) {\r\n                return res.json()\r\n            }\r\n            else {\r\n               throw new Error(\"No results found\")\r\n            }\r\n        })\r\n        .then(searchResults => this.processSearchResults(searchResults))\r\n        .catch(error => this.setState({error, isLoading: false}));\r\n\r\n    };\r\n\r\n    filterByClub(selectedOption){\r\n\r\n        let searchResults = JSON.parse(JSON.stringify(this.state.searchResults));\r\n        let filteredSearchResults = [];\r\n\r\n        if (selectedOption === null){\r\n            filteredSearchResults = searchResults;\r\n        }\r\n\r\n        else {\r\n            for (let i=0; i<searchResults.length; i++){\r\n                if (selectedOption.value === searchResults[i].club){\r\n                    filteredSearchResults.push(searchResults[i]);\r\n                }\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            filteredSearchResults: []\r\n        }, () => {\r\n            this.setState({\r\n                filteredSearchResults: filteredSearchResults\r\n            })\r\n        });\r\n\r\n    }\r\n\r\n    filterByName(selectedOption){\r\n\r\n        let searchResults = JSON.parse(JSON.stringify(this.state.searchResults));\r\n        let filteredSearchResults = [];\r\n\r\n        if (selectedOption === null){\r\n            filteredSearchResults = searchResults;\r\n        }\r\n\r\n        else {\r\n            for (let i=0; i<searchResults.length; i++){\r\n                if (searchResults[i].name.toUpperCase().includes(selectedOption.value.toUpperCase())){\r\n                    filteredSearchResults.push(searchResults[i]);\r\n                }\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            filteredSearchResults: []\r\n        }, () => {\r\n            this.setState({\r\n                filteredSearchResults: filteredSearchResults\r\n            })\r\n        });\r\n\r\n    }\r\n\r\n    render() {\r\n        let {error, isLoading, filteredSearchResults, clubs, names, searchByClub} = this.state;\r\n\r\n        if (isLoading) {\r\n            return (\r\n                <LoadingSpinner/>\r\n            )\r\n        }\r\n\r\n        else if (error !== null) {\r\n            return (\r\n                <div id=\"main\">\r\n                    <SearchBar type={1} query={this.state.query}/>\r\n                    <div className=\"screen\" id=\"error-screen\">\r\n                        <p>{error.message}</p>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        else {\r\n\r\n            let cards = [];\r\n            for (let i=0; i<filteredSearchResults.length; i++){\r\n                let current = filteredSearchResults[i];\r\n                cards.push(\r\n                    <PlayerSearchResult\r\n                        name={current.name}\r\n                        club={current.club}\r\n                        nationality={current.nationality}\r\n                        URL={current.URL}\r\n                        all={current.all}\r\n                    />\r\n                )\r\n            }\r\n\r\n            const reactSelectStyle = {\r\n                control: (base, state) => ({\r\n                    ...base,\r\n                    boxShadow: \"none\",\r\n                    '&:hover': {\r\n                        borderColor: '#B23535'\r\n                    },\r\n                    '&:focus': {\r\n                        borderColor: '#B23535'\r\n                    },\r\n                })\r\n            };\r\n\r\n            const reactSelectTheme = theme => ({\r\n                ...theme,\r\n                colors: {\r\n                    ...theme.colors,\r\n                    primary25: \"pink\",\r\n                    primary: \"#e75453\"\r\n                }\r\n            });\r\n\r\n            let searchFilter;\r\n            let searchText;\r\n            if (searchByClub === undefined){\r\n                searchText = <h2>Search results for <br/>\"player.name ⊇ {this.state.query}\"</h2>;\r\n                searchFilter =\r\n                    <Select\r\n                        styles={reactSelectStyle}\r\n                        theme={reactSelectTheme}\r\n                        placeholder={\"Filter by club\"}\r\n                        onChange={this.filterByClub}\r\n                        isClearable\r\n                        options={clubs}\r\n                    />\r\n            }\r\n\r\n            else {\r\n                searchText = <h2>Search results for <br/>\"player.club = {this.state.query}\"</h2>;\r\n                searchFilter =\r\n                    <Select\r\n                        styles={reactSelectStyle}\r\n                        theme={reactSelectTheme}\r\n                        placeholder={\"Filter by name\"}\r\n                        onChange={this.filterByName}\r\n                        isClearable\r\n                        options={names}\r\n                    />\r\n            }\r\n\r\n            return (\r\n                <div id=\"main\">\r\n                    <SearchBar searchType={searchByClub === \"all\" ? \"byClub\" : \"byName\"} type={1} query={this.state.query}/>\r\n                    <div className=\"screen\" id=\"search-screen\">\r\n                        <div className=\"filter\" id=\"search-filters\">\r\n                            {searchText}\r\n                            <div id=\"search-filter-inputs\">\r\n                                {searchFilter}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"result\" id=\"search-results\">\r\n                            {cards}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default PlayerSearch;","import React, { Component } from 'react';\r\n\r\nimport SearchBar from \"../components/SearchBar\";\r\nimport LoadingSpinner from \"../components/LoadingSpinner\";\r\nimport Highcharts from 'highcharts/highstock'\r\nimport HighchartsMore from 'highcharts/highcharts-more'\r\nimport HighchartsParallel from 'highcharts/modules/parallel-coordinates'\r\nimport HighchartsReact from 'highcharts-react-official'\r\n\r\nHighchartsMore(Highcharts);\r\nHighchartsParallel(Highcharts);\r\n\r\nclass Stats extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        let categories = [\r\n            'Non-Penalty Goals',\r\n            'Non-Penalty Shots',\r\n            'Conversion Rate',\r\n            'Shots on Target %',\r\n            'Assists',\r\n            'Key Passes',\r\n            'Completed Passes',\r\n            'Pass Completion %',\r\n            'Successful Dribbles',\r\n            'Dribble Success %',\r\n            'Turnovers',\r\n            'Recoveries',\r\n        ];\r\n        this.state = {\r\n            isLoading: false,\r\n            allStats: {},\r\n            percentiles: this.props.percentiles,\r\n            allCompetitions: [],\r\n            selectedCompetitions: [],\r\n            categories: categories,\r\n            template: \"FW\",\r\n            name: '',\r\n            url: '',\r\n            isAll: false,\r\n            multipleLeagues: false,\r\n            isMobile: this.props.isMobile,\r\n            fontSizes: {\r\n                title: this.props.isMobile === true ? '4vw' : '2em',\r\n                subtitle: this.props.isMobile === true ? '2.8vw' : '1.4em',\r\n                noData: this.props.isMobile === true ? '2.7vw' : '1.35em',\r\n                xAxisLabels: this.props.isMobile === true ? '2.3vw' : '1.15em',\r\n                dataLabels: this.props.isMobile === true ? '2.3vw' : '1.25em',\r\n                tooltipHeader: this.props.isMobile === true ? '2.3vw' : '1em',\r\n                tooltip: this.props.isMobile === true ? '2.3vw' : '1.25em',\r\n                credits: this.props.isMobile === true ? '1.4vw' : '1em',\r\n                yAxisLabels: this.props.isMobile === true ? '1vw' : '0.5em',\r\n            }\r\n        };\r\n\r\n        this.processStats = this.processStats.bind(this);\r\n        this.changeTemplate = this.changeTemplate.bind(this);\r\n        this.changeSelectedCompetitions = this.changeSelectedCompetitions.bind(this);\r\n        this.selectAllCompetitions = this.selectAllCompetitions.bind(this);\r\n        this.clearAllCompetitions = this.clearAllCompetitions.bind(this);\r\n        this.filterStats = this.filterStats.bind(this);\r\n        this.calculateChartInput = this.calculateChartInput.bind(this);\r\n        this.percentRank = this.percentRank.bind(this);\r\n        this.roundNumbers = this.roundNumbers.bind(this);\r\n        this.insertChartInput = this.insertChartInput.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            isLoading: true\r\n        }, () => {\r\n            this.getStats();\r\n        });\r\n    }\r\n\r\n    getStats = () => {\r\n        const { URL } = this.props.match.params;\r\n\r\n        fetch('/api/stats', {\r\n            method: 'post',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                \"URL\": URL\r\n            })\r\n        })\r\n        .then(res => res.json())\r\n        .then(response => this.processStats(response))\r\n    };\r\n\r\n    processStats(response) {\r\n        let multipleLeagues = this.state.allCompetitions.filter(x => x.startsWith(\"League | \")).length > 1;\r\n        this.setState({\r\n            url: response.url,\r\n            name: response.name,\r\n            lastUpdated: response.lastUpdated,\r\n            allStats: response.stats,\r\n            allCompetitions: Object.keys(response.stats),\r\n            selectedCompetitions: Object.keys(response.stats),\r\n            isLoading: false,\r\n            multipleLeagues: multipleLeagues\r\n        }, () => {\r\n\r\n        });\r\n    }\r\n\r\n    changeSelectedCompetitions(event){\r\n\r\n        let selectedCompetitions = this.state.selectedCompetitions;\r\n        let clickedCompetition = event.target.value;\r\n\r\n        if (selectedCompetitions.includes(clickedCompetition)){\r\n            selectedCompetitions.splice(selectedCompetitions.indexOf(clickedCompetition), 1);\r\n        }\r\n        else{\r\n            selectedCompetitions.push(clickedCompetition);\r\n        }\r\n\r\n        this.setState({\r\n            selectedCompetitions: selectedCompetitions\r\n        });\r\n\r\n    }\r\n\r\n    selectAllCompetitions(event){\r\n\r\n        let allCompetitions = JSON.parse(JSON.stringify(this.state.allCompetitions));\r\n\r\n        this.setState({\r\n            selectedCompetitions: allCompetitions\r\n        });\r\n\r\n    }\r\n\r\n    clearAllCompetitions(event){\r\n\r\n        this.setState({\r\n            selectedCompetitions: []\r\n        });\r\n\r\n    }\r\n\r\n    changeTemplate(event){\r\n        let template = event.target.value;\r\n\r\n        this.setState({\r\n            template: template\r\n        }, () => {\r\n            this.setCategories();\r\n        });\r\n\r\n    }\r\n\r\n    setCategories() {\r\n        let template = this.state.template;\r\n\r\n        let categories = [];\r\n        switch (template) {\r\n            case \"FW\":\r\n                categories = [\r\n                    'Non-Penalty Goals',\r\n                    'Non-Penalty Shots',\r\n                    'Conversion Rate',\r\n                    'Shots on Target %',\r\n                    'Assists',\r\n                    'Key Passes',\r\n                    'Completed Passes',\r\n                    'Pass Completion %',\r\n                    'Successful Dribbles',\r\n                    'Dribble Success %',\r\n                    'Turnovers',\r\n                    'Recoveries',\r\n                ];\r\n                break;\r\n            case \"AM\":\r\n                categories = [\r\n                    'Non-Penalty Goals',\r\n                    'Non-Penalty Shots',\r\n                    'Assists',\r\n                    'Key Passes',\r\n                    'Completed Passes',\r\n                    'Pass Completion %',\r\n                    'Completed Crosses',\r\n                    'Cross Completion %',\r\n                    'Successful Dribbles',\r\n                    'Dribble Success %',\r\n                    'Turnovers',\r\n                    'Recoveries',\r\n                ];\r\n                break;\r\n            case \"CM\":\r\n                categories = [\r\n                    'Non-Penalty Goals + Assists',\r\n                    'Key Passes',\r\n                    'Completed Passes',\r\n                    'Pass Completion %',\r\n                    'Completed Long Passes',\r\n                    'Long Pass Completion %',\r\n                    'Successful Dribbles',\r\n                    'Dribble Success %',\r\n                    'Interceptions',\r\n                    'Tackles Won',\r\n                    'Tackle Win %',\r\n                    'Fouls Committed'\r\n                ];\r\n                break;\r\n            case \"FB\":\r\n                categories = [\r\n                    'Assists',\r\n                    'Key Passes',\r\n                    'Completed Passes',\r\n                    'Pass Completion %',\r\n                    'Completed Crosses',\r\n                    'Cross Completion %',\r\n                    'Successful Dribbles',\r\n                    'Dribble Success %',\r\n                    'Interceptions',\r\n                    'Tackles Won',\r\n                    'Tackle Win %',\r\n                    'Fouls Committed'\r\n                ];\r\n                break;\r\n            case \"CB\":\r\n                categories = [\r\n                    'Completed Passes',\r\n                    'Pass Completion %',\r\n                    'Completed Long Passes',\r\n                    'Long Pass Completion %',\r\n                    'Interceptions',\r\n                    'Tackles Won',\r\n                    'Tackle Win %',\r\n                    'Fouls Committed',\r\n                    'Blocks',\r\n                    'Clearances',\r\n                    'Aerial Duels Won',\r\n                    'Aerial Duel Win %'\r\n                ];\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            categories: categories\r\n        })\r\n\r\n    }\r\n\r\n    filterStats(stats){\r\n        let filteredStats = {};\r\n        let selectedCompetitions = this.state.selectedCompetitions;\r\n        for (let competition in stats){\r\n            if (selectedCompetitions.includes(competition)) {\r\n                for (let stat in stats[competition]) {\r\n                    if (!(stat in filteredStats)) {\r\n                        filteredStats[stat] = stats[competition][stat];\r\n                    } else {\r\n                        filteredStats[stat] += stats[competition][stat];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return filteredStats;\r\n    }\r\n\r\n    calculateChartInput(filteredStats, percentileArrays){\r\n        let template = this.state.template;\r\n        let statsPer90 = {};\r\n        let percentiles = {};\r\n        switch (template){\r\n            case \"FW\":\r\n                statsPer90['goals'] = filteredStats['goals'] / (filteredStats['minutes']/90);\r\n                statsPer90['shots'] = (filteredStats['shots']  - filteredStats['penaltiesTaken']) / (filteredStats['minutes']/90);\r\n                statsPer90['conversionRate'] = (filteredStats['goals'] / (filteredStats['shots']  - filteredStats['penaltiesTaken'])) * 100;\r\n                statsPer90['shotsOnTarget'] = ((filteredStats['shotsOnTarget'] - filteredStats['penaltiesTaken']) / (filteredStats['shots'] - filteredStats['penaltiesTaken'])) * 100;\r\n                statsPer90['assists'] = filteredStats['assists'] / (filteredStats['minutes']/90);\r\n                statsPer90['keyPasses'] = filteredStats['keyPasses'] / (filteredStats['minutes']/90);\r\n                statsPer90['succPasses'] = filteredStats['succPasses'] / (filteredStats['minutes']/90);\r\n                statsPer90['passingRate'] = (filteredStats['succPasses'] / filteredStats['totalPasses']) * 100;\r\n                statsPer90['succDribbles'] = filteredStats['succDribbles'] / (filteredStats['minutes']/90);\r\n                statsPer90['dribbleRate'] = (filteredStats['succDribbles'] / filteredStats['totalDribbles']) * 100;\r\n                statsPer90['possessionLosses'] = filteredStats['possessionLosses'] / (filteredStats['minutes']/90);\r\n                statsPer90['recoveries'] = (filteredStats['tackles'] / (filteredStats['minutes']/90)) + (filteredStats['interceptions'] / (filteredStats['minutes']/90));\r\n                for (let key in statsPer90){\r\n                    percentiles[key] = this.percentRank(percentileArrays['fw'][key], statsPer90[key]) * 100\r\n                }\r\n                percentiles['possessionLosses'] = 100 - percentiles['possessionLosses'];\r\n                break;\r\n            case \"AM\":\r\n                statsPer90['goals'] = filteredStats['goals'] / (filteredStats['minutes']/90);\r\n                statsPer90['shots'] = (filteredStats['shots']  - filteredStats['penaltiesTaken']) / (filteredStats['minutes']/90);\r\n                statsPer90['assists'] = filteredStats['assists'] / (filteredStats['minutes']/90);\r\n                statsPer90['keyPasses'] = filteredStats['keyPasses'] / (filteredStats['minutes']/90);\r\n                statsPer90['succPasses'] = filteredStats['succPasses'] / (filteredStats['minutes']/90);\r\n                statsPer90['passingRate'] = (filteredStats['succPasses'] / filteredStats['totalPasses']) * 100;\r\n                statsPer90['succCrosses'] = filteredStats['succCrosses'] / (filteredStats['minutes']/90);\r\n                statsPer90['crossRate'] = (filteredStats['succCrosses'] / filteredStats['totalCrosses']) * 100;\r\n                statsPer90['succDribbles'] = filteredStats['succDribbles'] / (filteredStats['minutes']/90);\r\n                statsPer90['dribbleRate'] = (filteredStats['succDribbles'] / filteredStats['totalDribbles']) * 100;\r\n                statsPer90['possessionLosses'] = filteredStats['possessionLosses'] / (filteredStats['minutes']/90);\r\n                statsPer90['recoveries'] = (filteredStats['tackles'] / (filteredStats['minutes']/90)) + (filteredStats['interceptions'] / (filteredStats['minutes']/90));\r\n                for (let key in statsPer90){\r\n                    percentiles[key] = this.percentRank(percentileArrays['am'][key], statsPer90[key]) * 100\r\n                }\r\n                percentiles['possessionLosses'] = 100 - percentiles['possessionLosses'];\r\n                break;\r\n            case \"CM\":\r\n                statsPer90['goalsPlusAssists'] = (filteredStats['goals'] + filteredStats['assists']) / (filteredStats['minutes']/90);\r\n                statsPer90['keyPasses'] = filteredStats['keyPasses'] / (filteredStats['minutes']/90);\r\n                statsPer90['succPasses'] = filteredStats['succPasses'] / (filteredStats['minutes']/90);\r\n                statsPer90['passingRate'] = (filteredStats['succPasses'] / filteredStats['totalPasses']) * 100;\r\n                statsPer90['succLongPasses'] = filteredStats['succLongPasses'] / (filteredStats['minutes']/90);\r\n                statsPer90['longPassingRate'] = (filteredStats['succLongPasses'] / filteredStats['totalLongPasses']) * 100;\r\n                statsPer90['succDribbles'] = filteredStats['succDribbles'] / (filteredStats['minutes']/90);\r\n                statsPer90['dribbleRate'] = (filteredStats['succDribbles'] / filteredStats['totalDribbles']) * 100;\r\n                statsPer90['interceptions'] = (filteredStats['interceptions'] / (filteredStats['minutes']/90));\r\n                statsPer90['tackles'] = (filteredStats['tackles'] / (filteredStats['minutes']/90));\r\n                statsPer90['tackleRate'] = (filteredStats['tackles'] / (filteredStats['tackles'] + filteredStats['dribbledPast'])) *100;\r\n                statsPer90['fouls'] = filteredStats['fouls'] / (filteredStats['minutes']/90);\r\n                for (let key in statsPer90){\r\n                    percentiles[key] = this.percentRank(percentileArrays['cm'][key], statsPer90[key]) * 100\r\n                }\r\n                percentiles['fouls'] = 100 - percentiles['fouls'];\r\n                break;\r\n            case \"FB\":\r\n                statsPer90['assists'] = filteredStats['assists'] / (filteredStats['minutes']/90);\r\n                statsPer90['keyPasses'] = filteredStats['keyPasses'] / (filteredStats['minutes']/90);\r\n                statsPer90['succPasses'] = filteredStats['succPasses'] / (filteredStats['minutes']/90);\r\n                statsPer90['passingRate'] = (filteredStats['succPasses'] / filteredStats['totalPasses']) * 100;\r\n                statsPer90['succCrosses'] = filteredStats['succCrosses'] / (filteredStats['minutes']/90);\r\n                statsPer90['crossRate'] = (filteredStats['succCrosses'] / filteredStats['totalCrosses']) * 100;\r\n                statsPer90['succDribbles'] = filteredStats['succDribbles'] / (filteredStats['minutes']/90);\r\n                statsPer90['dribbleRate'] = (filteredStats['succDribbles'] / filteredStats['totalDribbles']) * 100;\r\n                statsPer90['interceptions'] = (filteredStats['interceptions'] / (filteredStats['minutes']/90));\r\n                statsPer90['tackles'] = (filteredStats['tackles'] / (filteredStats['minutes']/90));\r\n                statsPer90['tackleRate'] = (filteredStats['tackles'] / (filteredStats['tackles'] + filteredStats['dribbledPast'])) *100;\r\n                statsPer90['fouls'] = filteredStats['fouls'] / (filteredStats['minutes']/90);\r\n                for (let key in statsPer90){\r\n                    percentiles[key] = this.percentRank(percentileArrays['fb'][key], statsPer90[key]) * 100\r\n                }\r\n                percentiles['fouls'] = 100 - percentiles['fouls'];\r\n                break;\r\n            case \"CB\":\r\n                statsPer90['succPasses'] = filteredStats['succPasses'] / (filteredStats['minutes']/90);\r\n                statsPer90['passingRate'] = (filteredStats['succPasses'] / filteredStats['totalPasses']) * 100;\r\n                statsPer90['succLongPasses'] = filteredStats['succLongPasses'] / (filteredStats['minutes']/90);\r\n                statsPer90['longPassingRate'] = (filteredStats['succLongPasses'] / filteredStats['totalLongPasses']) * 100;\r\n                statsPer90['interceptions'] = (filteredStats['interceptions'] / (filteredStats['minutes']/90));\r\n                statsPer90['tackles'] = (filteredStats['tackles'] / (filteredStats['minutes']/90));\r\n                statsPer90['tackleRate'] = (filteredStats['tackles'] / (filteredStats['tackles'] + filteredStats['dribbledPast'])) *100;\r\n                statsPer90['fouls'] = filteredStats['fouls'] / (filteredStats['minutes']/90);\r\n                statsPer90['blocks'] = (filteredStats['blocks'] / (filteredStats['minutes']/90));\r\n                statsPer90['clearances'] = filteredStats['clearances'] / (filteredStats['minutes']/90);\r\n                statsPer90['succAerialDuels'] = filteredStats['succAerialDuels'] / (filteredStats['minutes']/90);\r\n                statsPer90['aerialDuelRate'] = (filteredStats['succAerialDuels'] / filteredStats['totalAerialDuels']) * 100;\r\n                for (let key in statsPer90){\r\n                    percentiles[key] = this.percentRank(percentileArrays['cb'][key], statsPer90[key]) * 100\r\n                }\r\n                percentiles['fouls'] = 100 - percentiles['fouls'];\r\n                break;\r\n        }\r\n        return this.insertChartInput(statsPer90, percentiles);\r\n    }\r\n\r\n    percentRank(array, value) {\r\n        if (!isFinite(value)){\r\n            value = 0;\r\n        }\r\n        for (let i = 0, l = array.length; i < l; i++) {\r\n            if (value < array[i]) {\r\n                while (i < l && value === array[i]) i++;\r\n                if (i === 0) return 0;\r\n                if (value !== array[i-1]) {\r\n                    i += (value - array[i-1]) / (array[i] - array[i-1]);\r\n                }\r\n                return i / l;\r\n            }\r\n        }\r\n        return 1;\r\n    }\r\n\r\n    roundNumbers(someStats, precision){\r\n        for (let stat in someStats){\r\n            if (isFinite(someStats[stat])) {\r\n                someStats[stat] = Math.round(someStats[stat] * (10**precision)) / (10**precision);\r\n            }\r\n            else {\r\n                someStats[stat] = 0;\r\n            }\r\n        }\r\n        return someStats;\r\n    }\r\n\r\n    insertChartInput(statsPer90, percentiles) {\r\n        let template = this.state.template;\r\n        let colors = [];\r\n        if (template === \"FW\"){\r\n            colors = [5, 5, 5, 5, 6, 6, 6, 6, 2, 2, 2, 0];\r\n        }\r\n        else if (template === \"AM\"){\r\n            colors = [5, 5, 6, 6, 6, 6, 6, 6, 2, 2, 2, 0];\r\n        }\r\n        else if (template === \"CM\"){\r\n            colors = [8, 6, 6, 6, 6, 6, 2, 2, 0, 0, 0, 0];\r\n        }\r\n        else if (template === \"FB\"){\r\n            colors = [6, 6, 6, 6, 6, 6, 2, 2, 0, 0, 0, 0];\r\n        }\r\n        else {\r\n            colors = [6, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0, 0];\r\n        }\r\n        statsPer90 = this.roundNumbers(statsPer90, 2);\r\n        percentiles = this.roundNumbers(percentiles, 0);\r\n        let chartInput = [];\r\n        let i = 0;\r\n        for (let key in percentiles){\r\n            // chartInput[i] = {y: percentiles[key], p90: statsPer90[key], color: '#FF0000'};\r\n            chartInput[i] = {y: percentiles[key], p90: statsPer90[key], color: Highcharts.Color(Highcharts.getOptions().colors[colors[i]]).setOpacity(0.8).get()};\r\n            i++;\r\n        }\r\n        return chartInput;\r\n    }\r\n\r\n    render() {\r\n\r\n        let {\r\n            name,\r\n            url,\r\n            lastUpdated,\r\n            selectedCompetitions,\r\n            template,\r\n            categories,\r\n            allStats,\r\n            percentiles,\r\n            isLoading,\r\n            multipleLeagues,\r\n            fontSizes,\r\n            isMobile\r\n        } = this.state;\r\n\r\n        if (isLoading) {\r\n            return (\r\n                <LoadingSpinner/>\r\n            )\r\n        }\r\n\r\n        else {\r\n            let allCompetitions = this.state.allCompetitions;\r\n            let cards = [];\r\n            for (let i=0; i<allCompetitions.length; i++){\r\n                let current = allCompetitions[i];\r\n                let isIncluded = selectedCompetitions.includes(current);\r\n                let label = current;\r\n                if (!multipleLeagues){\r\n                    label = label.substring(0, label.indexOf(\"|\")-1)\r\n                }\r\n                cards.push(\r\n                    <label className={isIncluded ? \"selected-label\" : null}>\r\n                        <input className=\"competition\"\r\n                               type=\"checkbox\"\r\n                               value={current}\r\n                               onChange={this.changeSelectedCompetitions}\r\n                               checked={isIncluded}\r\n                        /> {\"  \" + label}\r\n                    </label>\r\n                )\r\n            }\r\n\r\n            if (percentiles.length !== 0 && Object.keys(allStats).length !== 0 && categories !== []) {\r\n\r\n                let selectedStats = this.filterStats(allStats);\r\n                let series;\r\n                let subtitle;\r\n                if (selectedCompetitions.length !== 0){\r\n                    let chartInput = this.calculateChartInput(selectedStats, percentiles);\r\n                    series = [chartInput];\r\n                    subtitle = \"Percentile Rank Bars (w/ p90 Raw Values)<br>\";\r\n                    switch (template) {\r\n                        case \"FW\":\r\n                            subtitle += \"Forward Template  ║  Minutes Played: \";\r\n                            break;\r\n                        case \"AM\":\r\n                            subtitle += \"Attacking Midfielder / Winger Template  ║  Minutes Played: \";\r\n                            break;\r\n                        case \"CM\":\r\n                            subtitle += \"Central / Defensive Midfielder Template  ║  Minutes Played: \";\r\n                            break;\r\n                        case \"FB\":\r\n                            subtitle += \"Full-back Template  ║  Minutes Played: \";\r\n                            break;\r\n                        case \"CB\":\r\n                            subtitle += \"Center-back Template  ║  Minutes Played: \";\r\n                            break;\r\n                    }\r\n\r\n                    subtitle += selectedStats['minutes'].toLocaleString();\r\n                    subtitle += \"<br>Last Updated: \" + lastUpdated + \" UTC\";\r\n                }\r\n\r\n                else {\r\n                    series = [];\r\n                    subtitle = \"-<br>-<br>-\";\r\n                }\r\n\r\n                var options = {\r\n                    chart: {\r\n                        backgroundColor: '#fafbfc',\r\n                        style: {\r\n                            fontFamily: 'sans-serif'\r\n                        },\r\n                        parallelCoordinates: true,\r\n                        parallelAxes: {\r\n                            labels: {\r\n                                enabled: false,\r\n                                style: {\r\n                                    color: '#444444',\r\n                                    fontSize: fontSizes['yAxisLabels'],\r\n                                }\r\n                            },\r\n                            gridZIndex: 5,\r\n                            lineWidth: 0,\r\n                            endOnTick: true,\r\n                            showFirstLabel: false,\r\n                            showLastLabel: true,\r\n                            min: -15,\r\n                            max: 100,\r\n                            tickPositions: [-15, 0, 25, 50, 75, 100]\r\n                        },\r\n                        polar: true,\r\n                        type: 'column',\r\n                        // plotBackgroundColor: '#F5F6F7',\r\n                        // plotShadow: true,\r\n                        hideDelay: 0,\r\n                        spacingLeft: 0,\r\n                        spacingRight: 0,\r\n                        marginLeft: 90,\r\n                        marginRight: 90,\r\n                        marginBottom: 30,\r\n                        events: {\r\n                            load: function() {\r\n                                this.title.element.onclick = function() {\r\n                                    window.open(url, '_blank');\r\n                                }\r\n                            },\r\n                        }\r\n                    },\r\n                    credits: {\r\n                        text: \"Percentile ranks are calculated by comparing a player to other top 5 league players who have at least 10 starts in the selected template position\",\r\n                        style: {\r\n                            fontSize: fontSizes['credits']\r\n                        },\r\n                        href: ''\r\n                    },\r\n                    plotOptions: {\r\n                        series: {\r\n                            color: Highcharts.Color(Highcharts.getOptions().colors[0]).setOpacity(0.6).get(),\r\n                            dataLabels: {\r\n                                enabled: true,\r\n                                inside: true,\r\n                                style: {\r\n                                    color: \"black\",\r\n                                    fontWeight: '600',\r\n                                    fontSize: fontSizes['dataLabels'],\r\n                                    textOutline: \"1.5px contrast\"\r\n                                },\r\n                                format: '{point.p90}',\r\n                                padding: 0,\r\n                                allowOverlap: true,\r\n                            },\r\n                            // shadow: true\r\n                        },\r\n                    },\r\n                    title: {\r\n                        text: name + \", 19/20\",\r\n                        style: {\r\n                            color: '#e75453',\r\n                            fontSize: fontSizes['title'],\r\n                            fontWeight: 'bold',\r\n                        },\r\n                        margin: 35\r\n                    },\r\n                    pane: {\r\n                        startAngle: -16.3636363636363636363\r\n                    },\r\n                    lang: {\r\n                        noData: \"Select a competition\"\r\n                    },\r\n                    noData: {\r\n                        style: {\r\n                            fontWeight: 'bold',\r\n                            fontSize: fontSizes['noData'],\r\n                            color: '#303030'\r\n                        }\r\n                    },\r\n                    subtitle: {\r\n                        text: subtitle,\r\n                        style: {\r\n                            // color: 'black',\r\n                            fontSize: fontSizes['subtitle']\r\n                        }\r\n                    },\r\n                    tooltip: {\r\n                        headerFormat: '<span style=\"font-size: ' + fontSizes['tooltipHeader'] + '\">{point.key}</span><br/>',\r\n                        pointFormat: '<span style=\"color:{point.color}\">\\u25CF</span>' +\r\n                            ' {series.name}<br>Raw Value: <b>{point.p90}</b><br/>Percentile Rank: <b>{point.formattedValue}</b>',\r\n                        style: {\r\n                            fontSize: fontSizes['tooltip']\r\n                        }\r\n                    },\r\n                    legend: {\r\n                        enabled: false,\r\n                        borderWidth: 1,\r\n                        align: 'center',\r\n                        verticalAlign: 'bottom',\r\n                        layout: 'horizontal'\r\n                    },\r\n                    xAxis: {\r\n                        categories: categories,\r\n                        labels: {\r\n                            distance: isMobile === true ? 60 : 40,\r\n                            style: {\r\n                                fontSize: fontSizes['xAxisLabels'],\r\n                            },\r\n                            padding: 31\r\n                        },\r\n                        gridLineWidth: 1.5,\r\n                        gridLineColor: '#333333',\r\n                        gridZIndex: 4\r\n                    },\r\n                    series:\r\n                        series.map(function (set, i) {\r\n                            return {\r\n                                pointPadding: 0,\r\n                                groupPadding: 0,\r\n                                name: name,\r\n                                data: set,\r\n                                stickyTracking: false,\r\n                                zIndex: 0\r\n                            };\r\n                        }),\r\n                    exporting: {\r\n                        scale: 1,\r\n                        sourceWidth: 1920,\r\n                        sourceHeight: 1080,\r\n                        buttons: {\r\n                            contextButton: {\r\n                                menuItems: [\"viewFullscreen\", \"printChart\"]\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            }\r\n\r\n            return (\r\n                <div id=\"main2\">\r\n                    <SearchBar type={2}/>\r\n                    <div className=\"screen2\" id=\"content-screen\">\r\n                        <div className=\"filter\" id=\"chart-filters\">\r\n                            <div className=\"chart-filter-inputs\" id=\"chart-filter-inputs-laptop\">\r\n                                <h3>Template</h3>\r\n                                <form id=\"templates\" onChange={this.changeTemplate}>\r\n                                    <label><input type=\"radio\" name=\"template\" value=\"FW\" checked={template === \"FW\" ? true: null}/> Forward </label>\r\n                                    <label><input type=\"radio\" name=\"template\" value=\"AM\" checked={template === \"AM\" ? true: null}/> Attacking Midfielder / Winger</label>\r\n                                    <label><input type=\"radio\" name=\"template\" value=\"CM\" checked={template === \"CM\" ? true: null}/> Central / Defensive Midfielder</label>\r\n                                    <label><input type=\"radio\" name=\"template\" value=\"FB\" checked={template === \"FB\" ? true: null}/> Full-back </label>\r\n                                    <label><input type=\"radio\" name=\"template\" value=\"CB\" checked={template === \"CB\" ? true: null}/> Center-back </label>\r\n                                </form>\r\n                                <h3>Competitions</h3>\r\n                                <h4>19/20</h4>\r\n                                <form id=\"competitions\">\r\n                                    {cards}\r\n                                </form>\r\n                            </div>\r\n                            <div className=\"chart-filter-inputs\" id=\"chart-filter-inputs-mobile\">\r\n                                <div id=\"templates-container\">\r\n                                    <h3>Template</h3>\r\n                                    <form id=\"templates\" onChange={this.changeTemplate}>\r\n                                        <label className={template === \"FW\" ? \"selected-label\" : null}>\r\n                                            <input type=\"radio\" name=\"template\" value=\"FW\" checked={template === \"FW\" ? true: null}/> <span>Forward</span>\r\n                                        </label>\r\n                                        <label className={template === \"AM\" ? \"selected-label\" : null}>\r\n                                            <input type=\"radio\" name=\"template\" value=\"AM\" checked={template === \"AM\" ? true: null}/> <span>Attacking Midfielder / Winger</span>\r\n                                        </label>\r\n                                        <label className={template === \"CM\" ? \"selected-label\" : null}>\r\n                                            <input type=\"radio\" name=\"template\" value=\"CM\" checked={template === \"CM\" ? true: null}/> <span>Central / Defensive Midfielder</span>\r\n                                        </label>\r\n                                        <label className={template === \"FB\" ? \"selected-label\" : null}>\r\n                                            <input type=\"radio\" name=\"template\" value=\"FB\" checked={template === \"FB\" ? true: null}/> <span>Full-back</span>\r\n                                        </label>\r\n                                        <label className={template === \"CB\" ? \"selected-label\" : null}>\r\n                                            <input type=\"radio\" name=\"template\" value=\"CB\" checked={template === \"CB\" ? true: null}/> <span>Center-back</span>\r\n                                        </label>\r\n                                    </form>\r\n                                </div>\r\n                                <div id=\"competitions-container\">\r\n                                    <h3>Competitions</h3>\r\n                                    <h4>19/20</h4>\r\n                                    <form id=\"competitions\">\r\n                                        {cards}\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                            <div id=\"filter-buttons\">\r\n                                <div className=\"filter-button\">\r\n                                    <button id=\"selectAllButton\" type=\"button\" onClick={this.selectAllCompetitions}>Select All Competitions</button>\r\n                                </div>\r\n                                <div className=\"filter-button\">\r\n                                    <button id=\"clearAllButton\" type=\"button\" onClick={this.clearAllCompetitions}>Clear All Competitions</button>\r\n                                </div>\r\n                                <div className=\"filter-button\">\r\n                                    <button id=\"toggleTableButton\" type=\"button\" disabled={true}>Toggle Data Table</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"result\" id=\"chart\">\r\n                            <HighchartsReact\r\n                                constructorType={\"chart\"}\r\n                                highcharts={Highcharts}\r\n                                containerProps={{style: {width: '100%'}}}\r\n                                options={options}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default Stats;","import React, { Component } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport './App.css';\r\nimport Home from './pages/Home';\r\nimport ClubSearch from './pages/ClubSearch';\r\nimport PlayerSearch from './pages/PlayerSearch';\r\nimport Stats from './pages/Stats';\r\n\r\nimport $ from 'jquery';\r\n\r\nclass App extends Component {\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n        this.state = {\r\n            percentiles: {},\r\n            isMobile: false\r\n        };\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        var isMobile = false;\r\n        var self = this;\r\n\r\n        $(function() {\r\n\r\n            if ($('body').css('background-color') === 'rgb(250, 251, 253)') {\r\n                isMobile = true;\r\n            }\r\n\r\n            if (isMobile){\r\n\r\n                var h = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\r\n\r\n                $(\"html, body, #root, #root-container\").css({\"height\":h});\r\n                $(\"#home\").css({\"height\":h});\r\n\r\n                self.setState({\r\n                    isMobile: isMobile\r\n                })\r\n\r\n            }\r\n\r\n        });\r\n\r\n        this.getPercentiles()\r\n\r\n    }\r\n\r\n    getPercentiles = () => {\r\n\r\n        fetch('/api/percentiles', {\r\n            method: 'post',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n\r\n            })\r\n        })\r\n        .then(res => {\r\n            return res.json()\r\n        })\r\n        .then(percentiles => this.setState({percentiles: percentiles}))\r\n        .catch();\r\n\r\n    };\r\n\r\n    render() {\r\n\r\n        const App = () => (\r\n            <div id=\"root-container\">\r\n                <Switch>\r\n                    <Route exact path='/' component={Home}/>\r\n                    <Route path='/clubSearch/:query' component={ClubSearch}/>\r\n                    <Route path='/playerSearch/:query/:searchByClub?' component={PlayerSearch}/>\r\n                    <Route path='/stats/:URL' render={(props) => <Stats {...props} percentiles={this.state.percentiles} isMobile={this.state.isMobile} />}/>\r\n                </Switch>\r\n            </div>\r\n        );\r\n        return (\r\n            <Switch>\r\n              <App/>\r\n            </Switch>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport './index.css';\r\nimport App from './App/App';\r\n\r\nrender((\r\n    <BrowserRouter>\r\n        <App/>\r\n    </BrowserRouter>\r\n), document.getElementById('root'));"],"sourceRoot":""}