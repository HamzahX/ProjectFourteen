{"version":3,"sources":["App/assets/mockups.png","App/components/SearchBar.js","App/components/PlayerSearchResult.js","App/components/LoadingSpinner.js","App/pages/Home.js","App/components/ClubSearchResult.js","App/pages/Search.js","App/pages/Stats.js","App/App.js","index.js"],"names":["module","exports","SearchBar","props","state","query","type","handleChange","bind","handleSubmit","event","this","setState","target","value","preventDefault","history","push","containerID","homeButton","to","id","style","color","display","className","onSubmit","placeholder","autoComplete","onChange","Component","withRouter","PlayerSearchResult","page","name","club","nationality","URL","replace","split","join","all","clubString","i","length","clubLabel","tabIndex","LoadingSpinner","Home","getSamplePlayers","fetch","method","headers","body","JSON","stringify","then","res","json","samplePlayers","isLoading","$","css","height","Math","max","document","documentElement","clientHeight","window","innerHeight","navbarHeight","toggleMenu","menu","getElementById","hideMenu","isMobile","samplePlayerCards","current","url","onClick","href","fontWeight","src","mockUps","alt","backgroundColor","ClubSearchResult","Search","getSearchResults","undefined","searchByClub","ok","Error","searchResults","processSearchResults","catch","error","openMenu","handleInputChange","action","match","params","playerSearchResults","filteredPlayerSearchResults","clubSearchResults","names","clubs","nationalities","reactSelectStyle","control","base","boxShadow","borderColor","reactSelectTheme","theme","colors","primary25","primary","filterByClub","filterByName","nextProps","nextContext","currentResult","currentResultClubs","temp1","label","filter","e","temp2","temp3","selectedOption","console","log","parse","j","includes","toUpperCase","message","playerCards","searchFilter","searchText","clubCards","styles","onInputChange","onBlur","isClearable","menuIsOpen","options","components","DropdownIndicator","IndicatorSeparator","marginTop","HighchartsMore","Highcharts","HighchartsParallel","Stats","getStats","response","processStats","allStats","percentiles","allCompetitions","selectedCompetitions","categories","selectedCategories","template","labelType","age","isAll","multipleClubs","creditsPosition","animation","fontSizes","title","subtitle","noData","xAxisLabels","dataLabels","dataLabelsOutline","tooltipHeader","tooltip","credits","yAxisLabels","changeTemplate","changeSelectedCompetitions","changeLabelType","selectAllCompetitions","clearAllCompetitions","toggleCreditsPosition","exportAsImage","filterStats","calculateChartInput","percentRank","roundNumbers","ordinalSuffix","insertChartInput","chartRef","React","createRef","position","lastUpdated","stats","Object","keys","clickedCompetition","splice","indexOf","newPosition","scale","node","getElementsByClassName","domtoimage","toPng","bgcolor","blob","saveAs","alert","backgroundSize","backgroundHeightRatio","offsetWidth","offsetHeight","nodeAspectRatio","width","transform","setCategories","filteredStats","competition","stat","percentileArrays","statsPer90","key","array","isFinite","someStats","precision","round","k","chartInput","y","percentile","p90","Color","getOptions","setOpacity","get","competitionLabels","isIncluded","substring","checked","series","selectedStats","toLocaleString","creditsOffset","chart","fontFamily","parallelCoordinates","parallelAxes","labels","enabled","fontSize","gridZIndex","lineWidth","endOnTick","showFirstLabel","showLastLabel","min","tickPositions","polar","spacingLeft","spacingRight","marginLeft","marginRight","marginBottom","events","load","element","onclick","open","text","align","plotOptions","textOutline","format","padding","allowOverlap","z","margin","pane","startAngle","lang","attr","zIndex","headerFormat","pointFormat","legend","borderWidth","verticalAlign","layout","xAxis","distance","gridLineWidth","gridLineColor","map","set","pointPadding","groupPadding","data","stickyTracking","exporting","sourceWidth","sourceHeight","buttons","contextButton","menuItems","disabled","constructorType","highcharts","containerProps","ref","isMobileOnly","require","App","getPercentiles","exact","path","component","render"],"mappings":"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","file":"static/js/main.1556b938.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mockups.6ea1291e.png\";","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n\r\nclass SearchBar extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            query: this.props.query,\r\n            type: this.props.type,\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({query: event.target.value});\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        this.props.history.push('/search/' + this.state.query);\r\n    }\r\n\r\n    render() {\r\n\r\n        const { type } = this.state;\r\n        let containerID;\r\n        let homeButton;\r\n        if (type === 1){\r\n            containerID = \"searchbar-container1\";\r\n        }\r\n        else if (type === 2) {\r\n            containerID=\"searchbar-container2\";\r\n        }\r\n        else {\r\n            containerID = \"searchbar-container3\";\r\n        }\r\n\r\n        if (type !== 3){\r\n            homeButton = <Link to={'/'}><div id=\"home-button\"><div>Football<span style={{color: '#e4c000', display: 'block'}}>Slices<span style={{color: 'black'}}>.com</span></span></div></div></Link>;\r\n        }\r\n\r\n        return (\r\n            <div className=\"searchbar-container\" id={containerID}>\r\n                <form id=\"searchbar\" onSubmit={this.handleSubmit}>\r\n                    {homeButton}\r\n                    <input type=\"text\" id=\"query\" value={this.state.query} placeholder=\"Search for players, clubs...\" autoComplete=\"off\" onChange={this.handleChange}/>\r\n                </form>\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default withRouter (SearchBar);\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass PlayerSearchResult extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            page: this.props.page,\r\n            name: this.props.name,\r\n            club: this.props.club,\r\n            nationality: this.props.nationality,\r\n            URL: this.props.URL.replace(\"https://www.whoscored.com/\", \"\")\r\n                .replace(\"History\", \"Show\")\r\n                .split(\"/\")\r\n                .join(\"_\"),\r\n            all: this.props.all\r\n        };\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        let { club, page } = this.state;\r\n        let clubString = club[0];\r\n\r\n        for (let i=1; i<club.length; i++){\r\n            clubString += (\", \" + club[i]);\r\n        }\r\n\r\n        let className = page === 'home' ? 'sample-player' : 'search-result';\r\n        let clubLabel = page === 'home' ? '' : 'Club:';\r\n\r\n        return (\r\n            <Link to={\"/stats/\" + this.state.URL}>\r\n                <div tabIndex=\"0\" className={className}>\r\n                    <div className=\"name\">{this.state.name}</div>\r\n                    <div className=\"club\">{clubLabel} {clubString}</div>\r\n                    <div className=\"nationality\">Nationality: {this.state.nationality}</div>\r\n                </div>\r\n            </Link>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default (PlayerSearchResult);\r\n","import React, { Component } from 'react';\r\n\r\nclass LoadingSpinner extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"main\">\r\n                <div className=\"screen\" id=\"loading-screen\">\r\n                    <div className=\"loader\">Loading...</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\nexport default (LoadingSpinner);","import React, { Component } from 'react';\r\n\r\n// import Typist from 'react-typist';\r\nimport SearchBar from \"../components/SearchBar\"\r\nimport PlayerSearchResult from \"../components/PlayerSearchResult\"\r\nimport LoadingSpinner from \"../components/LoadingSpinner\";\r\n\r\nimport mockUps from \"../assets/mockups.png\"\r\nimport $ from \"jquery\";\r\n\r\n\r\nclass Home extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isMobile: this.props.isMobile,\r\n            isLoading: false,\r\n            samplePlayers: [],\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            isLoading: true\r\n        }, () => {\r\n            this.getSamplePlayers();\r\n        });\r\n    }\r\n\r\n    getSamplePlayers = () => {\r\n        fetch('/api/samplePlayers', {\r\n            method: 'post',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({})\r\n        })\r\n        .then(res => res.json())\r\n        .then(samplePlayers => {\r\n            this.setState({samplePlayers: samplePlayers, isLoading: false});\r\n            if ($('body').css('background-color') === 'rgb(250, 251, 253)') {\r\n                var height = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\r\n                var navbarHeight = 0.06 * height;\r\n                $(\"#home\").css({\"height\": height});\r\n                $(\"#navbar-container\").css({\"height\": navbarHeight});\r\n            }\r\n        })\r\n    };\r\n\r\n    toggleMenu = () => {\r\n\r\n        let menu = document.getElementById('menu');\r\n        if (menu.className === \"navbar\"){\r\n            menu.className += \" responsive\";\r\n        }\r\n        else{\r\n            menu.className = \"navbar\"\r\n        }\r\n\r\n    };\r\n\r\n    hideMenu = () => {\r\n\r\n        let menu = document.getElementById('menu');\r\n        if (menu.className !== \"navbar\"){\r\n            menu.className = \"navbar\";\r\n        }\r\n\r\n    };\r\n\r\n    render() {\r\n\r\n        let { isLoading, samplePlayers } = this.state;\r\n\r\n        if (isLoading) {\r\n            return (\r\n                <LoadingSpinner/>\r\n            )\r\n        }\r\n\r\n        else {\r\n\r\n            let samplePlayerCards = [];\r\n            for (let i=0; i<samplePlayers.length; i++){\r\n                let current = samplePlayers[i];\r\n                samplePlayerCards.push(\r\n                    <PlayerSearchResult\r\n                        page = {\"home\"}\r\n                        name = {current.name}\r\n                        club = {current.club}\r\n                        nationality = {current.nationality}\r\n                        URL = {current.url}\r\n                    />\r\n                );\r\n            }\r\n\r\n            return (\r\n                <div id=\"homepage\">\r\n                    <div id=\"navbar-container\">\r\n                        <div className=\"navbar\" id=\"menu\">\r\n                            <div><a onClick={this.hideMenu} href=\"#home\">Home</a></div>\r\n                            <div><a onClick={this.hideMenu} href=\"#preview\">Preview</a></div>\r\n                            <div><a onClick={this.hideMenu} href=\"#faq\">F.A.Q.</a></div>\r\n                            <div><a onClick={this.hideMenu} href=\"#glossary\">Glossary</a></div>\r\n                            <div><a onClick={this.hideMenu} href=\"#contact\">Contact</a></div>\r\n                            <div id=\"burger-icon-container\"><a onClick={this.toggleMenu} id=\"burgerIcon\">\r\n                                <i className=\"fa fa-bars\"/>\r\n                            </a></div>\r\n                        </div>\r\n                    </div>\r\n                    <div id=\"home\">\r\n                        <h1>Football<span style={{color: '#e4c000'}}>Slices</span></h1>\r\n                        <SearchBar type={3}/>\r\n                        <br/>\r\n                        <br/>\r\n                        <p>...or try using a sample player</p>\r\n                        <br/>\r\n                        <div id=\"sample-results\">\r\n                            {samplePlayerCards}\r\n                        </div>\r\n                    </div>\r\n                    <div id=\"preview\" className=\"homepage-section-container\">\r\n                        <div id=\"preview-section-container\">\r\n                            <div id=\"preview-text\">\r\n                                <h2>Preview</h2>\r\n                                <p>\r\n                                    FootballSlices are stats visualizations that are supported by an\r\n                                    entirely automated data retrieval process. The tool sifts through tens of thousands\r\n                                    of rows of numbers so you don't have to!\r\n                                </p>\r\n                                <p>\r\n                                    Explore a database of <span style={{color: 'orangered'}}>1,900+ players </span>\r\n                                    from <span style={{color: 'orangered'}}>Europe's top 5 leagues</span> from this\r\n                                    season, and hopefully previous seasons as well in the near future.\r\n                                </p>\r\n                                <p>\r\n                                    Simply choose from 5 positional templates, toggle the\r\n                                    competitions you'd like to include, and you can visualize statistics in seconds with\r\n                                    interactive percentile rank bar charts, powered by <a href=\"https://www.highcharts.com\" >Highcharts.js</a>.\r\n                                </p>\r\n                                <p><span className=\"accented-p\">Interpreting FootballSlices</span></p>\r\n                                <p>\r\n                                    FootballSlices consist of 12 wedges. The size of each wedge corresponds to the\r\n                                    percentile rank of the selected player with regards to the stat represented by the\r\n                                    wedge. The data labels show the raw per 90 value.\r\n                                </p>\r\n                                <p>\r\n                                    The colours are meant to help group similar-ish stats together\r\n                                    (as well as improve the charts' visual impact).\r\n                                </p>\r\n                                <ul>\r\n                                    <li><span style={{color: '#f15c80', fontWeight: 'bold'}}>Red</span> is for goal-scoring & shooting stats,</li>\r\n                                    <li><span style={{color: '#e4c000', fontWeight: 'bold'}}>Yellow</span> is for passing & chance creation,</li>\r\n                                    <li><span style={{color: '#90ed7d', fontWeight: 'bold'}}>Green</span> is for dribbling & ball retention</li>\r\n                                    <li>and <span style={{color: '#7cb5ec', fontWeight: 'bold'}}>Blue</span> is for defensive stats.</li>\r\n                                </ul>\r\n                            </div>\r\n                            <div id=\"preview-image\">\r\n                                <img src={mockUps} alt=\"mockups\"/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div id=\"faq\" style={{backgroundColor: '#f4f5f6'}} className=\"homepage-section-container\">\r\n                        <div id=\"faq-section-container\">\r\n                            <h2>F.A.Q.</h2>\r\n                            <div id=\"faq-container\">\r\n                                <div className=\"faq-item\">\r\n                                    <p><span className=\"accented-p\">Where does the data come from?</span></p>\r\n                                    <p><a href=\"https://www.whoscored.com\" >WhoScored.com</a> and <a href=\"https://www.fbref.com\">FBref.com</a>.</p>\r\n                                </div>\r\n                                <div className=\"faq-item\">\r\n                                    <p><span className=\"accented-p\">Will the dataset be expanded to include players that aren't in the top 5 leagues?</span></p>\r\n                                    <p>\r\n                                        Probably not. This is due to the fact that <a href=\"https://www.fbref.com\">FBref.com</a> only\r\n                                        has xG and xA data for a few competitions.\r\n                                    </p>\r\n                                </div>\r\n                                <div className=\"faq-item\">\r\n                                    <p><span className=\"accented-p\">I can't find a player, and they play in one of the top 5 leagues. Why?</span></p>\r\n                                    <p>\r\n                                        This is likely due to one of two reasons:\r\n                                    </p>\r\n                                    <ol>\r\n                                        <li>\r\n                                            The database only includes players who've made 4 or more league appearances this season.\r\n                                        </li>\r\n                                        <li>\r\n                                            Some players are listed under their nickname. For example, try searching for \"Chicharito\" instead\r\n                                            of \"Javier Hernandez\".\r\n                                        </li>\r\n                                    </ol>\r\n                                </div>\r\n                                <div className=\"faq-item\">\r\n                                    <p><span className=\"accented-p\">Can you add a feature to compare players on the same chart?</span></p>\r\n                                    <p>\r\n                                        Yes, that's in the works right now. Stay tuned!\r\n                                    </p>\r\n                                </div>\r\n                                <div className=\"faq-item\">\r\n                                    <p><span className=\"accented-p\">What is a percentile rank? How are they calculated for the FootballSlices?</span></p>\r\n                                    <p>\r\n                                        The percentile rank of a score is the percentage of scores within a total dataset\r\n                                        that are equal to or lower than the score. This is of course reversed for stats where\r\n                                        a lower value is better, such as the 'fouls committed per 90' stat.\r\n                                    </p>\r\n                                    <p>\r\n                                        The percentile ranks for FootballSlices are position-specific. For example,\r\n                                        selecting the 'forward' template compares the selected player only to other forwards in the\r\n                                        dataset. To obtain a list of players who play in each of the 5 template positions,\r\n                                        the tool uses the <a href=\"https://whoscored.com/Statistics\">\r\n                                        WhoScored.com player statistics table</a> to select all top 5 league players\r\n                                        who have accumulated 10 or more league starts this season in the said position. Their stats\r\n                                        from all competitions are then recorded in the dataset for their position.\r\n                                    </p>\r\n                                    <p>\r\n                                        For each chart, the percentile ranks of the selected player are then obtained by comparing\r\n                                        the player to all other scores in the dataset of the selected template position.\r\n                                        Note that the percentile ranks are not competition-specific. In other words, the selected\r\n                                        player's stats are always compared to other players' stats from all competitions, regardless\r\n                                        of which competitions are toggled for the selected player.\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div id=\"glossary\" className=\"homepage-section-container\">\r\n                        <div id=\"glossary-section-container\">\r\n                            <h2>Glossary</h2>\r\n                            <ul>\r\n                                <li>\r\n                                    <span className=\"accented-p\">Non-penalty Goals</span> [Opta] Goals that did not stem directly from penalty kicks.\r\n                                </li>\r\n                                <li>\r\n                                    <span className=\"accented-p\">Non-penalty xG</span> [StatsBomb] Expected goals that did not stem directly from penalty kicks.\r\n                                    Click <a href=\"https://fbref.com/en/expected-goals-model-explained/\">here</a> for a detailed explanation of StatsBomb's\r\n                                    expected goals model.\r\n                                </li>\r\n                                <li>\r\n                                    <span className=\"accented-p\">Conversion Rate</span> [Opta] The percentage of shots taken that resulted in goals, excluding penalties.\r\n                                </li>\r\n                                <li>\r\n                                    <span className=\"accented-p\">Shots on Target %</span> [Opta] The percentage of shots taken that were on target.\r\n                                </li>\r\n                                <li>\r\n                                    <span className=\"accented-p\">Assists</span> [Opta] Passes that directly led to a chance scored by a teammate.\r\n                                </li>\r\n                                <li>\r\n                                    <span className=\"accented-p\">xA</span> [StatsBomb] Expected goals that resulted from shot assists.\r\n                                </li>\r\n                                <li>\r\n                                    <span className=\"accented-p\">Passes into the Penalty Area</span> [StatsBomb] Completed passes into the penalty area, excluding set pieces.\r\n                                </li>\r\n                                <li>\r\n                                    <span className=\"accented-p\">Passes into the Final 1/3</span> [StatsBomb] Completed passes that entered the 1/3 of the pitch closest to the\r\n                                    opposition goal, excluding set pieces.\r\n                                </li>\r\n                                <li>\r\n                                    <span className=\"accented-p\">Pass Completion %</span> [Opta] The percentage of attempted passes that successfully found a teammate.\r\n                                </li>\r\n                                <li>\r\n                                    <span className=\"accented-p\">Completed Crosses</span> [Opta] Accurate passes from a wide position to a central attacking area.\r\n                                </li>\r\n                                <li>\r\n                                    <span className=\"accented-p\">Cross Completion %</span> [Opta] The percentage of attempted crosses that successfully found a teammate.\r\n                                </li>\r\n                                <li>\r\n                                    <span className=\"accented-p\">Completed Long Passes</span> [Opta] Accurate passes of 25 yards or more.\r\n                                </li>\r\n                                <li>\r\n                                    <span className=\"accented-p\">Long Pass Completion %</span> [Opta] The percentage of attempted long passes that successfully found a teammate.\r\n                                </li>\r\n                                <li>\r\n                                    <span className=\"accented-p\">Successful Dribbles</span> [Opta] Successful attempts at taking on a player and making it past them whilst retaining the ball.\r\n                                </li>\r\n                                <li>\r\n                                    <span className=\"accented-p\">Dribble Success %</span> [Opta] The percentage of attempted dribbles that were successful.\r\n                                </li>\r\n                                <li>\r\n                                    <span className=\"accented-p\">Times Dispossessed</span> [Opta] Number of times tackled by an opponent without attempting to dribble past them.\r\n                                </li>\r\n                                <li>\r\n                                    <span className=\"accented-p\">Interceptions</span> [Opta] Preventions of opponents' passes from reaching their teammates.\r\n                                </li>\r\n                                <li>\r\n                                    <span className=\"accented-p\">Tackles Won</span> [Opta] Successful dispossessions of opponents, whether the tackling player comes away with the ball or not.\r\n                                </li>\r\n                                <li>\r\n                                    <span className=\"accented-p\">Tackle Win %</span> [Opta] The percentage of attempted tackles that were won.\r\n                                </li>\r\n                                <li>\r\n                                    <span className=\"accented-p\">Fouls Committed</span> [Opta] Illegal manoeuvres that resulted in free kicks for the opposing team, excluding offsides.\r\n                                </li>\r\n                                <li>\r\n                                    <span className=\"accented-p\">Recoveries</span> [Opta] Successful tackles + interceptions.\r\n                                </li>\r\n                                <li>\r\n                                    <span className=\"accented-p\">Aerial Duels Won</span> [Opta] Headers won in direct contests with opponents\r\n                                </li>\r\n                                <li>\r\n                                    <span className=\"accented-p\">Aerial Duel Win %</span> [Opta] The percentage of attempted aerial duels that were won.\r\n                                </li>\r\n                                <li>\r\n                                    <span className=\"accented-p\">Blocks</span> [Opta] Preventions of opponents' shots from reaching the goal.\r\n                                </li>\r\n                                <li>\r\n                                    <span className=\"accented-p\">Clearances</span> [Opta] Actions by defending players that temporarily removed the attacking threat on their goal/that\r\n                                    effectively alleviated pressure on their goal.\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    <div id=\"contact\" style={{backgroundColor: '#f4f5f6'}} className=\"homepage-section-container\">\r\n                        <div id=\"contact-section-container\">\r\n                            <h2>Contact</h2>\r\n                            <p>\r\n                                For any bug reports, suggestions or questions, please feel free to reach out to me\r\n                            </p>\r\n                            <ul>\r\n                                <li>Email: <a href=\"mailto:footballslices@gmail.com\" >FootballSlices@gmail.com</a></li>\r\n                                <li>Twitter: <a href=\"https://twitter.com/DyslexicDdue\" >@DyslexicDdue</a></li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass ClubSearchResult extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            name: this.props.name,\r\n        };\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Link to={\"/search/\" + this.state.name + \"/all\"}>\r\n                <div tabIndex=\"0\" className=\"search-result\">\r\n                    <div className=\"name\">{this.state.name}</div>\r\n                </div>\r\n            </Link>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default (ClubSearchResult);","import React, { Component } from 'react';\r\n\r\nimport SearchBar from \"../components/SearchBar\";\r\nimport LoadingSpinner from \"../components/LoadingSpinner\";\r\nimport PlayerSearchResult from \"../components/PlayerSearchResult\";\r\n\r\nimport Select from 'react-select';\r\nimport ClubSearchResult from \"../components/ClubSearchResult\";\r\n\r\n\r\nclass Search extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        let query = props.match.params.query;\r\n        let searchByClub = props.match.params.searchByClub;\r\n        this.state = {\r\n            isLoading: false,\r\n            error: null,\r\n            query: query,\r\n            searchByClub: searchByClub,\r\n            playerSearchResults: [],\r\n            filteredPlayerSearchResults: [],\r\n            openMenu: false,\r\n            clubSearchResults: [],\r\n            names: [],\r\n            clubs: [],\r\n            nationalities: [],\r\n            reactSelectStyle: {\r\n                control: (base, state) => ({\r\n                    ...base,\r\n                    boxShadow: \"none\",\r\n                    '&:hover': {\r\n                        borderColor: '#B23535'\r\n                    },\r\n                    '&:focus': {\r\n                        borderColor: '#B23535'\r\n                    },\r\n                })\r\n            },\r\n            reactSelectTheme: theme => ({\r\n                ...theme,\r\n                colors: {\r\n                    ...theme.colors,\r\n                    primary25: \"pink\",\r\n                    primary: \"#e75453\"\r\n                }\r\n            })\r\n        };\r\n\r\n        this.filterByClub = this.filterByClub.bind(this);\r\n        this.filterByName = this.filterByName.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            isLoading: true\r\n        }, () => {\r\n            this.getSearchResults();\r\n        });\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps, nextContext) {\r\n        let { query, searchByClub } = nextProps.match.params;\r\n        this.setState({\r\n            isLoading: true,\r\n            query: query,\r\n            searchByClub: searchByClub\r\n        }, () => {\r\n            this.getSearchResults();\r\n        });\r\n    }\r\n\r\n\r\n    getSearchResults = () => {\r\n\r\n        let searchByClub = this.state.searchByClub;\r\n        let type;\r\n        if (searchByClub === undefined){\r\n            type = \"playersAndClubs\"\r\n        }\r\n        else {\r\n            type = \"playersByClub\"\r\n        }\r\n        fetch('/api/search', {\r\n            method: 'post',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                \"query\": this.state.query,\r\n                \"type\": type\r\n            })\r\n        })\r\n        .then(res => {\r\n            if (res.ok) {\r\n                return res.json()\r\n            }\r\n            else {\r\n               throw new Error(\"No results found\")\r\n            }\r\n        })\r\n        .then(searchResults => this.processSearchResults(searchResults))\r\n        .catch(error => this.setState({error, isLoading: false}));\r\n\r\n    };\r\n\r\n    processSearchResults(searchResults){\r\n        let playerSearchResults = searchResults['playerSearchResults'];\r\n        let clubSearchResults = searchResults['clubSearchResults'];\r\n\r\n        let names = [];\r\n        let clubs = [];\r\n        let nationalities = [];\r\n\r\n        for (let i=0; i<playerSearchResults.length; i++){\r\n            let currentResult = playerSearchResults[i];\r\n            let currentResultClubs = currentResult.club;\r\n            for (let i=0; i<currentResultClubs.length; i++){\r\n                let temp1 = {\r\n                    value: currentResult.club[i],\r\n                    label: currentResult.club[i],\r\n                };\r\n                if (!clubs.filter(e => e.value === temp1.value).length > 0){\r\n                    clubs.push(temp1);\r\n                }\r\n            }\r\n            let temp2 = {\r\n                value: currentResult.nationality,\r\n                label: currentResult.nationality,\r\n            };\r\n            let temp3 = {\r\n                value: currentResult.name,\r\n                label: currentResult.name\r\n            };\r\n            names.push(temp3);\r\n            if (!nationalities.filter(e => e.value === temp2.value).length > 0){\r\n                nationalities.push(temp2);\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            playerSearchResults: playerSearchResults,\r\n            filteredPlayerSearchResults: playerSearchResults,\r\n            clubSearchResults: clubSearchResults,\r\n            names: names,\r\n            clubs: clubs,\r\n            nationalities: nationalities,\r\n            isLoading: false,\r\n            error: null\r\n        })\r\n    }\r\n\r\n    filterByClub(selectedOption){\r\n\r\n        console.log(selectedOption);\r\n\r\n        let playerSearchResults = JSON.parse(JSON.stringify(this.state.playerSearchResults));\r\n        let filteredPlayerSearchResults = [];\r\n\r\n        if (selectedOption === null || selectedOption.length === 0){\r\n            filteredPlayerSearchResults = playerSearchResults;\r\n        }\r\n\r\n        else {\r\n            for (let i=0; i<playerSearchResults.length; i++){\r\n                for (let j=0; j<selectedOption.length; j++){\r\n                    if (playerSearchResults[i].club.includes(selectedOption[j].value)\r\n                        && !filteredPlayerSearchResults.includes(playerSearchResults[i])) {\r\n                        filteredPlayerSearchResults.push(playerSearchResults[i]);\r\n                    }\r\n                    // if (selectedOption[j].value === playerSearchResults[i].club){\r\n                    //     filteredPlayerSearchResults.push(playerSearchResults[i]);\r\n                    // }\r\n                }\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            filteredPlayerSearchResults: []\r\n        }, () => {\r\n            this.setState({\r\n                filteredPlayerSearchResults: filteredPlayerSearchResults\r\n            })\r\n        });\r\n\r\n    }\r\n\r\n    filterByName(selectedOption){\r\n\r\n        let playerSearchResults = JSON.parse(JSON.stringify(this.state.playerSearchResults));\r\n        let filteredPlayerSearchResults = [];\r\n\r\n        if (selectedOption === null){\r\n            filteredPlayerSearchResults = playerSearchResults;\r\n        }\r\n\r\n        else {\r\n            for (let i=0; i<playerSearchResults.length; i++){\r\n                if (playerSearchResults[i].name.toUpperCase().includes(selectedOption.value.toUpperCase())){\r\n                    filteredPlayerSearchResults.push(playerSearchResults[i]);\r\n                }\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            filteredPlayerSearchResults: []\r\n        }, () => {\r\n            this.setState({\r\n                filteredPlayerSearchResults: filteredPlayerSearchResults,\r\n                openMenu: false\r\n            })\r\n        });\r\n\r\n    }\r\n\r\n    hideMenu = () => {\r\n        this.setState({ openMenu: false });\r\n    };\r\n\r\n    handleInputChange = (query, { action }) => {\r\n        if (action === \"input-change\") {\r\n            let openMenu;\r\n            openMenu = query.length !== 0;\r\n            this.setState({ openMenu: openMenu });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        let {\r\n            error,\r\n            isLoading,\r\n            filteredPlayerSearchResults,\r\n            clubSearchResults,\r\n            clubs,\r\n            names,\r\n            searchByClub,\r\n            openMenu,\r\n            reactSelectStyle,\r\n            reactSelectTheme\r\n        } = this.state;\r\n\r\n        if (isLoading) {\r\n            return (\r\n                <LoadingSpinner/>\r\n            )\r\n        }\r\n\r\n        else if (error !== null) {\r\n            return (\r\n                <div id=\"main\">\r\n                    <SearchBar type={1} query={this.state.query}/>\r\n                    <div className=\"screen\" id=\"error-screen\">\r\n                        <p>{error.message}</p>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        else {\r\n\r\n            let playerCards = [];\r\n            for (let i=0; i<filteredPlayerSearchResults.length; i++){\r\n                let current = filteredPlayerSearchResults[i];\r\n                playerCards.push(\r\n                    <PlayerSearchResult\r\n                        page={\"search\"}\r\n                        name={current.name}\r\n                        club={current.club}\r\n                        nationality={current.nationality}\r\n                        URL={current.URL}\r\n                        all={current.all}\r\n                    />\r\n                );\r\n            }\r\n\r\n            let clubCards = [];\r\n            for (let i=0; i<clubSearchResults.length; i++){\r\n                let current = clubSearchResults[i];\r\n                clubCards.push(\r\n                    <ClubSearchResult\r\n                        name={current}\r\n                    />\r\n                )\r\n            }\r\n\r\n            let searchFilter;\r\n            let searchText;\r\n            // if (searchByClub === undefined){\r\n            //     searchText = <h3>Search results for <br/>\"{this.state.query}\"</h3>;\r\n            //     searchFilter =\r\n            //         <Select\r\n            //             styles={reactSelectStyle}\r\n            //             theme={reactSelectTheme}\r\n            //             placeholder={\"Filter players by club\"}\r\n            //             onChange={this.filterByClub}\r\n            //             isMulti\r\n            //             isClearable\r\n            //             options={clubs}\r\n            //         />\r\n            // }\r\n            //\r\n            // else {\r\n            //     searchText = <h3>Search results for <br/>\"player.club = {this.state.query}\"</h3>;\r\n            //     searchFilter =\r\n            //         <Select\r\n            //             styles={reactSelectStyle}\r\n            //             theme={reactSelectTheme}\r\n            //             placeholder={\"Filter players by name\"}\r\n            //             onChange={this.filterByName}\r\n            //             onInputChange={this.handleInputChange}\r\n            //             onBlur={this.hideMenu}\r\n            //             isClearable\r\n            //             menuIsOpen={openMenu}\r\n            //             options={names}\r\n            //             components={\r\n            //                 {\r\n            //                     DropdownIndicator: () => null,\r\n            //                     IndicatorSeparator: () => null\r\n            //                 }\r\n            //             }\r\n            //         />\r\n            // }\r\n\r\n            searchText = <h3>Search results for <br/>\"player.club = {this.state.query}\"</h3>;\r\n            searchFilter =\r\n                <Select\r\n                    styles={reactSelectStyle}\r\n                    theme={reactSelectTheme}\r\n                    placeholder={\"Filter players by name\"}\r\n                    onChange={this.filterByName}\r\n                    onInputChange={this.handleInputChange}\r\n                    onBlur={this.hideMenu}\r\n                    isClearable\r\n                    menuIsOpen={openMenu}\r\n                    options={names}\r\n                    components={\r\n                        {\r\n                            DropdownIndicator: () => null,\r\n                            IndicatorSeparator: () => null\r\n                        }\r\n                    }\r\n                />\r\n\r\n            return (\r\n                <div id=\"main\">\r\n                    <SearchBar type={1} query={this.state.query}/>\r\n                    <div className=\"screen\" id=\"search-screen\">\r\n                        <div className=\"filter\" id=\"search-filters\">\r\n                            {searchText}\r\n                            <div id=\"search-filter-inputs\">\r\n                                {searchFilter}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"result\" id=\"search-results\">\r\n                            {searchByClub === undefined ? <h3>Players</h3> : null}\r\n                            {playerCards.length === 0 && searchByClub === undefined ? <p>No results found</p> : null}\r\n                            <div id=\"player-search-results\">\r\n                                {playerCards}\r\n                            </div>\r\n                            {searchByClub === undefined ? <h3 style={{marginTop: '20px'}}>Clubs</h3> : null}\r\n                            {clubCards.length === 0 && searchByClub === undefined ? <p>No results found</p> : null}\r\n                            <div id=\"club-search-results\">\r\n                                {clubCards}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default Search;\r\n","import React, { Component } from 'react';\r\n\r\nimport SearchBar from \"../components/SearchBar\";\r\nimport LoadingSpinner from \"../components/LoadingSpinner\";\r\n\r\nimport domtoimage from 'dom-to-image';\r\nimport { saveAs } from 'file-saver';\r\n\r\nimport Highcharts from 'highcharts/highstock'\r\nimport HighchartsMore from 'highcharts/highcharts-more'\r\nimport HighchartsParallel from 'highcharts/modules/parallel-coordinates'\r\nimport HighchartsReact from 'highcharts-react-official'\r\nHighchartsMore(Highcharts);\r\nHighchartsParallel(Highcharts);\r\n\r\nclass Stats extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        let categories = {\r\n            \"FW\": [\r\n                'Non-Penalty Goals',\r\n                'Non-Penalty xG',\r\n                'Conversion Rate',\r\n                'Shots on Target %',\r\n                'Assists',\r\n                'xA',\r\n                'Passes into the Penalty Area',\r\n                'Pass Completion %',\r\n                'Successful Dribbles',\r\n                'Dribble Success %',\r\n                'Times Dispossessed',\r\n                'Recoveries',\r\n            ],\r\n            \"AM\": [\r\n                'Non-Penalty Goals',\r\n                'Non-Penalty xG',\r\n                'Assists',\r\n                'xA',\r\n                'Passes into the Penalty Area',\r\n                'Pass Completion %',\r\n                'Completed Crosses',\r\n                'Cross Completion %',\r\n                'Successful Dribbles',\r\n                'Dribble Success %',\r\n                'Times Dispossessed',\r\n                'Recoveries',\r\n            ],\r\n            \"CM\": [\r\n                'Non-Penalty Goals+Assists',\r\n                'Non-Penalty xG+xA',\r\n                'Passes into the Final 1/3',\r\n                'Pass Completion %',\r\n                'Completed Long Passes',\r\n                'Long Pass Completion %',\r\n                'Successful Dribbles',\r\n                'Dribble Success %',\r\n                'Interceptions',\r\n                'Tackles Won',\r\n                'Tackle Win %',\r\n                'Fouls Committed'\r\n            ],\r\n            \"FB\": [\r\n                'Assists',\r\n                'xA',\r\n                'Passes into the Final 1/3',\r\n                'Pass Completion %',\r\n                'Completed Crosses',\r\n                'Cross Completion %',\r\n                'Successful Dribbles',\r\n                'Dribble Success %',\r\n                'Interceptions',\r\n                'Tackles Won',\r\n                'Tackle Win %',\r\n                'Fouls Committed'\r\n            ],\r\n            \"CB\": [\r\n                'Passes into the Final 1/3',\r\n                'Pass Completion %',\r\n                'Completed Long Passes',\r\n                'Long Pass Completion %',\r\n                'Interceptions',\r\n                'Tackles Won',\r\n                'Tackle Win %',\r\n                'Fouls Committed',\r\n                'Aerial Duels Won',\r\n                'Aerial Duel Win %',\r\n                'Blocks',\r\n                'Clearances'\r\n            ],\r\n            \"N/A\": [\r\n                \"-\",\r\n                \"-\",\r\n                \"-\",\r\n                \"-\",\r\n                \"-\",\r\n                \"-\",\r\n                \"-\",\r\n                \"-\",\r\n                \"-\",\r\n                \"-\",\r\n                \"-\",\r\n                \"-\"\r\n            ]\r\n\r\n        };\r\n        this.state = {\r\n            isLoading: false,\r\n            allStats: {},\r\n            percentiles: this.props.percentiles,\r\n            allCompetitions: [],\r\n            selectedCompetitions: [],\r\n            categories: categories,\r\n            selectedCategories: null,\r\n            template: null,\r\n            labelType: \"raw\",\r\n            name: '',\r\n            age: 0,\r\n            url: '',\r\n            isAll: false,\r\n            multipleClubs: false,\r\n            isMobile: this.props.isMobile,\r\n            creditsPosition: \"right\",\r\n            animation: true,\r\n            fontSizes: {\r\n                title: this.props.isMobile === true ? '4vw' : '2em',\r\n                subtitle: this.props.isMobile === true ? '2.7vw' : '1.4em',\r\n                noData: this.props.isMobile === true ? '2.7vw' : '1.35em',\r\n                xAxisLabels: this.props.isMobile === true ? '2.3vw' : '1.15em',\r\n                dataLabels: this.props.isMobile === true ? '2.3vw' : '1.25em',\r\n                dataLabelsOutline: this.props.isMobile === true ? '0.3vw' : '0.2em',\r\n                tooltipHeader: this.props.isMobile === true ? '2.3vw' : '1em',\r\n                tooltip: this.props.isMobile === true ? '2.3vw' : '1.25em',\r\n                credits: this.props.isMobile === true ? '2vw' : '1.15em',\r\n                yAxisLabels: this.props.isMobile === true ? '1vw' : '0.5em',\r\n            }\r\n        };\r\n\r\n        this.processStats = this.processStats.bind(this);\r\n        this.changeTemplate = this.changeTemplate.bind(this);\r\n        this.changeSelectedCompetitions = this.changeSelectedCompetitions.bind(this);\r\n        this.changeLabelType = this.changeLabelType.bind(this);\r\n        this.selectAllCompetitions = this.selectAllCompetitions.bind(this);\r\n        this.clearAllCompetitions = this.clearAllCompetitions.bind(this);\r\n        this.toggleCreditsPosition = this.toggleCreditsPosition.bind(this);\r\n        this.exportAsImage = this.exportAsImage.bind(this);\r\n        this.filterStats = this.filterStats.bind(this);\r\n        this.calculateChartInput = this.calculateChartInput.bind(this);\r\n        this.percentRank = this.percentRank.bind(this);\r\n        this.roundNumbers = this.roundNumbers.bind(this);\r\n        this.ordinalSuffix = this.ordinalSuffix.bind(this);\r\n        this.insertChartInput = this.insertChartInput.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            isLoading: true\r\n        }, () => {\r\n            this.getStats();\r\n        });\r\n\r\n        this.chartRef = this.chartRef = React.createRef();\r\n    }\r\n\r\n    getStats = () => {\r\n        const { URL } = this.props.match.params;\r\n\r\n        fetch('/api/stats', {\r\n            method: 'post',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                \"URL\": URL\r\n            })\r\n        })\r\n        .then(res => res.json())\r\n        .then(response => this.processStats(response))\r\n    };\r\n\r\n    processStats(response) {\r\n        let categories = this.state.categories;\r\n        let multipleClubs = (response.club.length !== 1);\r\n        let selectedCategories = categories[response.position];\r\n        this.setState({\r\n            url: response.url,\r\n            name: response.name,\r\n            age: response.age,\r\n            club: response.club[0],\r\n            template: response.position,\r\n            selectedCategories: selectedCategories,\r\n            lastUpdated: response.lastUpdated,\r\n            allStats: response.stats,\r\n            allCompetitions: Object.keys(response.stats),\r\n            selectedCompetitions: Object.keys(response.stats),\r\n            isLoading: false,\r\n            multipleClubs: multipleClubs\r\n        }, () => {\r\n\r\n        });\r\n    }\r\n\r\n    changeSelectedCompetitions(event){\r\n\r\n        let selectedCompetitions = this.state.selectedCompetitions;\r\n        let clickedCompetition = event.target.value;\r\n\r\n        if (selectedCompetitions.includes(clickedCompetition)){\r\n            selectedCompetitions.splice(selectedCompetitions.indexOf(clickedCompetition), 1);\r\n        }\r\n        else{\r\n            selectedCompetitions.push(clickedCompetition);\r\n        }\r\n\r\n        this.setState({\r\n            selectedCompetitions: selectedCompetitions,\r\n            animation: true\r\n        });\r\n\r\n    }\r\n\r\n    selectAllCompetitions(event){\r\n\r\n        let allCompetitions = JSON.parse(JSON.stringify(this.state.allCompetitions));\r\n\r\n        this.setState({\r\n            selectedCompetitions: allCompetitions\r\n        });\r\n\r\n    }\r\n\r\n    clearAllCompetitions(event){\r\n\r\n        this.setState({\r\n            selectedCompetitions: []\r\n        });\r\n\r\n    }\r\n\r\n    toggleCreditsPosition(event){\r\n\r\n        let oldPosition = this.state.creditsPosition;\r\n        let newPosition;\r\n\r\n        if (oldPosition === \"right\"){\r\n            newPosition = \"center\"\r\n        }\r\n        else {\r\n            newPosition = \"right\"\r\n        }\r\n\r\n        this.setState({\r\n            animation: false,\r\n            creditsPosition: newPosition\r\n        })\r\n\r\n    }\r\n\r\n    exportAsImage() {\r\n\r\n        const isMobile = this.state.isMobile;\r\n        const name = this.state.name;\r\n\r\n        const scale = isMobile ? 1 : 2;\r\n        let node = document.getElementsByClassName('highcharts-container')[0];\r\n        // let node = document.getElementById('chart');\r\n\r\n        if (isMobile) {\r\n            domtoimage.toPng(node, {\r\n                bgcolor: '#fafbfc',\r\n                style: {\r\n                    'background-size': '20%'\r\n                }\r\n            })\r\n            .then(function (blob) {\r\n                window.saveAs(blob, `${name.replace(\" \", \"-\")}.png`);\r\n            })\r\n                .catch(function (error) {\r\n                    alert(\"An error occurred while downloading the PNG. Please refresh the page and try again\")\r\n                });\r\n        }\r\n        else {\r\n            //scale and position the background (the watermark)\r\n            let backgroundSize = 15/scale;\r\n\r\n            //get the width and height of the background in pixels\r\n            let backgroundWidth = (backgroundSize/100) * node.offsetWidth;\r\n            let backgroundHeight = (9/16) * backgroundWidth;\r\n\r\n            //get the height of the background as a percentage of the total height of the chart\r\n            let backgroundHeightRatio = (backgroundHeight / node.offsetHeight) * 100;\r\n\r\n            //get the aspect ratio of the current dimensions of the chart\r\n            let nodeAspectRatio = node.offsetWidth / node.offsetHeight;\r\n\r\n            domtoimage.toPng(node, {\r\n                bgcolor: '#fafbfc',\r\n                height: node.offsetHeight * scale,\r\n                width: node.offsetWidth * scale,\r\n                style: {\r\n                    transform: `scale(${scale}) translate(${node.offsetWidth / 2 / scale}px, ${node.offsetHeight / 2 / scale}px)`,\r\n                    //set the background position after the 4x scaling\r\n                    //For the Y position, we start with 50% (bottom left), and then adjust based on the height of the watermark and the desired padding\r\n                    'background-position': `0.3% ${50-(0.3*nodeAspectRatio)-((backgroundHeightRatio+(0.3*nodeAspectRatio))/2)}%`,\r\n                    'background-size': `${backgroundSize}%`\r\n                }\r\n            })\r\n            .then(function (blob) {\r\n                window.saveAs(blob, `${name.replace(\" \", \"-\")}.png`);\r\n            })\r\n            .catch(function (error) {\r\n                alert(\"An error occurred while downloading the PNG. Please refresh the page and try again\")\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    changeTemplate(event){\r\n\r\n        let template = event.target.value;\r\n\r\n        this.setState({\r\n            template: template,\r\n            animation: true\r\n        }, () => {\r\n            this.setCategories();\r\n        });\r\n\r\n    }\r\n\r\n    setCategories() {\r\n        let template = this.state.template;\r\n        let categories = this.state.categories;\r\n        let selectedCategories = categories[template];\r\n\r\n        this.setState({\r\n            selectedCategories: selectedCategories\r\n        })\r\n\r\n    }\r\n\r\n    changeLabelType(event){\r\n\r\n        let labelType = event.target.value;\r\n\r\n        this.setState({\r\n            labelType: labelType,\r\n            animation: false\r\n        })\r\n\r\n    }\r\n\r\n    filterStats(stats){\r\n        let filteredStats = {};\r\n        let selectedCompetitions = this.state.selectedCompetitions;\r\n        for (let competition in stats){\r\n            if (selectedCompetitions.includes(competition)) {\r\n                for (let stat in stats[competition]) {\r\n                    if (!(stat in filteredStats)) {\r\n                        filteredStats[stat] = stats[competition][stat];\r\n                    } else {\r\n                        filteredStats[stat] += stats[competition][stat];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return filteredStats;\r\n    }\r\n\r\n    calculateChartInput(filteredStats, percentileArrays){\r\n        let template = this.state.template;\r\n        let statsPer90 = {};\r\n        let percentiles = {};\r\n        switch (template){\r\n            case \"FW\":\r\n                statsPer90['goals'] = filteredStats['goals'] / (filteredStats['minutes']/90);\r\n                // statsPer90['shots'] = (filteredStats['shots']  - filteredStats['penaltiesTaken']) / (filteredStats['minutes']/90);\r\n                statsPer90['xG'] = filteredStats['xG'] / (filteredStats['minutes']/90);\r\n                statsPer90['conversionRate'] = (filteredStats['goals'] / (filteredStats['shots']  - filteredStats['penaltiesTaken'])) * 100;\r\n                statsPer90['shotsOnTarget'] = ((filteredStats['shotsOnTarget'] - filteredStats['penaltiesTaken']) / (filteredStats['shots'] - filteredStats['penaltiesTaken'])) * 100;\r\n                statsPer90['assists'] = filteredStats['assists'] / (filteredStats['minutes']/90);\r\n                // statsPer90['keyPasses'] = filteredStats['keyPasses'] / (filteredStats['minutes']/90);\r\n                statsPer90['xA'] = filteredStats['xA'] / (filteredStats['minutes']/90);\r\n                // statsPer90['succPasses'] = filteredStats['succPasses'] / (filteredStats['minutes']/90);\r\n                statsPer90['PPA'] = filteredStats['PPA'] / (filteredStats['minutes']/90);\r\n                statsPer90['passingRate'] = (filteredStats['succPasses'] / filteredStats['totalPasses']) * 100;\r\n                statsPer90['succDribbles'] = filteredStats['succDribbles'] / (filteredStats['minutes']/90);\r\n                statsPer90['dribbleRate'] = (filteredStats['succDribbles'] / filteredStats['totalDribbles']) * 100;\r\n                statsPer90['possessionLosses'] = filteredStats['possessionLosses'] / (filteredStats['minutes']/90);\r\n                statsPer90['recoveries'] = (filteredStats['tackles'] / (filteredStats['minutes']/90)) + (filteredStats['interceptions'] / (filteredStats['minutes']/90));\r\n                for (let key in statsPer90){\r\n                    percentiles[key] = this.percentRank(percentileArrays['fw'][key], statsPer90[key]) * 100\r\n                }\r\n                percentiles['possessionLosses'] = 100 - percentiles['possessionLosses'];\r\n                break;\r\n            case \"AM\":\r\n                statsPer90['goals'] = filteredStats['goals'] / (filteredStats['minutes']/90);\r\n                // statsPer90['shots'] = (filteredStats['shots']  - filteredStats['penaltiesTaken']) / (filteredStats['minutes']/90);\r\n                statsPer90['xG'] = filteredStats['xG'] / (filteredStats['minutes']/90);\r\n                statsPer90['assists'] = filteredStats['assists'] / (filteredStats['minutes']/90);\r\n                // statsPer90['keyPasses'] = filteredStats['keyPasses'] / (filteredStats['minutes']/90);\r\n                statsPer90['xA'] = filteredStats['xA'] / (filteredStats['minutes']/90);\r\n                // statsPer90['succPasses'] = filteredStats['succPasses'] / (filteredStats['minutes']/90);\r\n                statsPer90['PPA'] = filteredStats['PPA'] / (filteredStats['minutes']/90);\r\n                statsPer90['passingRate'] = (filteredStats['succPasses'] / filteredStats['totalPasses']) * 100;\r\n                statsPer90['succCrosses'] = filteredStats['succCrosses'] / (filteredStats['minutes']/90);\r\n                statsPer90['crossRate'] = (filteredStats['succCrosses'] / filteredStats['totalCrosses']) * 100;\r\n                statsPer90['succDribbles'] = filteredStats['succDribbles'] / (filteredStats['minutes']/90);\r\n                statsPer90['dribbleRate'] = (filteredStats['succDribbles'] / filteredStats['totalDribbles']) * 100;\r\n                statsPer90['possessionLosses'] = filteredStats['possessionLosses'] / (filteredStats['minutes']/90);\r\n                statsPer90['recoveries'] = (filteredStats['tackles'] / (filteredStats['minutes']/90)) + (filteredStats['interceptions'] / (filteredStats['minutes']/90));\r\n                for (let key in statsPer90){\r\n                    percentiles[key] = this.percentRank(percentileArrays['am'][key], statsPer90[key]) * 100\r\n                }\r\n                percentiles['possessionLosses'] = 100 - percentiles['possessionLosses'];\r\n                break;\r\n            case \"CM\":\r\n                statsPer90['goalsPlusAssists'] = (filteredStats['goals'] + filteredStats['assists']) / (filteredStats['minutes']/90);\r\n                // statsPer90['keyPasses'] = filteredStats['keyPasses'] / (filteredStats['minutes']/90);\r\n                // statsPer90['xA'] = filteredStats['xA'] / (filteredStats['minutes']/90);\r\n                statsPer90['xGPlusxA'] = (filteredStats['xG'] + filteredStats['xA']) / (filteredStats['minutes']/90);\r\n                // statsPer90['succPasses'] = filteredStats['succPasses'] / (filteredStats['minutes']/90);\r\n                statsPer90['PFT'] = filteredStats['PFT'] / (filteredStats['minutes']/90);\r\n                statsPer90['passingRate'] = (filteredStats['succPasses'] / filteredStats['totalPasses']) * 100;\r\n                statsPer90['succLongPasses'] = filteredStats['succLongPasses'] / (filteredStats['minutes']/90);\r\n                statsPer90['longPassingRate'] = (filteredStats['succLongPasses'] / filteredStats['totalLongPasses']) * 100;\r\n                statsPer90['succDribbles'] = filteredStats['succDribbles'] / (filteredStats['minutes']/90);\r\n                statsPer90['dribbleRate'] = (filteredStats['succDribbles'] / filteredStats['totalDribbles']) * 100;\r\n                statsPer90['interceptions'] = (filteredStats['interceptions'] / (filteredStats['minutes']/90));\r\n                statsPer90['tackles'] = (filteredStats['tackles'] / (filteredStats['minutes']/90));\r\n                statsPer90['tackleRate'] = (filteredStats['tackles'] / (filteredStats['tackles'] + filteredStats['dribbledPast'])) *100;\r\n                statsPer90['fouls'] = filteredStats['fouls'] / (filteredStats['minutes']/90);\r\n                for (let key in statsPer90){\r\n                    percentiles[key] = this.percentRank(percentileArrays['cm'][key], statsPer90[key]) * 100\r\n                }\r\n                percentiles['fouls'] = 100 - percentiles['fouls'];\r\n                break;\r\n            case \"FB\":\r\n                statsPer90['assists'] = filteredStats['assists'] / (filteredStats['minutes']/90);\r\n                // statsPer90['keyPasses'] = filteredStats['keyPasses'] / (filteredStats['minutes']/90);\r\n                statsPer90['xA'] = filteredStats['xA'] / (filteredStats['minutes']/90);\r\n                // statsPer90['succPasses'] = filteredStats['succPasses'] / (filteredStats['minutes']/90);\r\n                statsPer90['PFT'] = filteredStats['PFT'] / (filteredStats['minutes']/90);\r\n                statsPer90['passingRate'] = (filteredStats['succPasses'] / filteredStats['totalPasses']) * 100;\r\n                statsPer90['succCrosses'] = filteredStats['succCrosses'] / (filteredStats['minutes']/90);\r\n                statsPer90['crossRate'] = (filteredStats['succCrosses'] / filteredStats['totalCrosses']) * 100;\r\n                statsPer90['succDribbles'] = filteredStats['succDribbles'] / (filteredStats['minutes']/90);\r\n                statsPer90['dribbleRate'] = (filteredStats['succDribbles'] / filteredStats['totalDribbles']) * 100;\r\n                statsPer90['interceptions'] = (filteredStats['interceptions'] / (filteredStats['minutes']/90));\r\n                statsPer90['tackles'] = (filteredStats['tackles'] / (filteredStats['minutes']/90));\r\n                statsPer90['tackleRate'] = (filteredStats['tackles'] / (filteredStats['tackles'] + filteredStats['dribbledPast'])) *100;\r\n                statsPer90['fouls'] = filteredStats['fouls'] / (filteredStats['minutes']/90);\r\n                for (let key in statsPer90){\r\n                    percentiles[key] = this.percentRank(percentileArrays['fb'][key], statsPer90[key]) * 100\r\n                }\r\n                percentiles['fouls'] = 100 - percentiles['fouls'];\r\n                break;\r\n            case \"CB\":\r\n                // statsPer90['succPasses'] = filteredStats['succPasses'] / (filteredStats['minutes']/90);\r\n                statsPer90['PFT'] = filteredStats['PFT'] / (filteredStats['minutes']/90);\r\n                statsPer90['passingRate'] = (filteredStats['succPasses'] / filteredStats['totalPasses']) * 100;\r\n                statsPer90['succLongPasses'] = filteredStats['succLongPasses'] / (filteredStats['minutes']/90);\r\n                statsPer90['longPassingRate'] = (filteredStats['succLongPasses'] / filteredStats['totalLongPasses']) * 100;\r\n                statsPer90['interceptions'] = (filteredStats['interceptions'] / (filteredStats['minutes']/90));\r\n                statsPer90['tackles'] = (filteredStats['tackles'] / (filteredStats['minutes']/90));\r\n                statsPer90['tackleRate'] = (filteredStats['tackles'] / (filteredStats['tackles'] + filteredStats['dribbledPast'])) *100;\r\n                statsPer90['fouls'] = filteredStats['fouls'] / (filteredStats['minutes']/90);\r\n                statsPer90['succAerialDuels'] = filteredStats['succAerialDuels'] / (filteredStats['minutes']/90);\r\n                statsPer90['aerialDuelRate'] = (filteredStats['succAerialDuels'] / filteredStats['totalAerialDuels']) * 100;\r\n                statsPer90['blocks'] = (filteredStats['blocks'] / (filteredStats['minutes']/90));\r\n                statsPer90['clearances'] = filteredStats['clearances'] / (filteredStats['minutes']/90);\r\n                for (let key in statsPer90){\r\n                    percentiles[key] = this.percentRank(percentileArrays['cb'][key], statsPer90[key]) * 100\r\n                }\r\n                percentiles['fouls'] = 100 - percentiles['fouls'];\r\n                break;\r\n            case \"N/A\":\r\n                statsPer90['goals'] = 0;\r\n                statsPer90['xG'] = 0;\r\n                statsPer90['conversionRate'] = 0;\r\n                statsPer90['shotsOnTarget'] = 0;\r\n                statsPer90['assists'] = 0;\r\n                statsPer90['xA'] = 0;\r\n                statsPer90['PPA'] = 0;\r\n                statsPer90['passingRate'] = 0;\r\n                statsPer90['succDribbles'] = 0;\r\n                statsPer90['dribbleRate'] = 0;\r\n                statsPer90['possessionLosses'] = 0;\r\n                statsPer90['recoveries'] = 0;\r\n                for (let key in statsPer90){\r\n                    percentiles[key] = 0\r\n                }\r\n                break;\r\n        }\r\n        return this.insertChartInput(statsPer90, percentiles);\r\n    }\r\n\r\n    percentRank(array, value) {\r\n        if (!isFinite(value)){\r\n            value = 0;\r\n        }\r\n        for (let i = 0, length = array.length; i < length; i++) {\r\n            if (value < array[i]) {\r\n                while (i < length && value === array[i]) i++;\r\n                if (i === 0) return 0;\r\n                if (value !== array[i-1]) {\r\n                    i += (value - array[i-1]) / (array[i] - array[i-1]);\r\n                }\r\n                return i / length;\r\n            }\r\n        }\r\n        return 1;\r\n    }\r\n\r\n    roundNumbers(someStats, precision){\r\n        for (let stat in someStats){\r\n            if (isFinite(someStats[stat])) {\r\n                someStats[stat] = Math.round(someStats[stat] * (10**precision)) / (10**precision);\r\n            }\r\n            else {\r\n                someStats[stat] = 0;\r\n            }\r\n        }\r\n        return someStats;\r\n    }\r\n\r\n    ordinalSuffix(i) {\r\n        var j = i % 10,\r\n            k = i % 100;\r\n        if (j === 1 && k !== 11) {\r\n            return i + \"st\";\r\n        }\r\n        if (j === 2 && k !== 12) {\r\n            return i + \"nd\";\r\n        }\r\n        if (j === 3 && k !== 13) {\r\n            return i + \"rd\";\r\n        }\r\n        return i + \"th\";\r\n    }\r\n\r\n    insertChartInput(statsPer90, percentiles) {\r\n        let template = this.state.template;\r\n        let colors = [];\r\n        if (template === \"FW\"){\r\n            colors = [5, 5, 5, 5, 6, 6, 6, 6, 2, 2, 2, 0];\r\n        }\r\n        else if (template === \"AM\"){\r\n            colors = [5, 5, 6, 6, 6, 6, 6, 6, 2, 2, 2, 0];\r\n        }\r\n        else if (template === \"CM\"){\r\n            colors = [8, 8, 6, 6, 6, 6, 2, 2, 0, 0, 0, 0];\r\n        }\r\n        else if (template === \"FB\"){\r\n            colors = [6, 6, 6, 6, 6, 6, 2, 2, 0, 0, 0, 0];\r\n        }\r\n        else if (template === \"CB\") {\r\n            colors = [6, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0, 0];\r\n        }\r\n        else {\r\n            colors = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n        }\r\n        statsPer90 = this.roundNumbers(statsPer90, 2);\r\n        percentiles = this.roundNumbers(percentiles, 0);\r\n        let chartInput = [];\r\n        let i = 0;\r\n        for (let key in percentiles){\r\n            chartInput[i] = {\r\n                y: percentiles[key],\r\n                percentile: this.ordinalSuffix(percentiles[key]),\r\n                p90: statsPer90[key],\r\n                color: Highcharts.Color(Highcharts.getOptions().colors[colors[i]]).setOpacity(0.85).get()\r\n            };\r\n            i++;\r\n        }\r\n        return chartInput;\r\n    }\r\n\r\n    render() {\r\n\r\n        let {\r\n            name,\r\n            age,\r\n            url,\r\n            club,\r\n            lastUpdated,\r\n            selectedCompetitions,\r\n            template,\r\n            selectedCategories,\r\n            labelType,\r\n            allStats,\r\n            percentiles,\r\n            isLoading,\r\n            multipleClubs,\r\n            fontSizes,\r\n            creditsPosition,\r\n            animation,\r\n            isMobile\r\n        } = this.state;\r\n\r\n        if (isLoading) {\r\n            return (\r\n                <LoadingSpinner/>\r\n            )\r\n        }\r\n\r\n        else {\r\n            let allCompetitions = this.state.allCompetitions;\r\n            let competitionLabels = [];\r\n            for (let i=0; i<allCompetitions.length; i++){\r\n                let current = allCompetitions[i];\r\n                let isIncluded = selectedCompetitions.includes(current);\r\n                let label = current;\r\n                if (!multipleClubs){\r\n                    label = label.substring(0, label.indexOf(\"|\")-1)\r\n                }\r\n                competitionLabels.push(\r\n                    <label className={isIncluded ? \"selected-label\" : null}>\r\n                        <input className=\"competition\"\r\n                               type=\"checkbox\"\r\n                               value={current}\r\n                               onChange={this.changeSelectedCompetitions}\r\n                               checked={isIncluded}\r\n                        /> {\"  \" + label}\r\n                    </label>\r\n                )\r\n            }\r\n\r\n            if (percentiles.length !== 0 && Object.keys(allStats).length !== 0 && selectedCategories !== []) {\r\n\r\n                let selectedStats = this.filterStats(allStats);\r\n                let series;\r\n                let subtitle = \"\";\r\n                if (selectedCompetitions.length !== 0){\r\n                    subtitle = `Age: ${age} ║ Minutes Played: ${selectedStats['minutes'].toLocaleString()}<br/>`;\r\n                    let chartInput = this.calculateChartInput(selectedStats, percentiles);\r\n                    series = [chartInput];\r\n                    switch (template) {\r\n                        case \"FW\":\r\n                            subtitle += \"vs Top-5 League Players with 10+ Starts as Forwards<br/>\";\r\n                            break;\r\n                        case \"AM\":\r\n                            subtitle += \"vs Top-5 League Players with 10+ Starts as Attacking Midfielders / Wingers<br/>\";\r\n                            break;\r\n                        case \"CM\":\r\n                            subtitle += \"vs Top-5 League Players with 10+ Starts as Central / Defensive Midfielders<br/>\";\r\n                            break;\r\n                        case \"FB\":\r\n                            subtitle += \"vs Top-5 League Players with 10+ Starts as Full-backs<br/>\";\r\n                            break;\r\n                        case \"CB\":\r\n                            subtitle += \"vs Top-5 League Players with 10+ Starts as Center-backs<br/>\";\r\n                            break;\r\n                        case \"N/A\":\r\n                            subtitle += \"No template selected<br/>\"\r\n                    }\r\n                    if (template !== \"N/A\"){\r\n                        subtitle += \"Percentile Rank Bars w/ Per 90 Stats<br/>\";\r\n                    }\r\n                    else {\r\n                        subtitle += \"-<br/>\"\r\n                    }\r\n                }\r\n\r\n                else {\r\n                    series = [];\r\n                    subtitle = \"-<br>-<br>-\";\r\n                }\r\n\r\n                let credits = `Last Updated: ${lastUpdated} UTC ${isMobile ? '<br/>.<br/>' : '<br/>'}Sources: Opta (via WhoScored.com) & StatsBomb (via FBref.com)`;\r\n                let creditsOffset = isMobile ? -40 : -20;\r\n\r\n                var options = {\r\n                    chart: {\r\n                        animation: animation,\r\n                        backgroundColor: 'rgba(0, 0, 0, 0)',\r\n                        style: {\r\n                            fontFamily: 'sans-serif'\r\n                        },\r\n                        parallelCoordinates: true,\r\n                        parallelAxes: {\r\n                            labels: {\r\n                                enabled: false,\r\n                                style: {\r\n                                    color: '#444444',\r\n                                    fontSize: fontSizes['yAxisLabels'],\r\n                                }\r\n                            },\r\n                            gridZIndex: 5,\r\n                            lineWidth: 0,\r\n                            endOnTick: true,\r\n                            showFirstLabel: false,\r\n                            showLastLabel: true,\r\n                            min: -15,\r\n                            max: 100,\r\n                            tickPositions: [-15, 0, 25, 50, 75, 100]\r\n                        },\r\n                        polar: true,\r\n                        type: 'column',\r\n                        // plotBackgroundColor: '#F5F6F7',\r\n                        // plotShadow: true,\r\n                        // hideDelay: 0,\r\n                        spacingLeft: 0,\r\n                        spacingRight: 0,\r\n                        marginLeft: 90,\r\n                        marginRight: 90,\r\n                        marginBottom: (creditsPosition === \"right\" && !isMobile) ? 30 : 60,\r\n                        events: {\r\n                            load: function() {\r\n                                this.title.element.onclick = function() {\r\n                                    window.open(url, '_blank');\r\n                                }\r\n                            },\r\n                        }\r\n                    },\r\n                    credits: {\r\n                        text: credits,\r\n                        position: {\r\n                            align: creditsPosition,\r\n                            y: creditsOffset\r\n                        },\r\n                        style: {\r\n                            fontSize: fontSizes['credits']\r\n                        },\r\n                        href: ''\r\n                    },\r\n                    plotOptions: {\r\n                        series: {\r\n                            dataLabels: {\r\n                                enabled: template !== \"N/A\",\r\n                                style: {\r\n                                    // color: \"black\",\r\n                                    fontWeight: 'bold',\r\n                                    fontSize: fontSizes['dataLabels'],\r\n                                    textOutline: fontSizes['dataLabelsOutline'] + \" #fafbfc\"\r\n                                },\r\n                                format: labelType === \"raw\" ? '{point.p90}' : '{point.percentile}',\r\n                                padding: 0,\r\n                                allowOverlap: true,\r\n                                z: 7\r\n                            },\r\n                            // shadow: true\r\n                        },\r\n                    },\r\n                    title: {\r\n                        text: name + \", 19/20\",\r\n                        style: {\r\n                            color: '#e75453',\r\n                            fontSize: fontSizes['title'],\r\n                            fontWeight: 'bold',\r\n                        },\r\n                        margin: 35\r\n                    },\r\n                    pane: {\r\n                        startAngle: -15\r\n                    },\r\n                    lang: {\r\n                        noData: \"Select a competition\"\r\n                    },\r\n                    noData: {\r\n                        attr: {\r\n                            zIndex: 6\r\n                        },\r\n                        style: {\r\n                            fontWeight: 'bold',\r\n                            fontSize: fontSizes['noData'],\r\n                            color: '#303030'\r\n                        }\r\n                    },\r\n                    subtitle: {\r\n                        text: subtitle,\r\n                        style: {\r\n                            fontWeight: 'bold',\r\n                            // color: 'black',\r\n                            fontSize: fontSizes['subtitle']\r\n                        }\r\n                    },\r\n                    tooltip: {\r\n                        headerFormat: '<span style=\"font-size: ' + fontSizes['tooltipHeader'] + '\">{point.key}</span><br/>',\r\n                        pointFormat: '<span style=\"color:{point.color}\">\\u25CF</span>' +\r\n                            ' {series.name}<br>Raw Value: <b>{point.p90}</b><br/>Percentile Rank: <b>{point.percentile}</b>',\r\n                        style: {\r\n                            fontSize: fontSizes['tooltip']\r\n                        }\r\n                    },\r\n                    legend: {\r\n                        enabled: false,\r\n                        borderWidth: 1,\r\n                        align: 'center',\r\n                        verticalAlign: 'bottom',\r\n                        layout: 'horizontal'\r\n                    },\r\n                    xAxis: {\r\n                        categories: selectedCategories,\r\n                        labels: {\r\n                            zIndex: 1,\r\n                            distance: isMobile === true ? 60 : 40,\r\n                            style: {\r\n                                color: 'black',\r\n                                fontSize: fontSizes['xAxisLabels'],\r\n                            },\r\n                            padding: 31\r\n                        },\r\n                        gridLineWidth: 1.5,\r\n                        gridLineColor: '#333333',\r\n                        gridZIndex: 4\r\n                    },\r\n                    series:\r\n                        series.map(function (set, i) {\r\n                            return {\r\n                                pointPadding: 0,\r\n                                groupPadding: 0,\r\n                                name: name,\r\n                                data: set,\r\n                                stickyTracking: false,\r\n                                zIndex: 0\r\n                            };\r\n                        }),\r\n                    exporting: {\r\n                        scale: 1,\r\n                        sourceWidth: 1920,\r\n                        sourceHeight: 1080,\r\n                        buttons: {\r\n                            contextButton: {\r\n                                menuItems: [\"viewFullscreen\", \"printChart\"]\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            }\r\n\r\n            return (\r\n                <div id=\"main2\">\r\n                    <SearchBar type={2}/>\r\n                    <div className=\"screen2\" id=\"content-screen\">\r\n                        <div className=\"filter\" id=\"chart-filters\">\r\n                            <div className=\"chart-filter-inputs\" id=\"chart-filter-inputs-laptop\">\r\n                                <h3>Template</h3>\r\n                                <form id=\"templates\" onChange={this.changeTemplate}>\r\n                                    <label><input type=\"radio\" name=\"template\" value=\"FW\" checked={template === \"FW\" ? true: null}/> Forward </label>\r\n                                    <label><input type=\"radio\" name=\"template\" value=\"AM\" checked={template === \"AM\" ? true: null}/> Attacking Midfielder / Winger</label>\r\n                                    <label><input type=\"radio\" name=\"template\" value=\"CM\" checked={template === \"CM\" ? true: null}/> Central / Defensive Midfielder</label>\r\n                                    <label><input type=\"radio\" name=\"template\" value=\"FB\" checked={template === \"FB\" ? true: null}/> Full-back </label>\r\n                                    <label><input type=\"radio\" name=\"template\" value=\"CB\" checked={template === \"CB\" ? true: null}/> Center-back </label>\r\n                                </form>\r\n                                <h3>Competitions</h3>\r\n                                <h4 style={{marginBottom: '10px'}}>19/20 {multipleClubs === false ? ' | ' + club : null}</h4>\r\n                                <form id=\"competitions\">\r\n                                    {competitionLabels}\r\n                                </form>\r\n                                <h3>Data Labels</h3>\r\n                                <form id=\"data-labels\" onChange={this.changeLabelType}>\r\n                                    <label className={labelType === \"raw\" ? \"selected-label\" : null}>\r\n                                        <input type=\"radio\" name=\"labelType\" value=\"raw\" checked={labelType === \"raw\" ? true: null}/> <span>Per 90 Stats</span>\r\n                                    </label>\r\n                                    <label className={labelType === \"percentiles\" ? \"selected-label\" : null}>\r\n                                        <input type=\"radio\" name=\"labelType\" value=\"percentiles\" checked={labelType === \"percentiles\" ? true: null}/> <span>Percentile Ranks</span>\r\n                                    </label>\r\n                                </form>\r\n                            </div>\r\n                            <div className=\"chart-filter-inputs\" id=\"chart-filter-inputs-mobile\">\r\n                                <div id=\"templates-container\">\r\n                                    <h3>Template</h3>\r\n                                    <form id=\"templates\" onChange={this.changeTemplate}>\r\n                                        <label className={template === \"FW\" ? \"selected-label\" : null}>\r\n                                            <input type=\"radio\" name=\"template\" value=\"FW\" checked={template === \"FW\" ? true: null}/> <span>Forward</span>\r\n                                        </label>\r\n                                        <label className={template === \"AM\" ? \"selected-label\" : null}>\r\n                                            <input type=\"radio\" name=\"template\" value=\"AM\" checked={template === \"AM\" ? true: null}/> <span>Attacking Midfielder / Winger</span>\r\n                                        </label>\r\n                                        <label className={template === \"CM\" ? \"selected-label\" : null}>\r\n                                            <input type=\"radio\" name=\"template\" value=\"CM\" checked={template === \"CM\" ? true: null}/> <span>Central / Defensive Midfielder</span>\r\n                                        </label>\r\n                                        <label className={template === \"FB\" ? \"selected-label\" : null}>\r\n                                            <input type=\"radio\" name=\"template\" value=\"FB\" checked={template === \"FB\" ? true: null}/> <span>Full-back</span>\r\n                                        </label>\r\n                                        <label className={template === \"CB\" ? \"selected-label\" : null}>\r\n                                            <input type=\"radio\" name=\"template\" value=\"CB\" checked={template === \"CB\" ? true: null}/> <span>Center-back</span>\r\n                                        </label>\r\n                                    </form>\r\n                                </div>\r\n                                <div id=\"competitions-container\">\r\n                                    <h3 style={{marginBottom: '0px'}}>Competitions</h3>\r\n                                    <h4 style={{marginBottom: '20px'}}>19/20 {multipleClubs === false ? ' | ' + club : null}</h4>\r\n                                    <form id=\"competitions\">\r\n                                        {competitionLabels}\r\n                                    </form>\r\n                                </div>\r\n                                <h3>Data Labels</h3>\r\n                                <form id=\"data-labels\" onChange={this.changeLabelType}>\r\n                                    <label className={labelType === \"raw\" ? \"selected-label\" : null}>\r\n                                        <input type=\"radio\" name=\"labelType\" value=\"raw\" checked={labelType === \"raw\" ? true: null}/> <span>Per 90 Stats</span>\r\n                                    </label>\r\n                                    <label className={labelType === \"percentiles\" ? \"selected-label\" : null}>\r\n                                        <input type=\"radio\" name=\"labelType\" value=\"percentiles\" checked={labelType === \"percentiles\" ? true: null}/> <span>Percentile Ranks</span>\r\n                                    </label>\r\n                                </form>\r\n                            </div>\r\n                            <div id=\"filter-buttons\">\r\n                                <div className=\"filter-button\">\r\n                                    <button id=\"toggleCreditsButton\" type=\"button\" onClick={this.toggleCreditsPosition}>Toggle Credits Position</button>\r\n                                </div>\r\n                                <div className=\"filter-button\">\r\n                                    <button id=\"exportButton\" type=\"button\" onClick={this.exportAsImage}>Export Chart as PNG</button>\r\n                                </div>\r\n                                <div className=\"filter-button\">\r\n                                    <button id=\"compareButton\" type=\"button\" disabled={true}>Compare To...</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"result\" id=\"chart\">\r\n                            <HighchartsReact\r\n                                constructorType={\"chart\"}\r\n                                highcharts={Highcharts}\r\n                                containerProps={{style: {width: '100%'}}}\r\n                                options={options}\r\n                                ref={this.chartRef}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default Stats;\r\n","import React, { Component } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport {isMobileOnly} from 'react-device-detect';\r\nimport $ from 'jquery';\r\n\r\nimport Home from './pages/Home';\r\nimport Search from './pages/Search';\r\nimport Stats from './pages/Stats';\r\n\r\nimport './stylesheets/App.css';\r\nif (isMobileOnly){\r\n    require('./stylesheets/Mobile.css');\r\n}\r\n\r\nclass App extends Component {\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n        this.state = {\r\n            percentiles: {},\r\n            isMobile: false\r\n        };\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        $(function() {\r\n\r\n            if (isMobileOnly){\r\n                var height = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\r\n                $(\"html, body, #root, #root-container\").css({\"height\": height});\r\n            }\r\n\r\n        });\r\n\r\n        this.getPercentiles()\r\n\r\n    }\r\n\r\n    getPercentiles = () => {\r\n\r\n        fetch('/api/percentiles', {\r\n            method: 'post',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n\r\n            })\r\n        })\r\n        .then(res => {\r\n            return res.json()\r\n        })\r\n        .then(percentiles => this.setState({percentiles: percentiles}))\r\n        .catch();\r\n\r\n    };\r\n\r\n    render() {\r\n\r\n        const App = () => (\r\n            <div id=\"root-container\">\r\n                <Switch>\r\n                    <Route exact path='/' component={Home}/>\r\n                    <Route exact path='/' render={(props) => <Home {...props} isMobile={isMobileOnly}/>}/>\r\n                    <Route path='/search/:query/:searchByClub?' component={Search}/>\r\n                    <Route path='/stats/:URL' render={(props) => <Stats {...props} percentiles={this.state.percentiles} isMobile={isMobileOnly}/>}/>\r\n                </Switch>\r\n            </div>\r\n        );\r\n        return (\r\n            <Switch>\r\n              <App/>\r\n            </Switch>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport './index.css';\r\nimport App from './App/App';\r\n\r\nrender((\r\n    <BrowserRouter>\r\n        <App/>\r\n    </BrowserRouter>\r\n), document.getElementById('root'));"],"sourceRoot":""}