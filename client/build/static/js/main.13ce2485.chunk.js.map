{"version":3,"sources":["App/components/SearchBar.js","App/pages/Home.js","App/components/LoadingSpinner.js","App/components/SearchResult.js","App/pages/Search.js","App/pages/Stats.js","App/App.js","index.js"],"names":["SearchBar","props","state","query","type","handleChange","bind","handleSubmit","event","this","setState","target","value","preventDefault","history","push","id","onSubmit","placeholder","autoComplete","onChange","Component","withRouter","Home","className","LoadingSpinner","SearchResult","name","club","nationality","URL","replace","split","join","all","handleClick","onClick","tabIndex","Search","getSearchResults","fetch","method","headers","body","JSON","stringify","then","res","ok","json","Error","searchResults","processSearchResults","catch","error","isLoading","match","params","filteredSearchResults","clubs","nationalities","filterByClub","nextProps","nextContext","i","currentResult","temp1","label","temp2","filter","e","length","selectedOption","parse","message","cards","current","isClearable","options","HighchartsMore","Highcharts","HighchartsParallel","Stats","getStats","response","processStats","allStats","percentiles","allCompetitions","selectedCompetitions","categories","template","url","isAll","multipleLeagues","changeTemplate","changeSelectedCompetitions","selectAllCompetitions","clearAllCompetitions","filterStats","calculateChartInput","percentRank","roundNumbers","insertChartInput","x","startsWith","lastUpdated","stats","Object","keys","clickedCompetition","includes","splice","indexOf","setCategories","filteredStats","competition","stat","percentileArrays","statsPer90","key","array","isFinite","l","someStats","precision","Math","round","chartInput","y","p90","isIncluded","substring","checked","series","subtitle","selectedStats","toLocaleString","chart","style","fontFamily","parallelCoordinates","parallelAxes","labels","enabled","color","fontSize","gridZIndex","lineWidth","endOnTick","showFirstLabel","showLastLabel","min","max","tickPositions","polar","hideDelay","spacingLeft","spacingRight","marginLeft","marginRight","marginBottom","events","load","title","element","onclick","window","open","credits","text","href","plotOptions","Color","getOptions","colors","setOpacity","get","dataLabels","inside","fontWeight","textOutline","format","padding","allowOverlap","margin","pane","startAngle","lang","noData","tooltip","pointFormat","legend","borderWidth","align","verticalAlign","layout","xAxis","distance","gridLineWidth","gridLineColor","map","set","pointPadding","groupPadding","data","stickyTracking","zIndex","exporting","scale","sourceWidth","sourceHeight","buttons","contextButton","menuItems","disabled","constructorType","highcharts","containerProps","width","App","FWPercentiles","AMPercentiles","CMPercentiles","FBPercentiles","CBPercentiles","$","isMobile","css","h","document","documentElement","clientHeight","innerHeight","exact","path","component","render","getElementById"],"mappings":"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","file":"static/js/main.13ce2485.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass SearchBar extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            query: this.props.query,\r\n            type: this.props.type\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({query: event.target.value});\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        this.props.history.push('/search/' + this.state.query);\r\n    }\r\n\r\n    render() {\r\n\r\n        const { type } = this.state;\r\n        let id;\r\n        if (type === 1){\r\n            id=\"searchbar-container\"\r\n        }\r\n        else {\r\n            id=\"searchbar-container2\"\r\n        }\r\n\r\n        return (\r\n            <div id={id}>\r\n                <form id=\"searchbar\" onSubmit={this.handleSubmit}>\r\n                    <input type=\"text\" id=\"query\" value={this.state.query} placeholder=\"Search for a player...\" autoComplete=\"off\" onChange={this.handleChange}/>\r\n                </form>\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default withRouter (SearchBar);","import React, { Component } from 'react';\r\n\r\nimport SearchBar from \"../components/SearchBar\"\r\n\r\n\r\nclass Home extends Component {\r\n    render() {\r\n        return (\r\n            <div id=\"main\">\r\n                <SearchBar type={1}/>\r\n                <div className=\"screen\" id=\"landing-screen\">\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Home;","import React, { Component } from 'react';\r\n\r\nclass LoadingSpinner extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"main\">\r\n                <div className=\"screen\" id=\"loading-screen\">\r\n                    <div className=\"loader\">Loading...</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\nexport default (LoadingSpinner);","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass SearchResult extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            name: this.props.name,\r\n            club: this.props.club,\r\n            nationality: this.props.nationality,\r\n            URL: this.props.URL.replace(\"https://www.whoscored.com/\", \"\")\r\n                .replace(\"History\", \"Show\")\r\n                .split(\"/\")\r\n                .join(\"_\"),\r\n            all: this.props.all\r\n        };\r\n\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    handleClick(event) {\r\n        event.preventDefault();\r\n        this.props.history.push('/stats/' + this.state.URL);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div onClick={this.handleClick} tabIndex=\"0\" className=\"search-result\">\r\n                <div className=\"name\">{this.state.name}</div>\r\n                <div className=\"club\">Club: {this.state.club}</div>\r\n                <div className=\"nationality\">Nationality: {this.state.nationality}</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default withRouter (SearchResult);","import React, { Component } from 'react';\r\n\r\nimport SearchBar from \"../components/SearchBar\";\r\nimport LoadingSpinner from \"../components/LoadingSpinner\";\r\nimport SearchResult from \"../components/SearchResult\";\r\n\r\nimport Select from 'react-select';\r\n\r\n\r\nclass Search extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        let { query } = props.match.params;\r\n        this.state = {\r\n            isLoading: false,\r\n            error: null,\r\n            query: query,\r\n            searchResults: [],\r\n            filteredSearchResults: [],\r\n            clubs: [],\r\n            nationalities: [],\r\n        };\r\n\r\n        this.filterByClub = this.filterByClub.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            isLoading: true\r\n        }, () => {\r\n            this.getSearchResults();\r\n        });\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps, nextContext) {\r\n        let { query } = nextProps.match.params;\r\n        this.setState({\r\n            isLoading: true,\r\n            query: query\r\n        }, () => {\r\n            this.getSearchResults();\r\n        });\r\n    }\r\n\r\n    processSearchResults(searchResults){\r\n        let clubs = [];\r\n        let nationalities = [];\r\n        for (let i=0; i<searchResults.length; i++){\r\n            let currentResult = searchResults[i];\r\n            let temp1 = {\r\n                value: currentResult.club,\r\n                label: currentResult.club\r\n            };\r\n            let temp2 = {\r\n                value: currentResult.nationality,\r\n                label: currentResult.nationality\r\n            };\r\n            if (!clubs.filter(e => e.value === temp1.value).length > 0){\r\n                clubs.push(temp1);\r\n            }\r\n            if (!nationalities.filter(e => e.value === temp2.value).length > 0){\r\n                nationalities.push(temp2);\r\n            }\r\n        }\r\n        this.setState({\r\n            searchResults: searchResults,\r\n            filteredSearchResults: searchResults,\r\n            clubs: clubs,\r\n            nationalities: nationalities,\r\n            isLoading: false,\r\n            error: null\r\n        })\r\n    }\r\n\r\n    getSearchResults = () => {\r\n\r\n        fetch('/api/search', {\r\n            method: 'post',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                \"query\": this.state.query\r\n            })\r\n        })\r\n        .then(res => {\r\n            if (res.ok) {\r\n                return res.json()\r\n            }\r\n            else {\r\n               throw new Error(\"No results found\")\r\n            }\r\n        })\r\n        .then(searchResults => this.processSearchResults(searchResults))\r\n        .catch(error => this.setState({error, isLoading: false}));\r\n\r\n    };\r\n\r\n    filterByClub(selectedOption){\r\n\r\n        let searchResults = JSON.parse(JSON.stringify(this.state.searchResults));\r\n        let filteredSearchResults = [];\r\n\r\n        if (selectedOption === null){\r\n            filteredSearchResults = searchResults;\r\n        }\r\n\r\n        else {\r\n            for (let i=0; i<searchResults.length; i++){\r\n                if (selectedOption.value === searchResults[i].club){\r\n                    filteredSearchResults.push(searchResults[i]);\r\n                }\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            filteredSearchResults: []\r\n        }, () => {\r\n            this.setState({\r\n                filteredSearchResults: filteredSearchResults\r\n            })\r\n        });\r\n\r\n    }\r\n\r\n    render() {\r\n        let {error, isLoading, filteredSearchResults, clubs} = this.state;\r\n\r\n        if (isLoading) {\r\n            return (\r\n                <LoadingSpinner/>\r\n            )\r\n        }\r\n\r\n        else if (error !== null) {\r\n            return (\r\n                <div id=\"main\">\r\n                    <SearchBar type={1} query={this.state.query}/>\r\n                    <div className=\"screen\" id=\"error-screen\">\r\n                        <p>{error.message}</p>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        else {\r\n\r\n            let cards = [];\r\n            for (let i=0; i<filteredSearchResults.length; i++){\r\n                let current = filteredSearchResults[i];\r\n                cards.push(\r\n                    <SearchResult\r\n                        name={current.name}\r\n                        club={current.club}\r\n                        nationality={current.nationality}\r\n                        URL={current.URL}\r\n                        all={current.all}\r\n                    />\r\n                )\r\n            }\r\n            return (\r\n                <div id=\"main\">\r\n                    <SearchBar type={1} query={this.state.query}/>\r\n                    <div className=\"screen\" id=\"search-screen\">\r\n                        <div className=\"filter\" id=\"search-filters\">\r\n                            <h3>Filter Search Results</h3>\r\n                            <div id=\"search-filter-inputs\">\r\n                                <Select\r\n                                    placeholder={\"Filter by club\"}\r\n                                    onChange={this.filterByClub}\r\n                                    isClearable\r\n                                    options={clubs}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"result\" id=\"search-results\">\r\n                            {cards}\r\n                            {/*<SearchResult*/}\r\n                            {/*    name={\"Test\"}*/}\r\n                            {/*    club={\"Test\"}*/}\r\n                            {/*    nationality={\"Test\"}*/}\r\n                            {/*    URL={\"test\"}*/}\r\n                            {/*    all={\"test\"}*/}\r\n                            {/*/>*/}\r\n                            {/*<SearchResult*/}\r\n                            {/*    name={\"Test\"}*/}\r\n                            {/*    club={\"Test\"}*/}\r\n                            {/*    nationality={\"Test\"}*/}\r\n                            {/*    URL={\"test\"}*/}\r\n                            {/*    all={\"test\"}*/}\r\n                            {/*/>*/}\r\n                            {/*<SearchResult*/}\r\n                            {/*    name={\"Test\"}*/}\r\n                            {/*    club={\"Test\"}*/}\r\n                            {/*    nationality={\"Test\"}*/}\r\n                            {/*    URL={\"test\"}*/}\r\n                            {/*    all={\"test\"}*/}\r\n                            {/*/>*/}\r\n                            {/*<SearchResult*/}\r\n                            {/*    name={\"Test\"}*/}\r\n                            {/*    club={\"Test\"}*/}\r\n                            {/*    nationality={\"Test\"}*/}\r\n                            {/*    URL={\"test\"}*/}\r\n                            {/*    all={\"test\"}*/}\r\n                            {/*/>*/}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default Search;","import React, { Component } from 'react';\r\n\r\nimport SearchBar from \"../components/SearchBar\";\r\nimport LoadingSpinner from \"../components/LoadingSpinner\";\r\nimport Highcharts from 'highcharts/highstock'\r\nimport HighchartsMore from 'highcharts/highcharts-more'\r\nimport HighchartsParallel from 'highcharts/modules/parallel-coordinates'\r\nimport HighchartsReact from 'highcharts-react-official'\r\n\r\nHighchartsMore(Highcharts);\r\nHighchartsParallel(Highcharts);\r\n\r\nclass Stats extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        let categories = [\r\n            'Non-Penalty Goals',\r\n            'Non-Penalty Shots',\r\n            'Conversion Rate',\r\n            'Shots on Target %',\r\n            'Assists',\r\n            'Key Passes',\r\n            'Completed Passes',\r\n            'Pass Completion %',\r\n            'Successful Dribbles',\r\n            'Dribble Success %',\r\n            'Turnovers',\r\n            'Recoveries',\r\n        ];\r\n        this.state = {\r\n            isLoading: false,\r\n            allStats: {},\r\n            percentiles: this.props.percentiles,\r\n            allCompetitions: [],\r\n            selectedCompetitions: [],\r\n            categories: categories,\r\n            template: \"FW\",\r\n            name: '',\r\n            url: '',\r\n            isAll: false,\r\n            multipleLeagues: false\r\n        };\r\n\r\n        this.processStats = this.processStats.bind(this);\r\n        this.changeTemplate = this.changeTemplate.bind(this);\r\n        this.changeSelectedCompetitions = this.changeSelectedCompetitions.bind(this);\r\n        this.selectAllCompetitions = this.selectAllCompetitions.bind(this);\r\n        this.clearAllCompetitions = this.clearAllCompetitions.bind(this);\r\n        this.filterStats = this.filterStats.bind(this);\r\n        this.calculateChartInput = this.calculateChartInput.bind(this);\r\n        this.percentRank = this.percentRank.bind(this);\r\n        this.roundNumbers = this.roundNumbers.bind(this);\r\n        this.insertChartInput = this.insertChartInput.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            isLoading: true\r\n        }, () => {\r\n            this.getStats();\r\n        });\r\n    }\r\n\r\n    getStats = () => {\r\n        const { URL } = this.props.match.params;\r\n\r\n        fetch('/api/stats', {\r\n            method: 'post',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                \"URL\": URL\r\n            })\r\n        })\r\n        .then(res => res.json())\r\n        .then(response => this.processStats(response))\r\n    };\r\n\r\n    processStats(response) {\r\n        let multipleLeagues = this.state.allCompetitions.filter(x => x.startsWith(\"League | \")).length > 1;\r\n        this.setState({\r\n            url: response.url,\r\n            name: response.name,\r\n            lastUpdated: response.lastUpdated,\r\n            allStats: response.stats,\r\n            allCompetitions: Object.keys(response.stats),\r\n            selectedCompetitions: Object.keys(response.stats),\r\n            isLoading: false,\r\n            multipleLeagues: multipleLeagues\r\n        }, () => {\r\n\r\n        });\r\n    }\r\n\r\n    changeSelectedCompetitions(event){\r\n\r\n        let selectedCompetitions = this.state.selectedCompetitions;\r\n        let clickedCompetition = event.target.value;\r\n\r\n        if (selectedCompetitions.includes(clickedCompetition)){\r\n            selectedCompetitions.splice(selectedCompetitions.indexOf(clickedCompetition), 1);\r\n        }\r\n        else{\r\n            selectedCompetitions.push(clickedCompetition);\r\n        }\r\n\r\n        this.setState({\r\n            selectedCompetitions: selectedCompetitions\r\n        });\r\n\r\n    }\r\n\r\n    selectAllCompetitions(event){\r\n\r\n        let allCompetitions = JSON.parse(JSON.stringify(this.state.allCompetitions));\r\n\r\n        this.setState({\r\n            selectedCompetitions: allCompetitions\r\n        });\r\n\r\n    }\r\n\r\n    clearAllCompetitions(event){\r\n\r\n        this.setState({\r\n            selectedCompetitions: []\r\n        });\r\n\r\n    }\r\n\r\n    changeTemplate(event){\r\n        let template = event.target.value;\r\n\r\n        this.setState({\r\n            template: template\r\n        }, () => {\r\n            this.setCategories();\r\n        });\r\n\r\n    }\r\n\r\n    setCategories() {\r\n        let template = this.state.template;\r\n\r\n        let categories = [];\r\n        switch (template) {\r\n            case \"FW\":\r\n                categories = [\r\n                    'Non-Penalty Goals',\r\n                    'Non-Penalty Shots',\r\n                    'Conversion Rate',\r\n                    'Shots on Target %',\r\n                    'Assists',\r\n                    'Key Passes',\r\n                    'Completed Passes',\r\n                    'Pass Completion %',\r\n                    'Successful Dribbles',\r\n                    'Dribble Success %',\r\n                    'Turnovers',\r\n                    'Recoveries',\r\n                ];\r\n                break;\r\n            case \"AM\":\r\n                categories = [\r\n                    'Non-Penalty Goals',\r\n                    'Non-Penalty Shots',\r\n                    'Assists',\r\n                    'Key Passes',\r\n                    'Completed Passes',\r\n                    'Pass Completion %',\r\n                    'Completed Crosses',\r\n                    'Cross Completion %',\r\n                    'Successful Dribbles',\r\n                    'Dribble Success %',\r\n                    'Turnovers',\r\n                    'Recoveries',\r\n                ];\r\n                break;\r\n            case \"CM\":\r\n                categories = [\r\n                    'Non-Penalty Goals+Assists',\r\n                    'Key Passes',\r\n                    'Completed Passes',\r\n                    'Pass Completion %',\r\n                    'Completed Long Passes',\r\n                    'Long Pass Completion %',\r\n                    'Successful Dribbles',\r\n                    'Dribble Success %',\r\n                    'Tackles Won',\r\n                    'Tackle Win %',\r\n                    'Fouls Committed',\r\n                    'Interceptions'\r\n                ];\r\n                break;\r\n            case \"FB\":\r\n                categories = [\r\n                    'Assists',\r\n                    'Key Passes',\r\n                    'Completed Passes',\r\n                    'Pass Completion %',\r\n                    'Completed Crosses',\r\n                    'Cross Completion %',\r\n                    'Successful Dribbles',\r\n                    'Dribble Success %',\r\n                    'Tackles Won',\r\n                    'Tackle Win %',\r\n                    'Fouls Committed',\r\n                    'Interceptions',\r\n                    'Aerial Duel Win %'\r\n                ];\r\n                break;\r\n            case \"CB\":\r\n                categories = [\r\n                    'Completed Passes',\r\n                    'Pass Completion %',\r\n                    'Completed Long Passes',\r\n                    'Long Pass Completion %',\r\n                    'Tackles Won',\r\n                    'Tackle Win %',\r\n                    'Fouls Committed',\r\n                    'Interceptions',\r\n                    'Blocks',\r\n                    'Clearances',\r\n                    'Aerial Duels Won',\r\n                    'Aerial Duel Win %'\r\n                ];\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            categories: categories\r\n        })\r\n\r\n    }\r\n\r\n    filterStats(stats){\r\n        let filteredStats = {};\r\n        let selectedCompetitions = this.state.selectedCompetitions;\r\n        for (let competition in stats){\r\n            if (selectedCompetitions.includes(competition)) {\r\n                for (let stat in stats[competition]) {\r\n                    if (!(stat in filteredStats)) {\r\n                        filteredStats[stat] = stats[competition][stat];\r\n                    } else {\r\n                        filteredStats[stat] += stats[competition][stat];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return filteredStats;\r\n    }\r\n\r\n    calculateChartInput(filteredStats, percentileArrays){\r\n        let template = this.state.template;\r\n        let statsPer90 = {};\r\n        let percentiles = {};\r\n        switch (template){\r\n            case \"FW\":\r\n                statsPer90['goals'] = filteredStats['goals'] / (filteredStats['minutes']/90);\r\n                statsPer90['shots'] = (filteredStats['shots']  - filteredStats['penaltiesTaken']) / (filteredStats['minutes']/90);\r\n                statsPer90['conversionRate'] = (filteredStats['goals'] / (filteredStats['shots']  - filteredStats['penaltiesTaken'])) * 100;\r\n                statsPer90['shotsOnTarget'] = ((filteredStats['shotsOnTarget'] - filteredStats['penaltiesTaken']) / (filteredStats['shots'] - filteredStats['penaltiesTaken'])) * 100;\r\n                statsPer90['assists'] = filteredStats['assists'] / (filteredStats['minutes']/90);\r\n                statsPer90['keyPasses'] = filteredStats['keyPasses'] / (filteredStats['minutes']/90);\r\n                statsPer90['succPasses'] = filteredStats['succPasses'] / (filteredStats['minutes']/90);\r\n                statsPer90['passingRate'] = (filteredStats['succPasses'] / filteredStats['totalPasses']) * 100;\r\n                statsPer90['succDribbles'] = filteredStats['succDribbles'] / (filteredStats['minutes']/90);\r\n                statsPer90['dribbleRate'] = (filteredStats['succDribbles'] / filteredStats['totalDribbles']) * 100;\r\n                statsPer90['possessionLosses'] = filteredStats['possessionLosses'] / (filteredStats['minutes']/90);\r\n                statsPer90['recoveries'] = (filteredStats['tackles'] / (filteredStats['minutes']/90)) + (filteredStats['interceptions'] / (filteredStats['minutes']/90));\r\n                for (let key in statsPer90){\r\n                    percentiles[key] = this.percentRank(percentileArrays[0][key], statsPer90[key]) * 100\r\n                }\r\n                percentiles['possessionLosses'] = 100 - percentiles['possessionLosses'];\r\n                break;\r\n            case \"AM\":\r\n                statsPer90['goals'] = filteredStats['goals'] / (filteredStats['minutes']/90);\r\n                statsPer90['shots'] = (filteredStats['shots']  - filteredStats['penaltiesTaken']) / (filteredStats['minutes']/90);\r\n                statsPer90['assists'] = filteredStats['assists'] / (filteredStats['minutes']/90);\r\n                statsPer90['keyPasses'] = filteredStats['keyPasses'] / (filteredStats['minutes']/90);\r\n                statsPer90['succPasses'] = filteredStats['succPasses'] / (filteredStats['minutes']/90);\r\n                statsPer90['passingRate'] = (filteredStats['succPasses'] / filteredStats['totalPasses']) * 100;\r\n                statsPer90['succCrosses'] = filteredStats['succCrosses'] / (filteredStats['minutes']/90);\r\n                statsPer90['crossRate'] = (filteredStats['succCrosses'] / filteredStats['totalCrosses']) * 100;\r\n                statsPer90['succDribbles'] = filteredStats['succDribbles'] / (filteredStats['minutes']/90);\r\n                statsPer90['dribbleRate'] = (filteredStats['succDribbles'] / filteredStats['totalDribbles']) * 100;\r\n                statsPer90['possessionLosses'] = filteredStats['possessionLosses'] / (filteredStats['minutes']/90);\r\n                statsPer90['recoveries'] = (filteredStats['tackles'] / (filteredStats['minutes']/90)) + (filteredStats['interceptions'] / (filteredStats['minutes']/90));\r\n                for (let key in statsPer90){\r\n                    percentiles[key] = this.percentRank(percentileArrays[1][key], statsPer90[key]) * 100\r\n                }\r\n                percentiles['possessionLosses'] = 100 - percentiles['possessionLosses'];\r\n                break;\r\n            case \"CM\":\r\n                statsPer90['goalsPlusAssists'] = (filteredStats['goals'] + filteredStats['assists']) / (filteredStats['minutes']/90);\r\n                statsPer90['keyPasses'] = filteredStats['keyPasses'] / (filteredStats['minutes']/90);\r\n                statsPer90['succPasses'] = filteredStats['succPasses'] / (filteredStats['minutes']/90);\r\n                statsPer90['passingRate'] = (filteredStats['succPasses'] / filteredStats['totalPasses']) * 100;\r\n                statsPer90['succLongPasses'] = filteredStats['succLongPasses'] / (filteredStats['minutes']/90);\r\n                statsPer90['longPassingRate'] = (filteredStats['succLongPasses'] / filteredStats['totalLongPasses']) * 100;\r\n                statsPer90['succDribbles'] = filteredStats['succDribbles'] / (filteredStats['minutes']/90);\r\n                statsPer90['dribbleRate'] = (filteredStats['succDribbles'] / filteredStats['totalDribbles']) * 100;\r\n                statsPer90['tackles'] = (filteredStats['tackles'] / (filteredStats['minutes']/90));\r\n                statsPer90['tackleRate'] = (filteredStats['tackles'] / (filteredStats['tackles'] + filteredStats['dribbledPast'])) *100;\r\n                statsPer90['fouls'] = filteredStats['fouls'] / (filteredStats['minutes']/90);\r\n                statsPer90['interceptions'] = (filteredStats['interceptions'] / (filteredStats['minutes']/90));\r\n                for (let key in statsPer90){\r\n                    percentiles[key] = this.percentRank(percentileArrays[2][key], statsPer90[key]) * 100\r\n                }\r\n                percentiles['fouls'] = 100 - percentiles['fouls'];\r\n                break;\r\n            case \"FB\":\r\n                statsPer90['assists'] = filteredStats['assists'] / (filteredStats['minutes']/90);\r\n                statsPer90['keyPasses'] = filteredStats['keyPasses'] / (filteredStats['minutes']/90);\r\n                statsPer90['succPasses'] = filteredStats['succPasses'] / (filteredStats['minutes']/90);\r\n                statsPer90['passingRate'] = (filteredStats['succPasses'] / filteredStats['totalPasses']) * 100;\r\n                statsPer90['succCrosses'] = filteredStats['succCrosses'] / (filteredStats['minutes']/90);\r\n                statsPer90['crossRate'] = (filteredStats['succCrosses'] / filteredStats['totalCrosses']) * 100;\r\n                statsPer90['succDribbles'] = filteredStats['succDribbles'] / (filteredStats['minutes']/90);\r\n                statsPer90['dribbleRate'] = (filteredStats['succDribbles'] / filteredStats['totalDribbles']) * 100;\r\n                statsPer90['tackles'] = (filteredStats['tackles'] / (filteredStats['minutes']/90));\r\n                statsPer90['tackleRate'] = (filteredStats['tackles'] / (filteredStats['tackles'] + filteredStats['dribbledPast'])) *100;\r\n                statsPer90['fouls'] = filteredStats['fouls'] / (filteredStats['minutes']/90);\r\n                statsPer90['interceptions'] = (filteredStats['interceptions'] / (filteredStats['minutes']/90));\r\n                for (let key in statsPer90){\r\n                    percentiles[key] = this.percentRank(percentileArrays[3][key], statsPer90[key]) * 100\r\n                }\r\n                percentiles['fouls'] = 100 - percentiles['fouls'];\r\n                break;\r\n            case \"CB\":\r\n                statsPer90['succPasses'] = filteredStats['succPasses'] / (filteredStats['minutes']/90);\r\n                statsPer90['passingRate'] = (filteredStats['succPasses'] / filteredStats['totalPasses']) * 100;\r\n                statsPer90['succLongPasses'] = filteredStats['succLongPasses'] / (filteredStats['minutes']/90);\r\n                statsPer90['longPassingRate'] = (filteredStats['succLongPasses'] / filteredStats['totalLongPasses']) * 100;\r\n                statsPer90['tackles'] = (filteredStats['tackles'] / (filteredStats['minutes']/90));\r\n                statsPer90['tackleRate'] = (filteredStats['tackles'] / (filteredStats['tackles'] + filteredStats['dribbledPast'])) *100;\r\n                statsPer90['fouls'] = filteredStats['fouls'] / (filteredStats['minutes']/90);\r\n                statsPer90['interceptions'] = (filteredStats['interceptions'] / (filteredStats['minutes']/90));\r\n                statsPer90['blocks'] = (filteredStats['blocks'] / (filteredStats['minutes']/90));\r\n                statsPer90['clearances'] = filteredStats['clearances'] / (filteredStats['minutes']/90);\r\n                statsPer90['succAerialDuels'] = filteredStats['succAerialDuels'] / (filteredStats['minutes']/90);\r\n                statsPer90['aerialDuelRate'] = (filteredStats['succAerialDuels'] / filteredStats['totalAerialDuels']) * 100;\r\n                for (let key in statsPer90){\r\n                    percentiles[key] = this.percentRank(percentileArrays[4][key], statsPer90[key]) * 100\r\n                }\r\n                percentiles['fouls'] = 100 - percentiles['fouls'];\r\n                break;\r\n        }\r\n        return this.insertChartInput(statsPer90, percentiles);\r\n    }\r\n\r\n    percentRank(array, value) {\r\n        if (!isFinite(value)){\r\n            value = 0;\r\n        }\r\n        for (let i = 0, l = array.length; i < l; i++) {\r\n            if (value < array[i]) {\r\n                while (i < l && value === array[i]) i++;\r\n                if (i === 0) return 0;\r\n                if (value !== array[i-1]) {\r\n                    i += (value - array[i-1]) / (array[i] - array[i-1]);\r\n                }\r\n                return i / l;\r\n            }\r\n        }\r\n        return 1;\r\n    }\r\n\r\n    roundNumbers(someStats, precision){\r\n        for (let stat in someStats){\r\n            if (isFinite(someStats[stat])) {\r\n                someStats[stat] = Math.round(someStats[stat] * (10**precision)) / (10**precision);\r\n            }\r\n            else {\r\n                someStats[stat] = 0;\r\n            }\r\n        }\r\n        return someStats;\r\n    }\r\n\r\n    insertChartInput(statsPer90, percentiles) {\r\n        statsPer90 = this.roundNumbers(statsPer90, 2);\r\n        percentiles = this.roundNumbers(percentiles, 0);\r\n        let chartInput = [];\r\n        let i = 0;\r\n        for (let key in percentiles){\r\n            chartInput[i] = {y: percentiles[key], p90: statsPer90[key]};\r\n            i++;\r\n        }\r\n        return chartInput;\r\n    }\r\n\r\n    render() {\r\n\r\n        let {name, url, lastUpdated, selectedCompetitions, template, categories, allStats, percentiles, isLoading, multipleLeagues} = this.state;\r\n\r\n        if (isLoading) {\r\n            return (\r\n                <LoadingSpinner/>\r\n            )\r\n        }\r\n\r\n        else {\r\n            let allCompetitions = this.state.allCompetitions;\r\n            let cards = [];\r\n            for (let i=0; i<allCompetitions.length; i++){\r\n                let current = allCompetitions[i];\r\n                let isIncluded = selectedCompetitions.includes(current);\r\n                let label = current;\r\n                if (!multipleLeagues){\r\n                    label = label.substring(0, label.indexOf(\"|\")-1)\r\n                }\r\n                cards.push(\r\n                    <label>\r\n                        <input className=\"competition\"\r\n                               type=\"checkbox\"\r\n                               value={current}\r\n                               onChange={this.changeSelectedCompetitions}\r\n                               checked={isIncluded}\r\n                        /> {\"  \" + label}\r\n                    </label>\r\n                )\r\n            }\r\n\r\n            if (percentiles.length !== 0 && Object.keys(allStats).length !== 0 && categories !== []) {\r\n\r\n                let selectedStats = this.filterStats(allStats);\r\n                let series;\r\n                let subtitle;\r\n                if (selectedCompetitions.length !== 0){\r\n                    let chartInput = this.calculateChartInput(selectedStats, percentiles);\r\n                    series = [chartInput];\r\n                    subtitle = \"Percentile Rank Bars (w/ p90 Raw Values)<br>\";\r\n                    switch (template) {\r\n                        case \"FW\":\r\n                            subtitle += \"Forward Template  ║  Minutes Played: \";\r\n                            break;\r\n                        case \"AM\":\r\n                            subtitle += \"Attacking Midfielder / Winger Template  ║  Minutes Played: \";\r\n                            break;\r\n                        case \"CM\":\r\n                            subtitle += \"Central / Defensive Midfielder Template  ║  Minutes Played: \";\r\n                            break;\r\n                        case \"FB\":\r\n                            subtitle += \"Full-back Template  ║  Minutes Played: \";\r\n                            break;\r\n                        case \"CB\":\r\n                            subtitle += \"Center-back Template  ║  Minutes Played: \";\r\n                            break;\r\n                    }\r\n\r\n                    subtitle += selectedStats['minutes'].toLocaleString();\r\n                    subtitle += \"<br>Last Updated: \" + lastUpdated + \" UTC\";\r\n                }\r\n\r\n                else {\r\n                    series = [];\r\n                    subtitle = \"-<br>-<br>-\";\r\n                }\r\n\r\n\r\n                var options = {\r\n                    chart: {\r\n                        style: {\r\n                            fontFamily: 'sans-serif'\r\n                        },\r\n                        parallelCoordinates: true,\r\n                        parallelAxes: {\r\n                            labels: {\r\n                                enabled: false,\r\n                                style: {\r\n                                    color: '#444444',\r\n                                    fontSize: \"0.5em\",\r\n                                }\r\n                            },\r\n                            gridZIndex: 5,\r\n                            lineWidth: 0,\r\n                            endOnTick: true,\r\n                            showFirstLabel: false,\r\n                            showLastLabel: false,\r\n                            min: -15,\r\n                            max: 100,\r\n                            tickPositions: [-15, 0, 25, 50, 75, 100]\r\n                        },\r\n                        polar: true,\r\n                        type: 'column',\r\n                        hideDelay: 0,\r\n                        spacingLeft: 0,\r\n                        spacingRight: 0,\r\n                        marginLeft: 75,\r\n                        marginRight: 75,\r\n                        marginBottom: 30,\r\n                        events: {\r\n                            load: function() {\r\n                                this.title.element.onclick = function() {\r\n                                    window.open(url, '_blank');\r\n                                }\r\n                            },\r\n                        }\r\n                    },\r\n                    credits: {\r\n                        text: \"Percentile ranks are calculated by comparing a player to other top 5 league players who have at least 10 starts in the selected template position\",\r\n                        style: {\r\n                            fontSize: '1em'\r\n                        },\r\n                        href: ''\r\n                    },\r\n                    plotOptions: {\r\n                        series: {\r\n                            color: Highcharts.Color(Highcharts.getOptions().colors[0]).setOpacity(0.6).get(),\r\n                            dataLabels: {\r\n                                enabled: true,\r\n                                inside: true,\r\n                                style: {\r\n                                    color: \"black\",\r\n                                    fontWeight: '600',\r\n                                    fontSize: \"1.25em\",\r\n                                    textOutline: \"1.5px contrast\"\r\n                                },\r\n                                format: '{point.p90}',\r\n                                padding: 0,\r\n                                allowOverlap: true\r\n                            }\r\n                        }\r\n                    },\r\n                    title: {\r\n                        text: name + \", 19/20\",\r\n                        style: {\r\n                            fontSize: '2em',\r\n                            fontWeight: 'bold',\r\n                        },\r\n                        margin: 35\r\n                    },\r\n                    pane: {\r\n                        startAngle: -16.3636363636363636363\r\n                    },\r\n                    lang: {\r\n                        noData: \"\"\r\n                    },\r\n                    noData: {\r\n                        style: {\r\n                            fontWeight: 'bold',\r\n                            fontSize: '1.35em',\r\n                            color: '#303030'\r\n                        }\r\n                    },\r\n                    subtitle: {\r\n                        text: subtitle,\r\n                        style: {\r\n                            fontSize: '1.3em'\r\n                        }\r\n                    },\r\n                    tooltip: {\r\n                        pointFormat: '<span style=\"color:{point.color}\">\\u25CF</span>' +\r\n                            ' {series.name}<br>Raw Value: <b>{point.p90}</b><br/>Percentile Rank: <b>{point.formattedValue}</b>'\r\n                    },\r\n                    legend: {\r\n                        enabled: false,\r\n                        borderWidth: 1,\r\n                        align: 'center',\r\n                        verticalAlign: 'bottom',\r\n                        layout: 'horizontal'\r\n                    },\r\n                    xAxis: {\r\n                        categories: categories,\r\n                        labels: {\r\n                            distance: 40,\r\n                            style: {\r\n                                fontSize: '1.15em',\r\n                            }\r\n                        },\r\n                        gridLineWidth: 1.5,\r\n                        gridLineColor: '#333333',\r\n                        gridZIndex: 4\r\n                    },\r\n                    series:\r\n                        series.map(function (set, i) {\r\n                            return {\r\n                                pointPadding: 0,\r\n                                groupPadding: 0,\r\n                                name: name,\r\n                                data: set,\r\n                                stickyTracking: false,\r\n                                zIndex: 0\r\n                            };\r\n                        }),\r\n                    exporting: {\r\n                        scale: 1,\r\n                        sourceWidth: 1920,\r\n                        sourceHeight: 1080,\r\n                        buttons: {\r\n                            contextButton: {\r\n                                menuItems: [\"viewFullscreen\", \"printChart\"]\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            }\r\n\r\n            return (\r\n                <div id=\"main2\">\r\n                    <SearchBar type={2}/>\r\n                    <div className=\"screen2\" id=\"content-screen\">\r\n                        <div className=\"filter\" id=\"chart-filters\">\r\n                            <div className=\"chart-filter-inputs\" id=\"chart-filter-inputs-laptop\">\r\n                                <h3>Template</h3>\r\n                                <form id=\"templates\" onChange={this.changeTemplate}>\r\n                                    <label><input type=\"radio\" name=\"template\" value=\"FW\" checked={template === \"FW\" ? true: null}/> Forward </label>\r\n                                    <label><input type=\"radio\" name=\"template\" value=\"AM\" checked={template === \"AM\" ? true: null}/> Attacking Midfielder / Winger</label>\r\n                                    <label><input type=\"radio\" name=\"template\" value=\"CM\" checked={template === \"CM\" ? true: null}/> Central / Defensive Midfielder</label>\r\n                                    <label><input type=\"radio\" name=\"template\" value=\"FB\" checked={template === \"FB\" ? true: null}/> Full-back </label>\r\n                                    <label><input type=\"radio\" name=\"template\" value=\"CB\" checked={template === \"CB\" ? true: null}/> Center-back </label>\r\n                                </form>\r\n                                <h3>Competitions (19/20)</h3>\r\n                                <form id=\"competitions\">\r\n                                    {cards}\r\n                                </form>\r\n                            </div>\r\n                            <div className=\"chart-filter-inputs\" id=\"chart-filter-inputs-mobile\">\r\n                                <h3>Template</h3>\r\n                                <form id=\"templates\" onChange={this.changeTemplate}>\r\n                                    <label><input type=\"radio\" name=\"template\" value=\"FW\" checked={template === \"FW\" ? true: null}/> FW </label>\r\n                                    <label><input type=\"radio\" name=\"template\" value=\"AM\" checked={template === \"AM\" ? true: null}/> AM</label>\r\n                                    <label><input type=\"radio\" name=\"template\" value=\"CM\" checked={template === \"CM\" ? true: null}/> CM / DM</label>\r\n                                    <label><input type=\"radio\" name=\"template\" value=\"FB\" checked={template === \"FB\" ? true: null}/> FB </label>\r\n                                    <label><input type=\"radio\" name=\"template\" value=\"CB\" checked={template === \"CB\" ? true: null}/> CB </label>\r\n                                </form>\r\n                                <h3>Competitions (19/20)</h3>\r\n                                <form id=\"competitions\">\r\n                                    {cards}\r\n                                </form>\r\n                            </div>\r\n                            <div id=\"filter-buttons\">\r\n                                <div className=\"filter-button\">\r\n                                    <button id=\"selectAllButton\" type=\"button\" onClick={this.selectAllCompetitions}>Select All Competitions</button>\r\n                                </div>\r\n                                <div className=\"filter-button\">\r\n                                    <button id=\"clearAllButton\" type=\"button\" onClick={this.clearAllCompetitions}>Clear All Competitions</button>\r\n                                </div>\r\n                                <div className=\"filter-button\">\r\n                                    <button id=\"toggleTableButton\" type=\"button\" disabled={true}>Toggle Data Table</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"result\" id=\"chart\">\r\n                            <HighchartsReact\r\n                                constructorType={\"chart\"}\r\n                                highcharts={Highcharts}\r\n                                containerProps={{style: {width: '100%'}}}\r\n                                options={options}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default Stats;","import React, { Component } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport './App.css';\r\nimport Home from './pages/Home';\r\nimport Search from './pages/Search';\r\nimport Stats from './pages/Stats';\r\n\r\nimport $ from 'jquery';\r\n\r\nimport FWPercentiles from './percentiles/FWPercentiles';\r\nimport AMPercentiles from './percentiles/AMPercentiles';\r\nimport CMPercentiles from './percentiles/CMPercentiles';\r\nimport FBPercentiles from './percentiles/FBPercentiles';\r\nimport CBPercentiles from './percentiles/CBPercentiles';\r\n\r\n\r\nclass App extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        let percentiles = [];\r\n        percentiles.push(FWPercentiles);\r\n        percentiles.push(AMPercentiles);\r\n        percentiles.push(CMPercentiles);\r\n        percentiles.push(FBPercentiles);\r\n        percentiles.push(CBPercentiles);\r\n        this.state = {\r\n            percentiles: percentiles\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        $(function() {\r\n            var isMobile = false;\r\n\r\n            if ($('body').css('background-color') === 'rgb(255, 255, 254)') {\r\n                isMobile = true;\r\n            }\r\n\r\n            if (isMobile){\r\n                var h = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\r\n                $(\"html, body, #root, #root-container\").css({\"height\":h});\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        const App = () => (\r\n            <div id=\"root-container\">\r\n                <Switch>\r\n                    <Route exact path='/' component={Home}/>\r\n                    <Route path='/search/:query' component={Search}/>\r\n                    <Route path='/stats/:URL' render={(props) => <Stats {...props} percentiles={this.state.percentiles} />}/>\r\n                </Switch>\r\n            </div>\r\n        );\r\n        return (\r\n            <Switch>\r\n              <App/>\r\n            </Switch>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport './index.css';\r\nimport App from './App/App';\r\n\r\nrender((\r\n    <BrowserRouter>\r\n        <App/>\r\n    </BrowserRouter>\r\n), document.getElementById('root'));"],"sourceRoot":""}